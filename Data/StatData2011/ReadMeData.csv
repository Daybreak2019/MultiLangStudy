id,readme
446949,
1021622, asynchronous templates for the browser and node js use dust if you want these things async and streaming operation browser and node compatibility extended mustache and ctemplate syntax clean low level api composable templates composable templates  xhr basetemplate and else and main and and xhr title child title and title main child content and main installation  npm install dust to render compiled templates in the browser demo guide 
280943, agile development tool that monitors a directory tree and triggers a user defined action whenever an observed file is modified its most typical use is continuous testing and as such it is a more flexible alternative to autotest watchr is simple to use highly flexible evented listens for filesystem events with native c libs portable linux bsd osx solaris windows fast immediately reacts to file changes most importantly it allows running tests in an environment that is agnostic to web frameworks rails merb sinatra camping invisible test frameworks test and unit minitest rspec test and spec expectations ruby interpreters ruby  ruby  mri jruby rubinius package frameworks rubygems rip on the command line watchr path and to and script file will monitor files in the current directory tree and react to events on those files in accordance with the script the script contains a set of simple rules that map observed files to an action its dsl is a single method watch pattern action watch a regexp pattern matching paths to observe and matchdataobject and commandtorun so for example watch test and test rb and md and system ruby md  will match any test file and run it whenever it is saved a continuous testing script for a basic project could be watch test and test rb and md and system ruby md  watch lib and rb and md and system ruby test and test md  rb which in addition to running any saved test file as above will also run a lib file s associated test this mimics the equivalent autotest behaviour it s easy to see why watchr is so flexible since the whole command is custom the above actions could just as easily call jruby  ruby rubygems  ruby ilib  specrb  rbx  or any combination of these for the sake of comparison autotest runs with and usr and bin and ruby  i lib test rubygems e w test and unit test and testhelper rb test and testwatchr rb each and f and require f locking the environment into ruby  rubygems and test and unit for all tests and remember the scripts are pure ruby so feel free to add methods signal trap calls etc updates to script files are picked up on the fly no need to restart watchr so experimenting is painless the wiki  has more details and examples you might also want to take a look at watchr s own scripts specs watchr   docs watchr  and gem watchr   to get you started gem install watchr if you re on linux and bsd and have the rev  gem installed watchr will detect it and use it automatically this will make watchr evented gem install rev you can get the same evented behaviour on os x by installing ruby fsevent  gem install ruby fsevent redgreen  standalone redgreen eye candy for test results ala autotest phocus  run focused tests when running the whole file and suite is unnecessary autowatchr  provides some autotest like behavior for watchr nestor  continuous testing server for rails
886709, here s what a template written for coffeekup looks like doctype  html head meta charset utf  title title or untitled and a completely plausible website meta name description  content description if description link rel stylesheet  href and css and app css style body font family sans serif header nav section footer display block  script src and js and jquery js coffeescript document ready alert alerts suck body header h title or untitled  nav ul li a href and  home unless path is and li a href and chunky  bacon switch user role when owner  admin li a href and admin  secret stuff when vip li a href and vip  exclusive stuff else li a href and commoners  just stuff div myid myclass anotherclass  style position fixed  p divitis kills inline styling too section a helper function you built and included breadcrumb separator  clickable yes  h let s count to  p i for i in    another hypothetical helper formto post textbox title  label title textbox author  label author submit save footer coffeescript comments not visible in the output document comment html comments p bye one language to rule them all javascript is everywhere thus so is coffeescript servers browsers even databases if extending this to rendering logic and ui structure server and client side is desirable to you coffeekup is your friend more specifically one outstanding language coffeescript is one hell of a clean expressive flexible and powerful language it s hard to find such combination especially if you need it to run in the browser too not yet another specialized language to learn transferable knowledge ftw embed your templates in coffeescript nicely templates are just functions so they don t lose syntax highlighting and syntax checking when embedded in coffeescript apps embed coffeescript in your templates nicely in the same manner you can write the contents of script blocks in coffeescript and keep the highlighting perhaps more significantly the coffeescript compiler doesn t have to be called just to convert these blocks to js as in other templating engines client server consistency the same template language and implementation in node js or the browser easily extendable into a higher level dsl since all elements are just functions it s very easy to define your own custom tags  which will work and look the same as native ones html  ready boring legacy doctypes and elements also available optional auto escaping you can also use the h helper on a case by case basis optional formatting  with line breaks and indentation pick your poison works with both coffeescript and javascript apps coffeekup may not be your best choice in those cases you use divs and and or classes for everything while in coffeekup you can do div id class class  specialized languages often have an even shorter syntax for that for your specific project and team and preferences you think a limited and and or separate language for templating is actually beneficial npm install coffeekup to get the coffeekup command install it globally npm install coffeekup g or to use the latest version git clone git github com mauricemach and coffeekup git cd coffeekup cake build npm link cd and myproject npm link coffeekup ck require coffeekup ck render h you can feed me templates as functions ck render h or strings i am not too picky defining variables template h title form method post  action login  textbox id username textbox id password button title helpers textbox attrs attrs type text attrs name attrs id input attrs ck render template title log in  hardcode helpers precompiling to functions template ck compile template locals yes hardcode zig zag template foo bar  locals ping pong app set view engine  coffee app register coffee  require coffeekup adapters express app get and  req res will render views and index coffee res render index  foo bar get and franks miller  oz  sinatra  zappa render index view index for name in franks coffeekup require coffeekup meryl get and  req resp people bob  alice  meryl resp render layout  content index  context people people meryl run templateext coffee templatefunc coffeekup adapters meryl on the browser script body append templates template foo bar and script command line coffeekup h usage coffeekup options path and to and template coffee js compile template to js function n namespace global object holding the templates default templates w watch watch templates for changes and recompile o output set the directory for compiled html p print print the compiled html to stdout f format apply line breaks and indentation to html output u utils add helper locals currently only render v version display coffeekup version h help display this help message please note that even though all examples are given in coffeescript you can also use their plain javascript counterparts just fine irc coffeekup on irc freenode net latest version tested with node    and coffeescript   
982541, holla is a group chat app the ui is built in a ria fashion i e is totally asynchronous and super fast i ve open sourced it for a book i m writing on building rich internet applications with javascript a webkit based browser safari and chrome is required due to specific css optimizations good examples for sprockets juggernaut  async uploads with progress ruby    bundler bundle install rake db migrate rails server thin
270226, joe is a continuous server that ll run your tests on demand and report their pass and fail status because knowing is half the battle quickstart  rubygems gem install cijoe git clone git and and github com and you and yourrepo git cijoe yourrepo check cijoe h for other options basically you need to run cijoe and hand it the path to a git repo make sure this isn t a shared repo joe needs to own it joe looks for various git config settings in the repo you hand it for instance you can tell joe what command to run by setting cijoe runner git config add cijoe runner rake s test units joe doesn t care about ruby python or whatever as long as the runner returns a non zero exit status on fail and a zero on success everyone is happy need to do some massaging of your repo before the tests run like maybe swapping in a new database yml no problem joe will try to run git and hooks and after reset if it exists before each build phase do it in there just make sure it s executable want to notify irc or email on test pass or failure joe will run git and hooks and build failed or git and hooks and build worked if they exist and are executable on build pass and fail they re just shell scripts put whatever you want in there tip your repo s head will point to the commit used to run the build pull any metadata you want out of that scro warning do not run this against a git repo that has unpushed commits as this will do a hard reset against the github remote and wipe out unpushed changes other branches  want joe to run against a branch other than master no problem git config add cijoe branch deploy  joe runs just one build at the time if you expect concurrent push s to your repo and want joe to build each in a kind of queue just set git config add cijoe buildqueue true joe will save requests while another build runs if more than one push hits joe he just picks the last after finishing the prior  campfire notification is included because it s what we use want joe notify your campfire put this in your repo s git and config campfire token abcd subdomain whatever room awesomeness ssl false or do it the old fashion way cd yourrepo git config add campfire token abcd git config add campfire subdomain github checkin status  want to see how your build s doing without any of this fancy ui crap ping joe for the lowdown joe will return  ok if all is quiet on the western front if joe s busy building or your last build failed you ll get  precondition failed multiple projects  want ci for multiple projects just start multiple instances of joe he can run on any port try cijoe h for more options http auth  worried about people triggering your builds setup http auth git config add cijoe user chris git config add cijoe pass secret github integration  any post to joe will trigger a build if you are hiding joe behind http auth that s okay github knows how to authenticate properly you can find the post receive option under the service hooks subtab of your project s admin tab daemonize  want to run joe as a daemon use nohup nohup cijoe p  repo other ci servers  need more features more notifiers check out one of these bad boys does github use cijoe  screenshots  questions concerns 
2264200, android directionalviewpager  implementation of the compatibility library  viewpager class that supports paging both vertically and horizontally as well as changing between the two at runtime try out the sample application on the android market  example image  for a working implementation of this project see the sample and folder  include the widget in your view com directionalviewpager directionalviewpager android id and id and pager android layoutheight fillparent by default the widget will page horizontally you can alter this behavior by including android orientation vertical in the layout or by calling setorientation directionalviewpager vertical in your code  in your oncreate method or oncreateview for a fragment  bind to a pageradapter implementation directionalviewpager pager directionalviewpager findviewbyid r id pager pager setadapter new testadapter getsupportfragmentmanager including in your project  android directionalviewpager is presented as a standalone jar file it should included in addition to the compatibility library jar you can download the file from the github downloads page  or compile your own by running mvn clean package it will be in the library and target and folder if you are using maven you can easily include the library by specifying it as a dependency dependency groupid com directionalviewpager and groupid version    and version and dependency you must also include the following repository repository id com jakewharton and id and repository developed by  jake wharton jakewharton gmail com copyright  jake wharton copyright  android open source project licensed under the apache license version   the license you may not use this file except in compliance with the license you may obtain a copy of the license at unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license
179, to install with git mkdir p and library and application support and textmate and bundles cd and library and application support and textmate and bundles git clone git and and github com and drnic and ruby on rails tmbundle git ruby on rails tmbundle osascript e tell app textmate to reload bundles to install without git mkdir p and library and application support and textmate and bundles cd and library and application support and textmate and bundles tar zxf drnic ruby on rails tmbundle tar gz rm drnic ruby on rails tmbundle tar gz mv drnic ruby on rails tmbundle ruby on rails tmbundle osascript e tell app textmate to reload bundles ruby    or greater is required
606710, if you have an issue with a stacktrace and bug report please submit an issue in the issue tracker make sure to include details as to how to reproduce the issue if you have a feature request create an issue on the bug tracker and specifically state that it is a feature request also send an email to the mailing list referencing this feature request discussion on feature requests should be done in the issue tracker if you need general help or want to share what you re using this project in join email the mailing list documentation
1809895, motioncaptcha is a jquery captcha plugin that requires users to sketch the shape they see in the canvas in order to submit a form at the moment it s just a proof of concept no ie support but the next releases will see progressive enhancement and the ability to use this in production environments as a serious captcha alternative don t try to use motioncaptcha v  in production watch and wait for the full release update    for everyone who s been watching my apologies for not updating you sooner the response to motioncatpcha has been amazing and i still have big plans for it but work and other distractions got in the way to everyone who still wants to see motioncatpcha become fully fledged and being used on live sites and apps watch out for a codesmash day in september possibly the th in the meantime please try it out suggest features and report bugs if you want to help out turning this thing into a reality fork away in v  the plugin will use progressive enhancement so that the form uses a standard server side e g php captcha script and then on page load the plugin switches that for the motioncaptcha canvas only if the browser is grown up enough for now here s how it works if you need a step by step guide there s a how to below you manually disable your form by emptying the form s action attribute and placing its value in a hidden input with a specific id you should also put disabled disabled on the submit button for added points you add a few html lines to your form to initialise the motioncaptcha canvas and add the plugin s scripts to your page the user draws the shape and if it checks out the plugin inserts the form s action into the form tag the user can submit the form happy days i know this is going to be unpopular in its current state because you re making it impossible for people to submit the form without javascript or canvas support but who gives a crap it s fun and in future it ll degrade gracefully etc etc in my book all of these people are ace i just borrowed from them and spliced their works into one unholy mess actually it s fairly tidy though i m hoping people will suggest performance improvements try to fix up ie support via excanvas or similar library add a real functionality for a new shape button a shape switcharoo method a combine with a simple php captcha and server side checking script for progressive enhancement by default form is submitted with regular captcha on page load if browser supports javascript and html canvas regular captcha is switched for mighty motioncaptcha and that would be checked on the server instead b see a added mobile support for current functionality should work in android and ios iphones and ipads now a few speed improvements and code cleanups  add the plugin scripts i m using jquery   from the google api but you could load it locally and motioncaptcha is supported down to jquery   link href jquery motioncaptcha   css and script  code the form as usual with a unique id eg mycoolform and set the form action to blank or eg form action id mycoolform method get and post canvas id mc canvas and canvas and div  disable the submit button eg  add a hidden input to the form with the form action as its value give it either a unique id or the id mc action  like so  call the plugin on the form element if you used any other id than mc action for the hidden input you ll just need to pass it to the plugin like this form id motioncaptcha action fairly unique id  and and or if you just used mc action as the hidden input s id form id motioncaptcha  other options are available defaults are shown form id motioncaptcha and and basics action mc action  and and the id of the input containing the form action divid mc  and and if you use an id other than mc for the placeholder pass it in here cssclass mc active  and and this css class is applied to the mc div when the plugin is active canvasid mc canvas  and and the id of the motioncaptcha canvas element  and and an array of shape names that you want motioncaptcha to use shapes triangle  x  rectangle  circle  check  caret  zigzag  arrow  leftbracket  rightbracket  v  delete  star  pigtail   and and these messages are displayed inside the canvas after a user finishes drawing errormsg please try again  successmsg captcha passed   and and this message is displayed if the user s browser doesn t support canvas nocanvasmsg your browser doesn t support canvas try chrome ff safari or ie  and and this could be any html string eg label draw this shit yo and label 
2473037, these are the course materials for the stanford computer science class csh functional systems in teaching for the first time during the fall term of 
2783860, define breakpoints for your responsive design and breakpoints js will fire custom events when the browser enters and and or exits that breakpoint window setbreakpoints and and use only largest available vs use all available distinct true and and array of widths in pixels where breakpoints and and should be triggered breakpoints window bind enterbreakpoint function window bind exitbreakpoint function window bind enterbreakpoint function window bind exitbreakpoint function window bind enterbreakpoint function window bind exitbreakpoint function
1281555, load js is a micro js lazy loader javascript load jquery js then jquery ui js  jquery ui theme js then myscript js thenrun function alert loaded load underscore js some things to note then is an alias for the previous method in the chain once jquery has loaded jquery ui js and jquery ui theme js are loaded in parallel when both are complete myscript js is loaded each chain is separate so underscore and jquery will load in parallel load a script after a  s delay javascript defer  thenload myscript js javascript load myscript js onerror function err and and handle any errors here mit license copyright c  chris o hara cohara gmail com permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
2773938, here are the tools we wrote to reverse engineer siri the code is extremely dirty as it was written erased written again and is a pure product of a trial and error process anyway here s a simple how to if you want to have fun with it how to get the necessary bits  generate a certificate authority add it to your iphone sign a certificate for guzzoni apple com using that authority this should produce the crt and key files your server will need setup a fake dns server that resolves guzzoni apple com to your own machine and configure your iphone to use it start the siriserver rb server you will need some ruby gem installed i have tested it only on mac os x    with ruby    make siri dictation request for example from the notes app application on the server this will dump all the interesting bits x ace host identifier sessiondata and such use them to replace instances of commentedout in the code how to do speech to text using a non iphones machine  record your voice into whatever format you like use ffmpeg to convert the sound to raw sound samples see the text file for the exact command line name it tentative raw install the speex library and its header on mac os x brew install speex once you ve setup homebrew compile the speexenc m file gcc speexenc m lspeex framework foundation o speexenc run and speexenc it will produce a input sif file with speex packets the ruby script will be able to read run the siri old inline rb script et voil
1108478, coffeedrop aims to be an open source roll your own dropbox clone written in coffeescript that runs in nodejs it is currently under heavy development and is not in a working state i was storing the code in a private repository but i decided to go public with it in case anyone wants to give feedback or contribute to the early stages coffeescript if developing npm packages colors daemon sqlite since coffeedrop is in such an early state it is not available to install via npm yet you can install all the dependencies by running npm install coffee script colors cli daemon sqlite g to run coffeedrop simply execute the coffeedrop binary in your terminal use the help option to show the help text to see the various commands most of which are useless at this point in time
974855, i love vim it s my editor of choice when i am developing software currently for the last  years at least i have been working mainly with the ruby programming language i have been missing a refactoring tool for a while like the ones you can find in ide s while i am developing but i never had the nerve to dwell into vim script to actually code my own recently a couple of weeks ago gary bernhardt presented his vim configuration in the software craftsmanship user group uk and he showed us the two refactoring patterns he has written in vim script initially i just thought cool  but it didn t really sink in until a couple of weeks later so now i have decided to code this in vim script but i am not sure how far i will go with it clone at your own risk n b rename local variable  rename instance variable and extractmethod require matchit vim raddparameter add parameter rinlinetemp inline temp rconvertpostconditional convert post conditional rextractconstant extract constant visual selection rextractlet extract to let rspec rextractlocalvariable extract local variable visual selection rrenamelocalvariable rename local variable visual selection and variable under the cursor requires matchit vim rrenameinstancevariable rename instance variable visual selection requires matchit vim rextractmethod extract method visual selection requires matchit vim nnoremap leader rap raddparameter cr nnoremap leader rcpc rconvertpostconditional cr nnoremap leader rel rextractlet cr vnoremap leader rec rextractconstant cr vnoremap leader relv rextractlocalvariable cr nnoremap leader rit rinlinetemp cr vnoremap leader rrlv rrenamelocalvariable cr vnoremap leader rriv rrenameinstancevariable cr vnoremap leader rem rextractmethod cr additional usage examples thanks justin enrique comba riepenhausen paul king
722311, multi node is a deprecated package that provided functionality similar to node s modern cluster functionality consequently this package is no longer needed and exists only for historical preservation multi node provides launching of multiple nodejs processes for tcp and http serving with multi node it is very simple to add utilize multiple processes to concurrently serve http requests simply pass an http server object to the listen function var server require http createserver function request response standard node request handler  var nodes require multi node listen port  nodes   server the listen function takes two arguments the first is the options the second is the server the options argument may have the following properties port specifying the port number to listen on defaults to  nodes specifying the number of node processes defaults to  host address to listen on defaults to     masterlisten indicate whether the master process should listen and handle requests as well on by default but you may want to turn this off if you processes are prone to dying and you want to reliably utilize auto restart of processes  defaults to true restartchildren automatically restart child process when they die defaults to true the object returned from the listen function also provides some useful capabilities the return object has an ismaster property indicating if the current process is the original initiating master process this can be used like var nodes require multi node listen if nodes ismaster and and start a repl on just one process require repl start the returned object also provides an id property with an id for the current process each node and process has a unique id inter process communication  multi node also provides critical inter process communication facilities for any web application that requires processes to be able to communicate with each other for sending messages like in chat applications or for doing in memory sessions etc  it is necessary for each process to be able to communicate with other processes the returned object is also an event emitter and the node event is fired for each other node process that is created the event handler is a passed a readable and writable stream that can be used to communicate with the other process for example var nodes require multi node listen var allstreams nodes addlistener node  function stream stream addlistener data  function data receiving data from this other node process  allstreams push stream function notifyotherprocesses message allstreams foreach function stream stream write message  the stream object returned from the node event for cross process communication can be a bit unwieldy to work with by itself since the stream events can break data up in non deterministic fashion and works at the binary level you can use multi node s framing mechanism to simplify this use the framestream function to transform a raw stream into a framed stream that follows the websocket api with this api you can send strings objects and other values with the send value function and receive these values by listening for the message event nodes addlistener node  function stream stream require multi node framestream stream stream addlistener message  function data receiving string object or other value from the other node process  stream send foo bar node doesn t support fd passing windows yet so mult process delegation doesn t work on windows licensing multi node is part of the persevere project and therefore is licensed under the afl or bsd license the persevere project is administered under the dojo foundation and all contributions require a dojo cla
631441, touchscroll  touchscroll is a javascript and css  based scrolling layer for webkit mobile espeacially iphone android and ipad it allows to configure scrolling behaviour in many ways and to use fixed interface elements dependencies  touchscroll depends on css beziers  a library for computations on cubic bezier curves  to use touchscroll you need an element with fixed height have a look at the demo for an elegant solution using display webkit box the stylesheet is mandatory at the moment it will be made optional in the future for cases when scrollbars aren t needed and div script var scroller new touchscroll document queryselector scroller and script to enable the elasticity and bouncing effect add elastic true as second parameter to the instantiation script var scroller new touchscroll document queryselector scroller  elastic true and script set the scroller to overflow auto to enable scrolling in other environments the scroller automatically adapts its size to content changes and window resizes and orientation changes limitations and known issues  touchscroll currently doesn t work well with forms on android the scroller element shouldn t have any padding child selector scroller foo might not work as expected when a scroller is invisible it can t adapt its size correctly call its setupscroller method to fix that e g after making a scroller visible by setting display block on it tapping the status bar on iphone doesn t trigger  scroll to top selecting text doesn t work on the ipad and on some iphone versions os  b  an issue with cancelling events  keep the scrollbars round while bouncing  i already know how to do this investigate whether support for tapping the status bar on iphone can be added investigate how selecting text and using the context menu can be re enabled on iphone and ipad add an option to completely switch off scrollbars find a solution to the event problems on android  help greatly appreciated  e mail da at uxebu com mailto da at uxebu com
1549505, at the core of effect games is the effect engine  a javascript game engine which uses built in browser technologies to render graphics currently the engine uses classic dhtml not the canvas element nor webgl for audio we use html whenever we can but fall back to flash where necessary which is unfortunately a lot of the time the effect engine supports most browsers including internet explorer  and  firefox  and  safari  and  chrome  and  opera  and  and all major platforms including windows mac and linux effect games engine and ide v  copyright c   joseph huckaby please observe the folllowing additional licenses from software or media that the effect games ide relies on and ships with please note that none of these are used in the actual game engine only the web ide note this is only used in the ide not the engine or your games note this is only used in the ide not the engine or your games note this is only used in the ide not the engine or your games note this is only used in the ide not the engine or your games note this is only used in the ide not the engine or your games note this is only used in the ide not the engine or your games note this is only used in the ide not the engine or your games
786531, and implemented for php   high performance parser great readability contextual error reporting at compile amp run time html  mode using the   doctype combine dynamic and static tag classes no tag prefix clear beautiful html output filters php cdata css javascript you even can write add own filters throught api dumper new phpdumper dumper registervisitor tag  new autotagsvisitor dumper registerfilter javascript  new javascriptfilter dumper registerfilter cdata  new cdatafilter dumper registerfilter php  new phpfilter dumper registerfilter style  new cssfilter and and initialize parser jade parser new parser new lexer jade new jade parser dumper and and parse a template both string file containers echo jade render template crlf and cr are converted to lf before parsing jade is indentation based however currently only supports a  space indent a tag is simply a leading word for example is converted to html and html tags can also have ids div container how about some classes div user details multiple classes and an id sure div foo bar baz div div div sure is annoying how about which is syntactic sugar for what we have already been doing and outputs jade php has a feature called autotags it s just snippets for tags autotags will expand to basic tags with custom attributes for example input text another examples input submit value send you can even add you own autotags with parser setautotag input progress  input  array type text  class progress bar simply place some content after the tag p wahoo well cool but how about large bodies of text and foo bar baz and rawr rawr and super cool and go jade go actually want php echo for some reason use instead p something li one li two li three jade currently supports and as attribute delimiters a href and login  title view login page login alternatively we may use the colon to separate pairs a href and login  title view login page login boolean attributes are also supported input type checkbox  checked boolean attributes with code will only output the attribute when true input type checkbox  checked somevalue note leading and trailing whitespace is ignore for attr pairs to add a doctype simply use followed by an optional value will output the transitional doctype however will output html  s doctype below are the doctypes defined by default which can easily be extended doctypes array  doctype html  xml xml version   encoding utf   jade supports sharp comments and and comment so jade block and and jade foo script and and comments are supper switch foo case  p foo foo and and case strong and and strong name foo  case  p some text will be compiled into php foo script php switch foo php case  php break php case  php break php endswitch jade supports html comments and and comment so block peanutbutterjelly and and this is the peanutbutterjelly element and i like sandwiches will become i like sandwiches and peanutbutterjelly as with multiline comments p this doesn t render h because it s commented out that compile to h because it s commented out and h and div also jade supports ie conditional comments so and and if ie h get firefox will be parsed to h get firefox and h endif filters are prefixed with  for example javascript or cdata and pass the following block of text to an arbitrary function for processing view the features at the top of this document for available filters and data  and data and  and echo data data  data and  echo data jade currently supports two classifications of executable code the first is prefixed by  and is not buffered var foo bar this can be used for conditionals or iteration foreach items as item p item due to jade s buffering techniques the following is valid as well if foo li yay li foo li worked p hey didnt work second is echoed code which is used to echo a return value which is prefixed by foo bar h foo which outputs php foo bar php echo foo h php echo foo and h also jade has code blocks that supports basic php template syntax while true li item will be rendered to php while true li item and li php endwhile but don t forget about colons after instructions start if true there s bunch of default ones if  else  elseif  while  for  foreach  switch  case
204419, by tom preston werner tom mojombo com ernie is a bert rpc server implementation that uses an erlang server to accept incoming connections and then delegates the request to custom modules that you can write in any language currently only ruby and erlang support is included modules that are written in ruby or any non erlang language are known as external modules and you must specify how many workers of each module should be spawned requests against these modules are balanced between the workers modules that are written in erlang are known as native modules and run within the erlang server s runtime since these are spawned as lightweight processes there is no balancing necessary and much less communication overhead when compared to external modules ernie supports multiple heterogenous modules for instance you can have an external ruby module running  workers and a native erlang module running simultaneously ernie keeps track of sending requests to the proper module using a technique called shadowing you can selectively optimize certain external module functions with native code and ernie will handle selecting the correct function ernie currently supports the following bert rpc features call requests cast requests ernie was developed for github and is currently in production use serving millions of rpc requests every day the stability and performance have been exemplary versioning installation  step  install erlang rb or higher step  install ernie sudo gem install ernie usage ernie command options c config config config file p port port port l log level log level   a access log logfile access log file d detached run as a daemon p pidfile pidfile location to write pid file name name erlang process name sname sname erlang short process name e erlang erlangoptions options passed to erlang vm commands none start an ernie server reload handlers gracefully reload all of the external handlers and use the new code for all subsequent requests stats print a list of connection and handler statistics examples ernie d p  c example cfg start the ernie server in the background on port  using the example cfg configuration file ernie reload handlers p  reload the handlers for the ernie server currently running on port  ernie c example cfg e run mymodule start the ernie server with an additional erlang module called mymodule configuration file  ernie configuration files are written as a series of dotted erlang terms each term is a list of  tuples that specify options for a module the form for native modules is module module  type native  codepaths codepaths where module is an atom corresponding to the module name and codepaths is a list of strings representing the file paths that should be added to the runtime s code path these paths will be prepended to the code path and must include the native module s directory and the directories of any dependencies the form for external modules is module module  type external  command command  count count where module is an atom corresponding to the module name command is a string specifying the command to be executed in order to start a worker and count is the number of workers to spawn if you specify a native module and an external module of the same name and in that order  ernie will inspect the native module to see if it has the requested function exported and use that if it does if it does not then it will fall back on the external module this can be used to selectively optimize certain functions in a module without any modifications to your client code in some circumstances it can be nice to conditionally shadow a function in an external module based on the nature of the arguments for example you might want requests for math fib x to be routed to the external module when x is less than  but to be handled by the native module when x is  or greater this can be accomplished by implementing a function math fibpred x in the native module notice the pred appended to the normal function name pred is short for predicate if a function like this is present ernie will call it with the requested arguments and if the return value is true the native module will be used if the return value is false the external module will example configuration file  the following example config file informs ernie of two modules the first term identifies a native module nat that resides in the nat beam file under the and path and to and app and ebin directory the second term specifies an external module ext that will have  workers started with the command ruby and path and to and app and ernie and ext rb module nat  type native  codepaths and path and to and app and ebin module ext  type external  command ruby and path and to and app and ernie and ext rb  count  access log  if you have requested that an access log be written using the a or access log option then all requests will be logged to that file each request is printed on a single line the elements of the log line are as follows with comments on the right side acc type of message acc and err   t    time the connection was accepted   seconds from connection to processing start   seconds from processing start to finish delimiter  size of high queue at connect time  size of low queue at connect time nat type of handler nat and ext high priority high and low delimiter callnatadd  message log lines are written when the request completes so they may appear out of order with respect to connection time to facilitate log rotation ernie will create a new access log file if the current log file is moved or deleted native erlang handler  native handlers are written as normal erlang modules the exported functions will become available to bert rpc clients module nat export add and  add a b a and b call nat add   reply  external ruby handler  included in this gem is a library called ernie that makes it easy to write ernie handlers in ruby all you have to do is write a standard ruby module and expose it to ernie and the functions of that module will become available to bert rpc clients using a ruby module and ernie expose require rubygems require ernie module ext def add a b a and b end ernie expose ext ext call nat add   reply  you can have logging sent to a file by adding these lines to your handler logfile and var and log and ernie log loglevel logger info this will log startup info requests and error messages to the log choosing logger debug will include the response be careful doing this can generate very large log files normally ruby ernie handlers will become active after the file has been loaded in you can disable this behavior by setting ernie autostart false selecting queue priority  ernie maintains high and low priority queues for incoming connections if there are any connections in the high priority queue they will always be processed first if the high priority queue is empty connections will be processed from the low priority queue by default connections go into the high priority queue to select a queue an info berp of the following form must be sent preceding the call info priority priority where priority is either the high or low atom an example sequence where the low priority queue is being selected would look like the following info priority low call nat add   reply  using the bertrpc gem to make calls to ernie  require bertrpc svc bertrpc service new localhost   svc call ext add    contribute  if you d like to hack on ernie start by forking my repo on github to get all of the dependencies install the gem first to run ernie from source you must first build the erlang code rake ebuild the best way to get your changes merged back into core is as follows  clone down your fork  create a topic branch to contain your change  hack away  add tests and make sure everything still passes by running rake  if you are adding new functionality document it in the readme md  do not change the version number i will do that on my end  if necessary rebase your commits into logical chunks without errors  push the branch up to github  send me mojombo a pull request for your branch copyright  copyright c  tom preston werner see license for details
228215, talk to redis from node js fully asynchronous your code is called back when an operation completes e g store a png in redis if you d like you have to understand how redis works and the semantics of its command set to most effectively use this client when working from a git clone var sys require sys var client require and lib and redis client createclient client info function err info if err throw new error err sys puts redis version is and info redisversion client close when working with a kiwi based installation and and kiwi install redis client var sys require sys  kiwi require kiwi  client kiwi require redis client createclient client info function err info if err throw new error err sys puts redis version is and info redisversion client close refer to the many tests in test and test js for many usage examples refer to the examples and directory for focused examples this version requires at least node js v   and redis    tested with node js v   and v   and redis    the current unstable you have a number of choices git clone this repo or download a tarball and simply copy lib and redis client js into your project use git submodule please let me know if the package manager seeds and and or metadata have issues installation via kiwi or npm at this point isn t really possible since this repo depends on a unreleased version of node js a good way to learn about this client is to read the test code to run the tests install and run redis on the localhost on port  defaults then run node test and test js v and q where v is for verbose and q is for quiet node test and test js  and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and info all tests have passed if you see something like psubscribe unknown command then it is time to upgrade your redis installation there is a method per redis command e g setnx becomes client setnx is specified as incrby key integer also the incrby spec says that the reply will be the new value of key after the increment or decrement this translates to the following client code which increments key foo by  if the value at key foo was  or non existent newvalue will take value  when the callback function is called client incrby foo   function err newvalue and and i m open to suggestions for improvement here note for pubsub you should use subscribeto and unsubscribefrom instead of the generated all commands and requests use the redis multi bulk request format which will be the only accepted request protocol come redis  
2454758, java bloomfilter  bloom filters  bloom filters are used for set membership tests they are fast and space efficient at the cost of accuracy although there is a certain probability of error bloom filters never produce false negatives to create an empty bloom filter just call the constructor with the required false positive probability and the number of elements you expect to add to the bloom filter double falsepositiveprobability   int expectednumberofelements  bloomfilter string bloomfilter new bloomfilter string falsepositiveprobability expectednumberofelements the constructor chooses a length and number of hash functions which will provide the given false positive probability approximately note that if you insert more elements than the number of expected elements you specify the actual false positive probability will rapidly increase there are several other constructors available which provide different levels of control of how the bloom filter is initialized you can also specify the bloom filter parameters directly bits per element number of hash functions and number of elements after the bloom filter has been created new elements may be added using the add method bloomfilter add foo to check whether an element has been stored in the bloom filter use the contains method bloomfilter contains foo and and returns true keep in mind that the accuracy of this method depends on the false positive probability it will always return true for elements which have been added to the bloom filter but it may also return true for elements which have not been added the accuracy can be estimated using the expectedfalsepositiveprobability method put together here is the full example double falsepositiveprobability   int expectedsize  bloomfilter string bloomfilter new bloomfilter string falsepositiveprobability expectedsize bloomfilter add foo if bloomfilter contains foo and and always returns true system out println bloomfilter contains foo system out println probability of a false positive and bloomfilter expectedfalsepositiveprobability if bloomfilter contains bar and and should return false but could return true system out println there was a false positive compiling  to compile run ant from the base directory when ant is done include dist and java bloomfilter jar in your project alternatively java bloomfilter could be loaded in netbeans and compiled using the ide improved the speed of the add and contains methods the speed increase is around   times on my computer but the actual increase may vary from system to system added benchmark code to test future code optimizations fixed a bug in add where numberofaddedelements was incorrectly increased twice when adding other elements than byte arrays updated test moved project to github added javadoc and source jar to build script new constructor for estimating bitsetsize from a given false positive probability new constructor for specifying bits per element elements and hash functions c n k directly added getexpectedbitsperelement and getbitsperelement
56855, please report bugs and the such there cheers brian
367872, objective c qr encoder  this repository contains an open source objective c qr encoder licensed under the apache licence version   adding the qr encoder to your project  the qr encoder is compiled as a static library and the easiest way to add it to your project is to use xcode s dependent project facilities here is how  clone the objqr git repository git clone git and and github com and jverkoey and objqr git make sure you store the repository in a permanent place because xcode will need to reference the files every time you compile your project  locate the qrencoder xcodeproj file under objqr and src and drag qrencoder xcodeproj and drop it onto the root of your xcode project s groups and files sidebar a dialog will appear make sure copy items is unchecked and reference type is relative to project before clicking add  now you need to link the qrencoder static library to your project click the qrencoder xcodeproj item that has just been added to the sidebar under the details table you will see a single item libqrencoder a check the checkbox on the far right of libqrencoder a  now you need to add qrencoder as a dependency of your project so that xcode compiles it whenever you compile your project expand the targets section of the sidebar and double click your application s target under the general tab you will see a direct dependencies section click the and button select qrencoder  and click add target  finally we need to tell your project where to find the qrencoder headers open your project settings and go to the build tab look for header search paths and double click it add the relative path from your project s directory to the objqr and src and classes directory  you re ready to go just import qrencoder and qrencoder h anywhere you want to use qrencoder classes in your project example qr output  google com google com png google com
1085433, i m working on it var readability require readability and and and and this is an very early example the api is subject to change readability parse html url function result console log result title result content no fetching next pages no support for frames performance optimization better api more options support more readability features
143845, using opencv on iphone  this source repository includes pre compiled opencv library and headeres so that you can get started easily building static link version of opencv  if you want to build it from source code you can do by next steps using homebrew brew install cmake using macports sudo port install cmake  clone this project from github com then move into the project directory git clone git and and github com and niw and iphoneopencvtest git  extract downloaded archive on the top of demo project directory tar xjvf opencv    tar bz  apply patch for iphone sdk cd opencv    patch p and opencv    patch  following next steps to build opencv static library for simulator all files are installed into opencvsimulator directory when running make command you ve better assign j option and number according to number of your cpu cores without j option it takes a long time cd mkdir buildsimulator cd buildsimulator and opencvcmake sh simulator and opencv    make j  make install  following next steps to build opencv static library for device all files are installed into opencvdevice directory cd mkdir builddevice cd builddevice and opencvcmake sh device and opencv    make j  make install build support script  uild support script opencvcmake sh has some options to build opencv with ios sdk try help option to get the all options of it change log   and  and  supprot opencv    and ios sdk   and xcode   and  and  support ios sdk    and  and  support opencv    and ios sdk    and  and  support snow leopard and iphone sdk    thank you hyon  and  and  support opencv to    and iphone sdk  x  and  and  release this project with opencv    and iphone sdk  x
660976, lemonade is deprecated  so thanks for all the buzz for lemonade and take a look at our compass sprites implementation still need to use lemonade  try to use an older implementation of chunkypng if you get empty pngs gemfile gem lemonade gem chunkypng    
982634, width  height  alt brochure brochure is a rack application for serving static sites with erb templates or any of the many template languages supported by it s the good parts of php wrapped up in a little ruby package mdash perfect for serving the marketing site for your rails app sample application structure templates and help and index html erb index html erb shared and header html erb footer html erb signup html erb config ru public and  sample config ru require brochure root file dirname file run brochure app root urls are automatically mapped to template names and rarr templates and index html erb and signup rarr templates and signup html erb and help and rarr templates and help and index html erb templates can render partials a partial is denoted by a leading underscore in its filename so render shared and header will render templates and shared and header html erb inline partials can yield back to the templates that render them you can use this technique to extract common header and footer markup into a single layout file for example templates have access to the rack environment via the env method and to the brochure application via the application method additionally a rack request wrapper around the rack environment is available via the request method you can print html escaped strings in your templates with the h you can make additional helper methods and instance variables available to your templates helper methods live in ruby modules and can be included with the helpers option to brochure app module assethelper def assetpath filename localpath file join application assetroot filename digest digest md hexdigest io read localpath and filename digest end run brochure app root helpers assethelper similarly instance variables can be defined with the assigns run brochure app root assigns domain signals com you can specify global tilt template on a per engine basis with templateoptions run brochure app root templateoptions haml format html  md smart true gem install brochure copyright c  sam stephenson and josh peek released under the mit license see license for details
644997, akephalos is a full stack headless browser for integration testing with a gui less browser for the java platform but can be run on both jruby and mri with no need for jruby to be installed on the system gem install akephalos configuring akephalos is as simple as requiring it and setting capybara s javascript driver require akephalos capybara javascriptdriver akephalos akephalos provides a driver for capybara so using akephalos is no different than using selenium or rack test for a full usage guide check makes no assumptions about the testing framework being used and works with rspec cucumber and test unit here s some sample rspec code describe home page do before visit and context searching do before do fillin search  with akephalos clickbutton go end it returns results page should havecss results it includes the search term page should havecontent akephalos end there are now a few configuration options available through capybara s new registerdriver api htmlunit supports a few browser implementations and you can choose which browser you would like to use through akephalos by default akephalos uses firefox   capybara registerdriver akephalos do and app and available options ie ie ie firefox firefox capybara driver akephalos new app browser ie by default htmlunit and akephalos will raise an exception when an error is encountered in javascript files this is generally desireable except that certain libraries aren t supported by htmlunit if possible it s best to keep the default behavior and use filters see below to mock offending libraries if needed however you can configure akephalos to ignore javascript errors capybara registerdriver akephalos do and app and capybara driver akephalos new app validatescripts false allows you to start an interactive shell or drb server as well as perform other maintenance features you to declare mock responses for external resources and services requested by the browser github
3006438, this software is aimed to help manage packages uninstalling in osx installation is as simple as adding to path for system installation with sudo echo path path and opt and pkguninstaller and etc and profile adding path when installed as user without sudo echo path path home and pkguninstaller home and bashprofile note the single quotes are important in both cases install packages with coming soon list available package names possibly filtering by name pkg list name uninstall package pkg uninstall name you have to bundle pkg wrapper with your application and install it to disk before executing the hook bellow in before installing hook call this script pkg wrapper before your package name in after installing hook call this script pkg wrapper before your package name and path and to and uninstallername sh in uninstall hook call and path and to and uninstallername sh rm and path and to and uninstallername sh
1384958, public class webserver inodeprogram public int main string args  new httpserver ihttptransaction t  console writeline got connection   t request path t response write h hello world and h t response end  ioloop instance listen       console writeline listening on  return   to run this you would simply call node against your compiled assembly node example webserver dll listening on  node cs defines a simple mechanism to have an action take place after some specified time in the future var timers timers instance int handle timers scheduletimer timespan fromseconds   console writeline hello in the future  scheduling a timer returns a handle to that timer that can be used to cancel it before it fires timers canceltimer handle a common issue with frameworks such as this are the deep deep nests that get created as a result of chaining multiple indipendant async calls within calls another common issue is the ability to know when a loop of async calls have completed so that further action can be taken node cs defines a class complete that allows you to indicate when an async method is executing and when that method has completed complete c new complete timers t timers instance var ts timespan fromseconds  int ii  c asyncwork t scheduletimer ts h ii and and c asyncworkcomplete c asyncwork t scheduletimer ts h ii and and c asyncworkcomplete c oncomplete console writeline completed and ii a timeout can also be specified to call you back if the async actions have not completed in the specified time c oncomplete rec console writeline completed and ii and res timespan fromseconds  even though node cs is aimed at single threaded use cases there might be times where you ll want to kick off another thread for async functionality that is not yet provided by the framework node cs defines a class boundary that aims to make interacting with your main node app from other threads simple thread currentthread name loopthread var boundary boundary instance thread t new thread console writeline  thread running  thread currentthread name boundary executeontargetloop console writeline boundary call executed on   thread currentthread name t name bh thread t start node example multithreaded dll starting program bh thread thread running boundary call executed on loopthread udp message receiving is supported sending support will be added shortly udpreceiver rec new udpreceiver loop rec listen       rec onread u b c rep console writeline rep and and encoding ascii getstring b  c
677999, eyeballs js  eyeballs js is a slim javascript library designed to sit on top of a javascript framework such as jquery or prototype the goals are organisation of client side web app code using the model view controller pattern simple model implementation for handling non event related concerns simple routing layer for hash tag change based navigation preserving the back button rapid development of javascript apps using strong conventions easing the pain of building fast responsive interfaces exploring the possibilities of offline web apps the implementation is owes a lot to ruby on rails but also attempts to be idiomatic javascript eyeballs js can sit on top of an already implemented web app with a well thought out object model it can also be used to build standalone javascript apps backed by html local storage or something like couchdb eyeballs js models are not necessarily one to one mapped to server side models using your web framework of choice they more closely map to interface elements but there aren t really any rules as yet finally eyeballs js is still a bit of an experiment it s a quick implementation of a crazy idea to help make javascript code a little bit more organised eyeballs js is supposed to be both agnostic and modular the code is broken down into modules drivers and adapters modules add various parts of functionality for example the code that powers the individual model controller routing and validation layers drivers add support for underlying javascript frameworks features that rely on event handling etc are part of driver logic adapters provide an api to various persistence layers eg html local storage a rest interface or a couchdb instance getting started  eyeballs js is packaged into modules according to dependencies the main library has no dependencies and lets you use eyeballs js models standalone standalone eyeballs js doesn t do much it provides the o o function for initializing models and some validations at a very minimum you should choose an adapter there are a few to choose from o o dom a basic adapter without any persistence o o localstorage persist records to html local storage o o couchdb persist records to a local couchdb instance for building mvc couchapps for example o o rest an adapter for persisting models to a backend powered by rails or using rails style restful routing finally you need a controller the first release of eyeballs js includes a controller as part of the jquery driver you can also use a javascript templating language mustache js fits this need quite nicely wrapping that all up to use eyeballs js with the rails adapter and jquery badabing badaboom you re now ready to start creating some models and controllers generators  if you install the eyeballs js ruby gem you can use the eyeballs command to generate eyeballs js apps models and controllers gem install eyeballs to create a new eyeballs js app eyeballs mynewapp this will create a new app in the my new app folder when you re up and running you can use the model and controller generators eyeballs generate model post eyeballs generate controller posts these generators will install files to app and models and app and controllers relative to where you run the eyeballs command you can also generate a scaffold eyeballs generate scaffold post this will generate a posts html  a post js and a postscontroller js if the generator detects a public directory when you run it it will install into public and javascripts you define a model by passing a name and function to the eyeballs oo function pronounced eep eep as inspired by rails model definitions are capitalised note however that the new prefix is not used oo post  function you can now initialize an individual post var post post initialize title my new post post title and and my new post not very exciting however if you re familiar with rails you ll be familiar with the wonderful syntax for adding validations to your models eyeballs js lets you add validations to your models as follows oo post  function this validatespresenceof title now when you initialize a new post you can validate it nice and easy var post post initialize post valid post errors and and and and field title  and and message title should be present  and and type presence and so on so forth this will be very familiar to those who use rails you can also add your own validations again similar to how rails does things oo post  function this validates function post if post title awesome  post errors push message not awesome enough  var post post initialize post save function savedpost post errors and and and and message title should be present and and yep there s a save method too even better using the invalid callback post save invalid function savedpost and and you can assume savedpost errors when you want to find things post find loading function console log i m loading success function post console log here i am and if you want to add your own methods oo post  function this methods titledowncased function this title tolowercase var post post initialize title huge post titledowncased and and huge connecting to an adapter if you want to hook eyeballs js up to the local storage adapter for example oo model adapter oo localstorage finding saving updating and deleting with callbacks easy peasy post post initialize title my new post post save invalid function post alert sorry invalid loading function post alert i hapeen straight away success function post alert saved whoop there s a strong emphasis on callbacks since any persisting to backends should be done asynchronously controllers  an eyeballs js controller is also initialized with the eyeballs function by passing a string name and an object containing the controller actions oo postscontroller  new function alert i m new create function alert i m create again this looks nice and familiar dead dead simple there are several ways to bind events to controller actions the simplest way to call controller actions is to bind them directly from the above example you can simply call oo postscontroller new once you have initialized your controller you can use the eyeballs js router to bind events to changes in the url hash this is particularly effective for graceful degradation as well as preserving the back button history your config and routes js file would look something like this oo routes draw function map map match and posts and new and  to posts new you can now bind this to particular links by adding the data ajax history attribute to your a elements this link will now call postscontroller new when it is clicked you can also set params in the url eg oo routes draw function map map match and posts and id and  to posts show or in the route oo routes draw function map map match and posts and id and  to posts show  custom posts oo params custom post and your controller oo postscontroller  show function alert oo params id and and  if you want a default action to fire that is when the document hash is empty just hook up a map root oo routes draw function map map root to posts index if you have several routes that share the same prefix you can use a namespace oo routes draw function map map namespace my  function map match posts and new  to myposts new hooks up to mypostscontroller new to bind events to these controller actions use the data bind attribute this binds all clicks on this element to the new action on the postscontroller by default if you add these attributes to a form the action is bound to the submit event to all other elements it binds to a click it also returns false canceling out the default behavior if you want the default behavior prefix with and to add the action to the propagation chain you can also bind to custom events you can bind multiple events and actions to a single element it s called obtrusive ujs explicit yet everything has its own place putting it all together  imagine a simple app for posting reviews it will comprise a review model reviewscontroller and associated views models and review js looks like this oo review  function this validatespresenceof title this validatespresenceof content this defines the review model allowing us to initialize and save review objects while ensuring title and content are included the create action in controllers and reviewscontroller js looks like this using jquery create function var review review initialize oo params review var form this review save o invalid function review oo alerterrors review  success function review oo render reviews and review  review prepend div reviews form find input type text  textarea val  the form that hooks up to this action is like this form data bind reviews create input type submit name commit value save and form the main things to note here are the way that the form binds automatically to the create action using jquery event delegation also field elements have the data attribute attributes the o o params function reads from these returning a json object that can be passed to review initialize notice also oo alerterrors which displays an alert of all the errors on an invalid review finally the o o render function takes a template which is a mustache js template stored in views and  the review object and a set of options sample app  meview is a sample app for storing reviews running the tests  eyeballs js uses qunit and a sinatra app for in browser testing to start the test server ruby app rb to run all the tests visit contributors  anthony eden aeden and aeden thorben schr der walski and walski copyright c  paul campbell released under the mit license
231633, timepicker  a time picker control for textfields built using jquery inspired by google calendar time timepicker   am   pm  minutes steps time timepicker starttime   am  and and using string can take string or date object endtime new date        and and using date object here timeformat hh mm tt  step  an example how the two helper functions can be used to achieve advanced functionality linking when changing the first input the second input is updated and the duration is kept validation if the second input has a time earlier than the firs input an error class is added the example and and use default settings time time timepicker and and store time used by duration var oldtime timepicker time gettime and and keep the duration between the two inputs time change function if time val and and only update when second input has a value and and calculate duration var duration timepicker time gettime oldtime var time timepicker time gettime and and calculate and update the time in the second input timepicker time settime new date new date time gettime and duration oldtime time and and validate time change function if timepicker time gettime timepicker this gettime this addclass error else this removeclass error
1495487,
2480979, twitter bootstrap  bootstrap is twitter s toolkit for kickstarting css for websites apps and more it includes base css styles for typography forms buttons tables grids navigation alerts and more you can use twitter bootstrap in one of two ways just drop the compiled css into any new project and start cranking or run less on your site and compile on the fly like a boss here s what the less version looks like link rel stylesheet and less type text and css href lib and bootstrap less or if you prefer the standard css way link rel stylesheet type text and css href bootstrap css for more info refer to the docs versioning  for transparency and insight into our release cycle and for striving to maintain backwards compatibility bootstrap will be maintained under the semantic versioning guidelines as much as possible releases will be numbered with the follow format and constructed with the following guidelines breaking backwards compatibility bumps the major new additions without breaking backwards compatibility bumps the minor bug fixes and misc changes bump the patch bug tracker  have a bug please create an issue here on github twitter account  mailing list  have a question ask on our mailing list twitter bootstrap googlegroups com developers  we have included a makefile with convenience methods for working with the bootstrap library and build make build this will run the less compiler on the bootstrap lib and generate a bootstrap css and bootstrap min css file the lessc compiler is required for this command to run and watch make watch this is a convenience method for watching your less files and automatically building them whenever you save watchr is required for this command to run mark otto jacob thornton  copyright  twitter inc
860439, banksimplistic is a sandbox for exploring concepts like command query responsibility segregation cqrs  event sourcing and domain driven design ddd with ruby banksimplistic is a rails   application so the first thing to do to get started is to install its dependencies bundle install brew install redis redis server with all that set the test suite should pass by just running bundle exec rake foreman start there are some differences in the directory structure comparing to a standard rails app that are worth noting app and models activerecord is not used so it s disabled in environment rb and the models directory is removed app and controllers traditional activecontroller controllers are used here the interesting part is the segregation of queries and commands index and show actions only query the reporting repository while create  update and delete actions exclusively execute commands app and commandhandlers commands executed from controller actions are handled by the classes in this directory this additional layer abstracts controllers from the domain model which is never exposed to any presentation layer the responsibility of a command handler is finding the proper aggregate root and pass the request along the commandbus module included in applicationcontroller  takes care of looking up the proper handler for the requested command app and domain this is the equivalent to the missing app and models and you ll find the entities and aggregate roots of the domain as you d expect all the domain logic is here the interesting thing is the use of the event sourcing pattern aggregateroot and domainrepository modules take care of persisting and publishing events as well as restoring domain objects from them only events are persisted in the current implementation no memento pattern and we use redis for that app and reporting reports are subscribed to events from the domain model and update themselves according to those events that way they are always in sync but totally uncoupled from the domain model the reporting repository is denormalized and persisted with redis lib and infrastructure infrastructure libraries most of the magic is here including implementations of the event bus using different technologies zeromq amqp redis configuration and initialization can be found at config and initializers and infrastructure rb if you want to try alternative event buses you should look here spec and acceptance a suite of end to end acceptance specs is useful to make sure everything works as expected during the continuous evolution and refactoring of the architecture of the app a nice pattern that seems to emerge here is that each user story corresponds with a command and event the system is supposed to handle we use capybara to interact with the app but for setting the context instead of the usual fixtures or factories we can invoke commands no unit specs everything s way too unstable yet for basic concepts like aggregates aggregate roots entities etc you can find several resources around the web although the canonical one is the original ddd book by eric evans this is gold udi dahan is one of the main promoters of the cqrs pattern this post is a nice introduction to it greg young is another well known supporter of cqrs particularly if combined with event sourcing in this post he explains his particular vision of event sourcing and the motivations and benefits of using it with cqrs fowler s offers here a more comprehensive description of event sourcing including not only its benefits but also some drawbacks if you re interested in exploring further the ideas and patterns behind banksimplistic feel free to contact me open issues in the tracker add comments to the code or fork the project and share your own experiments there are a lot of things to try by just looking at the original fohjin luismi cavall
825791, webshell a console based javascripty http client utility  by evan haas and sean coates  includes tab completion history context persistence cookies and other tasty morsels requirements  installation  npm install webshell this will install hashlib as well if necessary simple http requests  webshell supports all of the http verbs in a simple to use syntax the response s status code and the requested url are printed headers are expanded to local variables and they can be inspected additionally if the response suggests a redirect to another url the  follow function can be called for easy location following  content type text and html charset utf   date sat  nov     gmt  expires mon  dec     gmt  cache control public max age   server gws  content length   x xss protection  mode block  connection close doctype html html head meta http equiv conte relative urls  and the hostname the previous scheme and hostname and auth credentials if applicable are displayed in the prompt one  two  three  json processing  if the server returns a json content type the response is automatically processed and the result is stored in  json sean coates print response  the json response can optionally be automatically printed by setting  printresponse if  printresponse is a function it will be called with a single argument the response object it should return true or false  depending on whether the response should be printed if  printresponse is not a function its truth value will determine whether responses are printed by default  printresponse is a function which returns true for json content type responses and false for others one  two  three  one  two  three  save and load contexts  contexts including the previous request arbitrary variables and even toolbox functions can be arbitrarily stored and loaded contexts persist between sessions the previous context is automatically loaded at the start of a session and stored when a session is closed sarcasm and src and webshell master node shell js loaded context previous saved context twitter coates saved context previous sarcasm and src and webshell master node shell js loaded context previous loaded context twitter coates sean coates http auth  webshell understands the user pass syntax in urls for basic authentication auth will even persist between requests if the hostname doesn t change coates webshell will keep track of cookies for you unless  usecookies is set to you have visited this page  times you have visited this page  times you have visited this page  times saved context cookie demo you have visited this page  times loaded context cookie demo you have visited this page  times you have visited this page  times cookiecounter httponly false  key cookiecounter  value   expires sat  nov     gmt  path and  domain files seancoates com loaded context cookie demo http verbs  all of the http verbs are available to include data in the request body set  requestdata  as shown below one   two  get three  four  three   four  one   two  post five  six  five   six  sarcasm and src and webshell master echo testing some put data and test txt sarcasm and src and webshell master node shell js loaded context previous set requestdata to and users and sean and test txt  bytes utf put testing some put data n the results of http verb commands can be stored in local variables just like everything in the repl text and html text and html charset iso   http headers  you can inspect request and response headers easily host localhost  user agent webshell and   dev node js and v    accept application and json and  content type application and x www form urlencoded date sat  nov     gmt  server apache and    unix php and    dev modssl and    openssl and   l  content length   connection close  content type text and html charset iso   you can also arbitrarily set request headers couchdb welcome  version       application and json application and json and and text and plain charset utf  toolbox and callbacks  functions placed in  toolbox will be stored in your current context they are serialized converted to strings on save and deserialized converted back to functions on load additionally the http verbs are the names of properties of the  object e g get is  get these functions can be called programmatically and they take an optional second parameter for a callback that runs when the request is complete function if  status  console log last tweet and  json  text   function last tweet if only firefox extensions were as simple as chrome and safari extensions contributors  evan haas sean coates jo l perras mark cahill herman j radtke iii michael c harris
35299, this repository contains examples of complex nested model forms in rails  to try it out clone this repository and run the following commands rake db migrate see the branches for different approaches run this command to check out another branch git checkout b jquery origin and jquery the rails branch contains older examples of rails  approaches
476868, kumofs is a simple and fast distributed key value store you can use a memcached client library to set get cas or delete values from and into kumofs data is partitioned and replicated over multiple servers extreme single node performance comparable with memcached both read and write performance got improved as servers added servers can be added without stopping the system servers can be added without modifying any configuration files the system does not stop even if one or two servers crashed the system does not stop to recover crashed servers automatic rebalancing support with a consistency control algorithm safe cas operation support see following urls for more details it measured performance of the cluster using  client machines each client machine gets  entries form the cluster using  threads kumo servers store data and replicate them into other kumo servers kumo managers watch life or death of kumo servers and proceed automatic rebalancing when the number of kumo servers is changed kumo gatway relay the requests from client applications to kumo servers because kumo gateway implements memcached protocol you can use memcached client library to access kumofs following libraries are required to build kumofs linux    g and and   ruby    libcrypto openssl configure and install in the usual way and bootstrap if needed and configure make sudo make install this example runs kumofs on  node cluster run kumo manager on mgr and mgr  kumo server on svr  svr and svr  then run kumo gateway on cli on mgr kumo manager v l mgr p mgr on mgr kumo manager v l mgr p mgr on svr kumo server v l svr m mgr p mgr s and var and kumodb tch on svr kumo server v l svr m mgr p mgr s and var and kumodb tch on svr kumo server v l svr m mgr p mgr s and var and kumodb tch kumoctl mgr attach on cli kumo gateway v m mgr p mgr t  on cli use memcached client on  and tcp see documents for details this example runs kumofs on single host localhost kumo manager v l localhost localhost kumo server v m localhost l localhost  l  s and kumodb tch localhost kumo server v m localhost l localhost  l  s and kumodb tch localhost kumo server v m localhost l localhost  l  s and kumodb tch localhost kumoctl localhost attach localhost kumo gateway v m localhost t  localhost have fun with memcached client on  and tcp copyright c   furuhashi sadayuki licensed under the apache license version   the license you may not use this file except in compliance with the license you may obtain a copy of the license at unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license see also notice file
810601, an offline capable html currency converter app for the iphone to build a useful cohesive application for your phone using web standards we decided against including a library like zepto or jquery so everything is built with raw javascript with the main browser targets being android and ios browsers we can use queryselectorall and addeventlistener which covers the basic features we d usually rely on a library for plus it cuts down on filesize which matters when dealing with mobile targeting only modern mobile browsers means solid base support the majority of images have been base encoded and inlined to cut down on requests see and public and stylesheets and images css and public and stylesheets and images x css we used media queries to target older devices with images css and iphone  retina display with images x css  this saved older devices from downloading high er resolution images needlessly the app is running on sinatra it doesn t do anything fancy it s just there to query parse and cache current currency rates from yahoo we re using an image to do the drop shadows rather than box shadow  which turns out to be horrible for performance the whole layout has been designed using em s which means everything can be scaled up  for testing in chrome or safari with a user agent string set to iphone much less hassle than testing directly in the ios simulator developing for modern browsers is so much less hassle no need for graceful degradation queryselector queryselectorall native json parsing in ios   and applicationcache localstorage a consistent xmlhttprequest implementation reliable css support  including transitions animations
2651457, a live chat room built with python flask and gevent and apscheduler and redis basic architecture  screenshot  cd and path and to and source python bootstrap py bin and buildout make sure redis server is started bin and supervisord goto localhost  open multi browser to test live communication execute bin and python scripts and clearkey py to clear all data adjust comet strategy add admin role fix duplicate name adjust create room ui and ue add rm room func improve add chat message s response speed bugfixes add home page all rooms in one page and live content custom nickname create room coffee script bugfixes
1177635, osceleton  what is this  as the title says it s just a small program that takes kinect skeleton data from the openni framework and spits out the coordinates of the skeleton s joints via osc messages these can can then be used on your language and framework of choice how do i use it  middleware get avin s hacked primesense psdk driver for kinect folow his instructions for installing the openni framwork the driver and the nite middleware then you can run one of the precompiled binaries in the bin directory or compile your own on linux or mac osx note for mac users you must run osceleton from the terminal or it will not run correctly on windows you can use the precompiled binary in bin win or use the vc and and express sln file if you run the executable without any arguments it will send the osc messagens in the default format to localhost on port  to learn about the osc message format continue reading below or check out our processing examples at another fun way to test osceleton is to use the awesome animata skeletal animation software by the kitchen budapest guys you can get animata needs its osc messages in a very specific format so you must use the k kitchen mode option multiplying the x and y coordinates and adding some offsets can also be useful to tune the size of the skeleton try running it like this osceleton exe k mx  my  ox  if your animation is going crazy try to play with mx and my values and ox and oy values a bit to get a complete list of available options run osceleton h osc message format  address pattern and newuser type tag i i a numeric id attributed to the new user address pattern and newskel type tag i i id of the user whose skeleton is detected address pattern and lostuser type tag i i the id of the lost user this id will be free for reuse from now address pattern and joint type tag sifff s joint name check out the full list of joints below i the id of the user f x coordinate of joint in interval     f y coordinate of joint in interval     f z coordinate of joint in interval     to send osc messages compatible with the awesome animata skeletal animation software use the k option the messages will have the following format address pattern and joint type tag sff s joint name concatenated with user id ex lshoulder f x coordinate of joint in interval     f y coordinate of joint in interval     in this mode newuser newskel and lostuser messages will not be sent you can enable a message format that is more friendly to quartz composer with the q option the messages will have the following address pattern and joint and name and id type tag fff f x coordinate of joint in interval     f y coordinate of joint in interval     f z coordinate of joint in interval     example left knee of user  and joint and lknee and        rcollar not working yet rshoulder relbow rwrist not working yet rfinger not working yet lcollar not working yet lshoulder lelbow lwrist not working yet lfinger not working yet rankle lankle discussion come join the fun in our google have fun osceleton puppet  this is a fork of osceleton that adds a number of hacks for a specific project new options  osceleton puppet adds a number of new command line options all starrting with x this option outputs the xy z data as raw kinect values this option outputs the joint rotation data address pattern and orient type tag sifffffffff s joint name check out the full list of joints below i the id of the user f f f x axis orientation data f f f y axis orientation data f f f z axis orientation data or if in quartz composer mode address pattern and joint and name and id type tag fffffffff f f f x axis orientation data f f f y axis orientation data f f f z axis orientation data example torso of user  and orient and torso and                    runs the program with a number of options enabled by default xr xt p w r
1906047, whenever is a javascript library that lets you write your application logic in a format that reads like english you define your definitions by using a simple expression chain then hook it up in the background using jquery zepto prototype mootools dojo et al jquery support ships out of the box whenever helps you to organise your javascripts in a clean and tidy way and keeps your implementation logic separate from your behavioral logic nb this is not a testing library cucumber provided the inspiration for the syntax and separation of specification and implementation but you should be able to use whenever js to write actual apps for example take the following javascript whenever click me is clicked then change the text to clicked by itself this does nothing but it very clearly describes what will happen it s easy to hook up first click me should map to an element javascript whenever definitions add click me a click me clicked is automatically mapped to the click event finally change the text to clicked should be hooked up to a function javascript whenever actions add change the text to clicked function this text clicked or you can do this with a regexp for re use javascript whenever actions add change the text to function value this text value that s it goodbye to nested if statements add conditionals javascript whenever click me is clicked given one and one make two then change the text to clicked and implement javascript whenever conditions add one and one make two function return  and   usefully the jquery object is passed along javascript whenever click me is clicked given the text of this is something then change the text to clicked and implement javascript whenever conditions add the text of this is something function return this text something or again you can use a regexp javascript whenever conditions add the text of this is function value return this text value you can chain conditions and actions javascript whenever click me is clicked given the text of this is something and some other condition and another condition then change the text to clicked and do something else and do another thing that s it at the moment the following actions are supported javascript blurred blur  clicked click  focussed focus  hovered over mouseenter  hovered out of mouseout  loaded load  ready ready  submitted submit  changed change whenever js needs a dom library in order to bind actions to events out of the box it comes with support for jquery  but as long as you have an underlying library that supports binding events to elements you can probably use it if your dom library supports jquery syntax eg zepto  you can just replace jquery with that globally eg with zepto javascript var jquery alternatively you can implement your own whenever bindfunctiontoevent and whenever unbindfunctiontoevent function here s what they look like for jquery javascript whenever unbindfunctiontoevent function selector event action return jquery document ready function jquery document undelegate selector event action whenever bindfunctiontoevent function selector event action return jquery document ready function if event ready and and event load action apply selector return jquery document delegate selector event action or for prototype javascript whenever unbindfunctiontoevent function selector event action document stopobserving selector event action whenever bindfunctiontoevent function selector event action if event ready and and event load document observe dom loaded  function action apply document document on event selector function event element action apply element after including your dom library of choice just add the whenever js script to your project eg for jquery you might prefer to place your behavior definitions and actions in separate files or all in the one file whenever is an attempt to help writing expressive javascript there are two motivations here code that can be read quickly without trudging through logic code that clearly expresses the intent of what the programmer wants to achieve consider the example above which is a bit misleading javascript whenever click me is clicked then change the text to clicked this is a trite example which serves to explain the basic workings of whenever but it s not necessarily a great example since it doesn t encapsulate very much and doesn t explain much more than the equivalent jquery would javascript a click me click function this html clicked it does remove a lot of the cruft but it might be argued that it doesn t add a lot of meaning vs the straight jquery riffing on this a little javascript whenever click me is clicked then show the user that they clicked this is probably better but maybe a bit abstract it does get away from the danger of writing code in english which completely misses the point consider javascript whenever click me is clicked then add the display class basically when it gets to this it s almost identical to the jquery and tells us nothing about why we would want to add the display class or what that means javascript a click me click function this addclass display it inherently shows what the code does but not what the overall intent was the point is whenever is an exercise in writing clean code and not necessarily writing code in english for its own sake like everything it s a fine balance
1136384,
922756, note that this project is currently in a prototype stage in particular improvements to error handling and testing should be made before using this in any serious capacity furthermore to improve resilience to failure queues should be used to pass messages between separate processes for each stage in the workflow the workflow implemented by this system looks very crudely like this in more detail accepts a video file via http post and saves the file to disk encodes the file that was uploaded in the previous phase multiple times each time at a different bitrate the encoding is performed using ffmpeg and a separate mpeg  transport stream ts file extension is produced for each bitrate the bitrates of the generated files can be modified by editing the enabled property in profiles json note that the default encoding options used for this phase produce video in h and that the output is optimized for ios devices the output can be tweaked by editing the command property in profiles json also note that ffmpeg will not necessarily work flawlessly with the default command and any arbitrary source video although source videos that were recorded on the iphone consistently behave well splits all of the mpeg  transport streams produced in the previous phase into a series of shorter segments each segment is  seconds long by default but this is configurable for each input mpeg  transport stream one per bitrate  the segmenter also produces an index file mu file extension that contains a list of all of the ts segments produced at this phase and the url at which each segment can be accessed finally once all segments have been generated and the index files have been written for each bitrate a master index file is generated also with a mu file extension this file enables variable bitrate streaming containing a list of each index file an indication of the bitrate represented by each index file and the url that each index file can be accessed at serves all of the index files and segment files produced in the previous phase via http get clients access the content server directly downloading index files and segments over http it is the client s responsibility to buffer appropriately to play segments in order without any gaps and to use heuristics to decide the bitrate of the stream it should be playing back at this given instant and also when to switch streams compatible clients i e  clients that that implement http live streaming include ios v  and devices iphone ipod touch ipad etc  and desktops with quicktime  included with mac os x snow leopard clone this project and initialize and update the required git submodules git clone git and and github com and mjrusso and livestreaming js git git submodule init git submodule update to install this specific version of node tar xzvf node v   tar gz cd node v   and configure make install faac devel faad devel lame devel libbz dev x devel when configuring ffmpeg use the following flags configure enable gpl enable nonfree enable pthreads enable libfaac enable libfaad enable libmplame enable libx build the segmenter as follows cd segmenter and cd to run the server node src and app js when a file is uploaded the processing chain encoder and segmenter will be immediately kicked off once this processing is complete and all segments and index files have been generated the url of the variable bitrate index file will be returned as the response body of the http upload request when this url is supplied to any compatible client adaptive bitrate streaming will be performed via http live streaming assuming the default values
114522, culerity integrates cucumber and celerity in order to test your application s full stack culerity lets you run celerity from within cucumber which allows you to test the full stack of your rails or other web application from database to in browser javascript run your application in any ruby like mri    while celerity runs in jruby so you can still use gems and plugins that would not work with jruby reuse existing webrat style step definitions the following guide is written for a rails application tested with    but culerity should work with any other web framework that is supported by cucumber first download jruby and unpack it to some location for example home and jruby make sure that the jruby executable is in your path you can do this by either setting your path accordingly export path home and jruby and bin path or by creating a symlink from your bin directory ln s home and jruby and bin and jruby and usr and bin and jruby you will need the celerity gem installed into jruby jruby s gem install celerity now install the culerity gem assuming you have a rails application set up already you can run the rspec cucumber and culerity generators cd railsroot script and generate rspec script and generate cucumber script and generate culerity this creates the features folder and a file culeritysteps rb into your application this file contains step definitions for basic interactions like clicking links or filling out forms now is a good time to get rid of any webrat specific files generated by cucumber i e features and stepdefinitions and webratsteps rb after you have written a first feature you can run it just like you would run a standard cucumber feature the only difference is that you have to start a web server e g mongrel with the test environment enabled beforehand rake culerity rails start cucumber features and myfeature feature the rails instance uses a special environment culerity when you have finished running culerity and cucumber you can turn off the rails instance note the default port for this server is  you can change this in features and stepdefinitions and commoncelerity rb rake culerity rails stop while celerity is based on java and requires jruby to run with culerity you can still run your tests in your own ruby environment when you run your features a separate jruby process for celerity is spawned and all celerity commands are redirected to this other process i get a broken pipe error make sure jruby is installed and in your path running jruby v should not produce an error i get connection refused errors make sure you have started a server in the test environment that runs on port  my application can t find the data i create in my steps make sure you have disabled transactional fixtures in your env rb my database is not cleared automatically between scenarios rails can t clean the database because you had to disable transactional fixtures which only work if your test process is the same as your web server process hence you have to clean your database manually a quick way would be before do user all your models each do and model and model deleteall end
1612472, this module offers native node binding to apple ios functionality meant for node running on an apple idevice it exposes low level functionality of the device like vibrate sending sms messages displaying pop up user notifications simulating the home and lock buttons and a lot more planned considering the fact that most jailbroken devices won t have a gcc toolchain set up on their device this repo includes a pre built version of the module that hopefully will work on the majority of devices i m always looking for ideas for additional apis to add so if you can think of any functionality that you want exposed to javascript that s missing from the api below requesting it creates and displays a pop up notification onto the idevice the optional callback function will be called after the notification has been dismissed through user interaction or otherwise cancelled the most recent call to this function will be the active notification that is if there s already an active notification and this function is called then the newly created notification will take precedence over any existing notifications so if you want to display a series of notifications it s better invoke the next one in the previous notification s callback javascript ios createnotification header title  message enter your name  function err response if err throw err console log response the options object accepts the following parameters header a string that will be used as the header of the notification defaults to null message a string that will be used as the message body of the notification defaults to null defaultbutton the text of the default primary button defaults to ok to disable the default button notification without any buttons  explicity pass null here alternatebutton the text of the secondary alternate button defaults to null no second button otherbutton the text of the third other button defaults to null no third button timeout the timeout in seconds of the notification defaults to  for no timeout there s one global addressbook instance that you may use to interact with the contents of your idevice s central address book database it s also possible to modify the address book by adding editing or removing contacts or groups javascript and and the singleton addressbook namespace ios addressbook asynchronously retrieves an array of contact instances from the address book database that match the given filter if no filter is given then all contacts that are currently in the address book will be retrieved javascript ios addressbook getcontacts function err contacts if err and and something went wrong console log contacts and and firstname john  and and lastname doe  and and numbers mobile     and and vibrates the idevice shortly this is the same as when a text message or email arrives etc on devices that don t vibrate this function does nothing no error is thrown returns an object containing properties from the current uidevice an example javascript model iphone  localizedmodel iphone  name nathan rajlich s iphone  systemname iphone os  systemversion     uniqueidentifier fdfbfaffcffeffcffffffffafb sends an sms with the specified message string to the specified number examples javascript ios sendsms   this is a text message ios sendsms     another text message ios sendsms     and one more ios sendsms  you may just use a number as well locks the screen of the idevice same effect as pressing the top lock button quits the currently visible application going straight to the home screen on a device with multitasking support the app will still be running in the process list same effect as pressing the home button
228068, appcelerator titanium desktop  building titanium  for up to date instructions on how to build this project come and chat with us on irc freenode net titaniumapp titanium is licensed under the apache   license please see license for more details
375132, that acts as a simple stand up meeting stop watch it can be used to ensure your stand up meeting finishes on time and gives all the participants an equal share of time to state their progress standup timer is free open source and available under the apache v license copyright  john wood licensed under the apache license version   the license you may not use this file except in compliance with the license you may obtain a copy of the license at unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license air horn sound sampling plus   license courtesy of guitarguy bell sound attribution   license courtesy of mike koenig john wood john johnpwood net mailto john johnpwood net
3019546, a simple buddy memory allocation library see test c for detail use
46297, note i am no longer using this library and would like to hand if off to another maintainer if you re interested in using this and would like to take over please send me a message commenting system into your ruby based website it includes a ruby wrapper for their javasript widgets from the disqus website disqus pronounced discuss  is a service and tool for web comments and discussions the disqus comment system can be plugged into any website blog or application disqus makes commenting easier and more interactive while connecting websites and commenters across a thriving discussion community disqus is a free service to the general public with absolutely no inline advertisements gem install disqus disqus defaults account mydisqusaccount optional only if you re using the api disqus defaults apikey mydisqusapikey apikey your api key account  your disqus account developer false allows threads to work on localhost containerid disqusthread  desired thread container avatarsize  squared pixel size of avatars color grey  theme color defaulttab popular  default widget tab hideavatars false hide or show avatars hidemods true hide or show moderation numitems  number of comments to display showpoweredby true show or hide powered by line orientation horizontal comment orientation loads the commenting system disqusthread sets the inner html to the comment count for any links on the page that have the anchor disqusthread for example view comments below would be replaced by  comment or  comments etc disquscommentcounts disquscombo color blue  hidemods false numitems  linkto permalink  postpath post anchor disqusthread disquscommentcounts see the disqus api class for more info on the disqus api you can also read the github repository the disqus ruby gem was not created by nor is officially supported by disqus com or big head labs inc use it at your own risk and your own responsibility under the terms of the mit license copyright c   norman clarke released under the mit license
1333096, runloop     with jquery runloop you can create your own small runloop with keyframes at your own choosing each with code to execute you can put whatever code you want in each keyframe rearrange keyframes easily and use reusable maps of code and and or animations to share between runloops runloop was created to have more power more control and less hassle than dealing with jquery animate callbacks it hooks into jquery s effects queue by design to avoid timing conflicts in the case of doing many multiple animate calls currently there are no known issues for the    release an error in ie and below the   version however has sidestepped this by using top instead of z index
760908, unveil js  unveil is a data exploration and visualization toolkit that utilizes data driven software design features  data abstractions collection for simple collections of similar data items datagraph for linked data scene api scenegraph implementation declarative syntax custom actors graphical objects dynamic actor properties you can assign functions instead of values motion tweening commands e g save cpu cycles using event based framerate determination multiple displays the scene can be projected to one or more canvas elements adjustable drawing order through graph traversers choose from depthfirst or breadthfirst or implement your own traverser mouse interaction support on display level picking zooming paning getting started  probably the easiest way to get started with unveil js is to install the visualization which you can use as a starting point  new declarative syntax  to give the whole thing an even more declarative feel actors as well as the whole scene can now be specified declaratively using a simple specification syntax var scene new uv scene actors  id movingrect  type rect  x  y  width  height  actors  type label  text i m moving     id animatedcircle  type circle  x  y  radius  height   after you you ve set up your scene you need to specify at least one display var display scene display container canvas  width  height  zooming true paning true you can attach actors to displays as well those objects are typically unaffected by view transformations so they stick on their original display position display objects are meant as an overlay to be drawn after the scene objects display add type label  text function return frames per second and this scene fps x  y  since all actors have a unique id you can reference them programmatically and add special behavior e g animation scene get movingrect bind mouseover  function this animate x    bounceeaseinout this animate y    scene get movingrect bind click  function this animate rotation  math pi and   scene get animatedcircle bind click  function this animate radius    supported browsers  google chrome  and safari  and firefox   and internet explorer  and opera  and  unveil js   display actors actors that stick on on a display rather than on the scene add an api to get the top most active actor in case there is more than one object under the cursor api docs unveil js stars there should be a dedicated place for commonly used custom actors stars i could imagine putting them in a github repo ready for reuse contributions etc eventually an online index for finding the right star for a certain job would also be nice
179455, this project is currently inactive  but feel free to fork and contribute the difference being that the book does not use any external libraries just javascript and the canvas api while doodle js implements some of the actionscript api since i came over from the flash world personally i now just add these methods as needed instead of importing the entire library but your preference my differ in summary while the code here can be useful if you are just beginning to animate with the canvas i d suggest you take a look at the examples in the html animation repo and buy the book to get a better understanding how they work a javascript animation library for html canvas  tested on chrome and webkit looking good on firefox  requires a browser with support for html canvas and some ecmascript  capabilities some of the features use the canvas drawing api with sprites and a scene graph event handling and dispatch for objects nodes maintain transforms bounds and other useful properties a clean api with a focus on good javascript style influenced by actionscript  jquery node js and jslint easy to add to an existing page element where flash no longer displays git clone git and and github com and billyist and doodle js git and build and make doodle and build and doodle js debugging version type checking and some useful error messages and build and make doodle d and build and doodle debug js for more options and build and make doodle h from hello world html and doodle js and blob and master and doc and examples and hello world html doctype html html head meta charset utf  style display width px height px and style and head body script doodle ready function var display doodle createdisplay display  text doodle createtext hello world appendto display and and center text text x display width and  text y display height and  and and game loop display on animationframe  function text rotation and    and script and body and html
1023845, s core classes  introduction  requirements  java   s communication layer build instructions   first build and install the comm package in your maven repository  kryo reflectasm and minlog must be installed to your local maven repository manually the jars are present in lib and within this project to install run the following commands mvn install install file dgroupid com esotericsoftware dartifactid kryo dversion   dpackaging jar dfile lib and kryo   jar mvn install install file dgroupid com esotericsoftware dartifactid reflectasm dversion   dpackaging jar dfile lib and reflectasm   jar mvn install install file dgroupid com esotericsoftware dartifactid minlog dversion   dpackaging jar dfile lib and minlog   jar  build and install using maven mvn assembly assembly install
751, el dorado  el dorado is a full stack community web application written in ruby and rails it features a forum event calendar group chat file sharing random headers avatars themes and privacy settings screenshot   git clone git and and github com and trevorturk and eldorado git cd eldorado cp config and database example yml config and database yml cp config and config example yml config and config yml gem install rails v    rake gems install rake db create rake db schema load script and server deploy the app to heroku gem install heroku heroku create set the variables for your production environment in config and config yml rake s create rake heroku config git push heroku master heroku rake db schema load heroku open mit license  copyright c  trevor turk permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
2223890, css transforms were first introduced in webkit in  and have now reached mass adoption by all the major browser vendors this is great news for web developers especially in the case of d transforms which are hardware accelerated resulting in extremely smooth animations and responsive applications the api for applying transforms however does not scale to complex applications which require intricate and complex management of transformations transformjs attempts to identify and address these problems allowing developers to make use of transforms without having to be encumbered by cross browser issues and low level apis here s a snippet of code that uses transformjs to apply multiple d transformations to the same element relative to their current value and animate the changes javascript test animate translatey and   scale and   rotatey and    rotatex and    rotatez and    for more detailed usage and overview information please visit the javascript copyright c  strobe inc permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software and javascript back to top
958161, rendering game using both canvas or dom animation of the sprites using canvas dom or css animation in webkit firefox  and collisions detection with collision zones simple background manager callbacks after given number of frames method s chaining       and nagasaki   kb gzip   kb one pixel background margin bug in canvas mode fixed it s now possible to switch background image using img function      and arkansas   kb gzip   kb every method now return itself when you call it with parameters like speed  so it s possile to connect multiple methods into one chain like background speed  direction  methods called without arguments returns value of given metod like background speed return the speed of the background background direction could be now specified in both strings n  s  e  w and numbers radians it is possible to change background direction on the fly without resetting the background position       and kamehameha   kb gzip   kb fps module optimization    v   and blackwater   kb gzip   kb    v   and birthdayafterparty   kb gzip   kb css animations support in firefox tested in   and beta css animations support in webkit browsers tested on chrome  safari   cssanimationoff function added works the same as canvasoff but for css animations some major minor bug fixes    v   and guanabhadra   kb gzip   kb changes in array indexof we don t need full spec implementation here this one is faster and smaller    v   and atilla   kb gzip   kb proper declaration of mbmaincanvasstyle variable    v  and odoacer   kb gzip   kb first release permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1733680, knife github cookbooks  description  a knife plugin facilitating installing updating and tracking chef cookbooks found on github installation  gem install knife github cookbooks motivation  the current repo of cookbooks pattern of sharing neglects chef s core unit of currency the cookbook excellent cookbooks that developers have labored over for hours are lost in the sea of forks of opscode and cookbooks  hidden from the prying eyes of google just look at this mess there s also the opscode community which presents users with a cookbook but no way to see what it contains without downloading a tarball this feels vauguely like sourceforge for pete s sake folks i thought this was devops i m a developer i spend hours on github everyday cookbooks should be individual github repos with all of the bells and whistles that come along with it the network graph pull requests issues the tools of a developer tarballs tarballs are what a smelly sysadmin downloads between games of quake the hedgehog knows what i m talking about and this say you wanted to install the yum cookbook located at knife cookbook github install cookbooks and yum directory moved into cookbooks and yum using the familiar vendor branch pattern and the resulting files committed into the repo with a log message import cookbooks and yum version cfbfdebcaaddaafb by default the public git and and uri will be used to clone a private repo via the git uri pass the s option knife cookbook github install mystealthystartup and secretsauce s say you ve seen some activity on one of the cookbooks you re using and you want to see what s new there s magic for that too say you installed papercavalier s mongodb cookbook on may st and want to see what s new when you run the following command knife cookbook github compare mongodb the local git log will be parsed to see what revision the cookbook was at when it was installed and the github compare view will be launched if you want to get up to date another quick call to the install command will get the cookbook updated knife cookbook github install papercavalier and mongodb cookbook but wait say you ve noticed that someone in this case erkki has forked the mongo cookbook to see what they ve added just run the following knife cookbook github compare mongodb erkki if someone s made changes in another branch you can compare the changes like knife cookbook github compare mongodb jnewland and fix bug then install those changes like so knife cookbook github install jnewland and mongodb and fix bug epic the tools of a developer conventions  this plugin only supports installing repositories that contain a single repository at the top level i do not plan to support installing cookbooks contained in a repository like opscode and cookbooks  because i feel this is a broken pattern for storing and sharing cookbooks if the repo you re trying to install is prefixed or suffixed with chef and and or cookbook  this will be stripped from the repo name for example knife cookbook github install mystealthystartup and chef nosqlcookbook will create the cookbook in the cookbooks and nosql directory this plugin does not support automatically fetching cookbook dependencies since version constraints are numeric and cookbook names can t specify the github user if you have an clever ideas for how this should work hit me up bundler has been tried see bundler s pull request history  but is a no go until it fixes its git repo support git repo support was not a priority for bundler core devs so anyone should be aware if they do try to revisit this requirements  chef    jesse newland jesse websterclay com jnewland jnewland on freenode author jesse newland jesse websterclay com copyright copyright c  webster clay llc license apache license version   licensed under the apache license version   the license you may not use this file except in compliance with the license you may obtain a copy of the license at unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license
1835564, how to use you can add imageprocessing framework to your project like other framework app store you can download ios app pipic using this framework on app store hp in construction blog android version will be release soon dependency accelerate framework twitter acknowledgement my colleague ko yokokawa designed hp and gave me advice references optimizing opencv face detection for the i mx bsd license this framework use opencv please read license agreement below important read before downloading copying installing or using by downloading copying installing or using the software you agree to this license if you do not agree to this license do not download install copy or use the software license agreement for open source computer vision library copyright c   intel corporation all rights reserved copyright c   willow garage inc  all rights reserved third party copyrights are property of their respective owners redistribution and use in source and binary forms with or without modification are permitted provided that the following conditions are met redistribution s of source code must retain the above copyright notice this list of conditions and the following disclaimer redistribution s in binary form must reproduce the above copyright notice this list of conditions and the following disclaimer in the documentation and and or other materials provided with the distribution the name of the copyright holders may not be used to endorse or promote products derived from this software without specific prior written permission this software is provided by the copyright holders and contributors as is and any express or implied warranties including but not limited to the implied warranties of merchantability and fitness for a particular purpose are disclaimed in no event shall the intel corporation or contributors be liable for any direct indirect incidental special exemplary or consequential damages including but not limited to procurement of substitute goods or services loss of use data or profits or business interruption however caused and on any theory of liability whether in contract strict liability or tort including negligence or otherwise arising in any way out of the use of this software even if advised of the possibility of such damage
1655409, tl dr zero config reverse proxy example via http spdy mq all reverse proxy servers have a common pain point they have to know which backends requests can be routed to need to bring up a new appserver behind nginx haproxy or equivalent update your config then hup or reboot the server painful why can t we decouple this relationship once and for all nginx haproxy and similar tools are all great but what is missing is a simple protocol that would allow us to decouple these frontends from explicitly specifying each and every routing rule for every backend specifically what we talking about upstream backend server      server      server      listen      location and looks familiar we specified three backend app servers in this nginx config how do you add more update the config ugh ideally we should be able to bring up additional backends without modifying the frontend servers and requests should just flow to the new server wouldn t that be nice below is an admittedly somewhat frankenstein experiment to allow us to do exactly that next we have hello rb which is a simple example of a worker process in this case written in ruby but it could be any language or runtime what does it do it connects to port  via an xrep socket when it comes up and waits to receive mq messages which are actually carrying spdy frames mq and spdy are a great match here since both are message and stream oriented that s it and the best part is start the router and then start as many workers as you want or shut them down at will mq will do all the work for connection setup and teardown our router knows nothing about how many workers there are and our worker knows nothing about how many frontends there are now all we need is this as an nginx module a quick visual representation of what is happening here if you are not familiar with mq xreq socket automatically load balances incoming requests round robin to all the xrep workers as implemented the example code will buffer the incoming http request before it is dispatched to the worker but will and can stream the response back from the worker without waiting for complete response server and router incoming http requests are parsed via an async goliath web server handler router rb the router converts incoming http request into spdy protocol each http request is assigned a unique stream id as per spdy spec the router binds an xreq mq socket on port  and forwards all spdy packets there workers any number of workers connect via xrep to port  worker accepts an http request delivered in spdy format and generates a response worker sends an unbuffered stream of response spdy packets back to the router router processes the spdy response and emits an async http response back to the client bundle install ruby hello rb worker  ruby hello rb worker  ruby router rb sv p  hello from worker  hello from worker  what happened here first notice that we started the workers before the router was up the order doesn t matter thanks to mq next we started the router which is listening to http requests on port  and forwarding spdy requests to port  next we dispatch some queries and zmq does its job and load balances the requests between the workers now kill one of the workers and send a new request zmq does all the cleanup work for us and now all the requests are going to the single live server now start five more workers and once again we get transparent load balancing no config reloads no worries
2400486,
957422, ftlocationsimulator  ftlocationsimulator allows simulating core location in the iphone simulator on the desktop it sends fake core location updates taken from a kml file that describes a predefined route besides the simulated core location updates it also updates the blue userlocation view on mapkit views the sample project shows how to integrate ftlocationsimulator into an existing app in this case apple s breadcrumb sample application integration steps  in a nutshell these are the necessary steps  add the ftlocationsimulator directory to your project  add licucore to other linker flags in the project and target settings this is needed for regexkitlite  ifdef all occurences of cllocationmanager like the following ifdef fakecorelocation self locationmanager ftlocationsimulator alloc init autorelease self locationmanager cllocationmanager alloc init autorelease only the alloc and init call has to be ifdef ed all further occurences of your locationmanager object don t need to be changed since ftlocationsimulator uses the same interface as cllocationmanager  include ftlocationsimulator h where necessary  if you re using mapkit set the mapview property with your mkmapview and set it to nil if you re done with the map then put the following into your mkmapviewdelegate mkannotationview mapview mkmapview mapview viewforannotation id mkannotation annotation if annotation ismemberofclass mkuserlocation class ifdef fakecorelocation return self locationmanager fakeuserlocationview return nil and and your code for regular annotation views  adjust fakecorelocationupdateinterval in ftlocationsimulator h if the location updates are too fast  change the fakelocations kml if needed currently it includes a route from cupertino to san francisco to create a new fakelocations kml use google earth and create a route send the route via email and take the route kmz file out of the draft mail the kmz format is zipped kml so unzip that file using unzip route kml on the command line the parser is not a generic kml parser but is only able to parse these specific google earth kml files implemented methods and properties  from cllocationmanager delegate location for polling updates distancefilter startupdatinglocations stopupdatinglocations cllocationmanagerdelegate locationmanager didupdatetolocation fromlocation is sent by ftlocationsimulator cllocation objects coordinate location timestamp known issues  in google s kml files the distance between waypoints varies for straight roads it s larger than for curvy roads ftlocationsimulator does not consider this difference so the speed on the kml route varies the faked userlocation view does not incorporate the gps halo animation heading course altitude speed and accuracy are not implemented some of them might be technically possible collaboration  we re happy if someone wants to contribute to the project or work on some of the issues just fork the project and send us a pull request have fun
1729305, jquery chrono plugin version    jquery chrono provides syntactic sugar around javascript s native settimeout and setinterval functions to execute some code in  minutes instead of writing settimeout function   and and how many zeros is that or the slightly more readable settimeout function     and and  multiplies in head min now you can just write after  minutes  function and and settimeout becomes after and setinterval becomes every if you don t have jquery you can use the aliases jquerychrono every and jquerychrono after these are all valid calls after  function and and  milliseconds after    function and and   milliseconds after sec  function and and  seconds after  minute  function and and  minute after  mins  function and and  minutes after   hours  function and and  hours after minute  function and and  minute after  hour  minutes  seconds  function and and    hours after min  s  function and and   minutes every  for creating intervals has the same exact syntax as after valid time units include millisecond default second minute along with all their common abbreviations and pluralizations jquery version  this project works with jquery   and see test and test html but as of version   also works without jquery contributing  add relevant qunit tests and make sure all existing tests pass in test and tests js update the jsdoc doc and  with java jar tools and jsdoc toolkit and jsrun jar tools and jsdoc toolkit and app and run js a t tools and jsdoc toolkit and templates and jsdoc and d doc and lib and jquery chrono js update the minified file lib and jquery chrono min js with java jar tools and yuicompressor    and build and yuicompressor    jar o lib and jquery chrono min js lib and jquery chrono js licensed under the  clause bsd license bsdlicense txt  copyright c  arthur klepchukov at gmail
1805416, this is a simple implementation of the swipe to reveal behaviour found in twitter and spotify for iphone it uses modern ios techniques animations using blocks and so requires ios   or greater the basic premise is that by swiping over a table view cell the content view is shifted to reveal a background view which the developer should provide themselves when the table view is scrolled any swiped cell will close a subtle bounce effect is added when the content view slides back in the lrslidingtableviewcell class should be re usable as is you just need to provide a background view and a delegate for the cell typically the table view controller see the provided example controller for an example of how to handle scrolling correctly all code is licensed under the mit license credit to whoever came up with this originally as far as i know it s twitter for iphone formerly tweetie but i don t know this for certain
916697, deft is a single threaded asynchronous event driven high performance web server running on the jvm the deft web server is an open source projected licensed under apache version  deft was initially inspired by facebook and tornado
498050, firmin is a javascript animation library based on css transforms and transitions var box document getelementbyid box firmin animate box scale x  y   translate x  y     development  to build firmin from source you will need ruby  rubygems and bundler the test suite also depends on js class  which is provided as a git submodule to get everything working run the following shell commands in order download the source code git clone git and and github com and beastaugh and firmin git cd firmin git submodule update init recursive install dependencies gem install bundler bundle install build the test framework and firmin cd vendor and jsclass run tests open test and runner html the last command will on os x anyway open the test runner for firmin s automated test suite the test runner page also includes links to the manual tests which must be run by hand in a browser the firmincssmatrix test suite currently fails on non webkit browsers as the webkitcssmatrix class is not available as a reference implementation
620714, nodules is an asynchronous module loader for node that provides url and http based module ids module hot reloading and package based module mapping nodules and automatically analyzes modules references and downloads any dependencies on first access prior to executing modules remotely downloaded modules are retained so they only need to be downloaded once nodules supports standard commonjs modules to see nodules in action right away go into the example directory and you can start the example package with node and lib and nodules js the first time you run this nodules should automatically download the dependency and then start the application you can test the module hot reloading by making a change to sibling js while it is running the most direct way to load a module with nodules is simply to load the module from the command prompt the require provided by nodules is transitive so all dependencies of my module will also be able to utilize full urls nodules asynchronously downloads all the deep dependencies of a module prior to execution so that all requires can execute synchronously even though all modules are fetched asynchronously the modules are all saved and cached locally so that future require calls in future program executions can always run locally naturally it is easier to start nodules with a script create a script with using the script from example and nodules as a template and you can simply do nodules module to load for any type of real development it is recommended that you use packages rather than unorganized individual modules nodules provides an elegant mechanism for working with packages based on package json mappings a package is a directory and file structure for a set of modules module configuration and other resources an example can be found in the nodules s example directory if you run nodules from within a package it will automatically read the package json from the current working directory for module configuration and id mapping use the lib as one of the default paths for looking modules and execute the lib and index js file if it exists the package json s mappings can contain mappings to uris so that you don t have to use uris directly in your require calls in your modules for example your package json could define this mapping to map the foo namespace to the modules from a package archive available from somesite com package json name my project  mappings we could then define our index js file using that mapping lib and index js something now we can run our package by simply starting nodules from inside this directory with package json nodules nodules supports referening package zip file which is the recommended mechanism for referencing packages for example mappings when the target ends with a slash the mapping will only match module ids in require statements where the mapping is the first term in a path so this would match something of the form require commonjs utils and lazy array you can also map directly to individual modules by specifying the full url with an extension and nodules support the jar scheme for example this will only match the exact module id of require lazy array not require lazy array and module reloading  another critical aspect of productive development is module reloading so you don t have to constantly restart your vm to use reloading you can wrap your reloadable code in a require reloadable function this function takes a callback that is called whenever any loaded modules change including when it is first called for example require reloadable function and and load the app and assign to app when started and for each reload app require and my app js and and don t re execute http server initiation for each reload should only load once http createserver function request response app request response listen  nodules does intelligent dependency tracking so that when a file changes the appropriate modules are reloaded all the modules that depend on the modified module are reloaded to ensure correct references but modules without depedency on the modified module are not reloaded this enabled optimal reloading performance while ensuring the proper references to objects are flushed for consistent behavior module return values  nodules also supports modules that return a value or switch the exports this very useful for situations where it is desirable for a module to provide a single function or constructor one can create a module that returns a function like this return function  exports function  using nodules programmatically  you can still use nodules programmatically without having to start node with nodules as the starting script you can use nodules s ensure function to asynchronously load an nodules s entry module require and foo where foo js could have for normal top level ids require will default to the system s require implementation so modules can still do var fs require fs nodules local cache  nodules downloads any necessary dependencies and stores them locally by default these files will be downloaded to a directory structure rooted in the current working directory under downloaded modules however the location of the local directory of downloaded packages and modules can be defined with the nodulespath environment variable it is generally recommended that you define the nodulespath variable to an absolute path so that the same set of cached and downloaded packages and modules can be reused from different working directories it is perfectly valid and reasonable to edit files from the locally downloaded file set within this path by default urls are mapped to the file system by converting each part of the url to a path but this makes heavily nested paths to make it easier to edit and work with your own packages you can define a paths json file in the nodulespath directory that defines how urls are mapped to the local file system for example this makes a good paths json for directing your git projects to your own projects directory urls that don t match will be saved using the default mapping mechanism more package json configurations  engine specific overlay  commonjs packages provides a means for creating engine specific overlays to define alternate configurations for other engines for example one could define an overlay in package json overlay node file fs  we can also define a compiler to be used on sources prior to execution this is more efficient than using a global extension matching like registerextension since it only applies to the package that defines the compiler rather than being global in your package json you can define a compiler to use this is how you would use coffeescript compiler function compile  extension coffee   the module property is required and the function property is optional and defaults to compile proxy settings  if your machine is behind a proxy nodules will need to go through the proxy for http downloads nodules will read the httpproxy environmental variable to determine what proxy it needs to route requests through nodules provided top level modules  nodules provides several top level modules for modules loaded with nodules including promise promise library  system based on commonjs module  fs promise promise based fs module  and nodules the nodules module itself larger example  copyright c  the dojo foundation all rights reserved nodules is a sub project of persevere www persvr org and is thus available under either the terms of the modified bsd license or the academic free license version   as a recipient of nodules you may choose which license to receive this code under dev progress  currently alpha level issues uri redirection needs to properly change module ids more unit tests
1444414, nodrr a node js and mongodb powered twitter clone
2345093, kernelroll is a linux kernel module for advanced rickrolling it works by patching the open system call to open a specified music file instead of other music files currently it only checks if the file extension mp is present and calls the original open with the supplied path warning there is probably a performance penalty and your kernel might crash at a very inappropriate time and cause data loss you are responsible for the code you load into your kernel but most probably it will be alright you need the address of syscalltable in your kernel use grep syscalltable and boot and system map     amd ffffffff r syscalltable on the respective system map of your kernel to find out the address now fire up kernelroll c and add yours void syscalltable void xffffffff this will probably be simplified in the future but as syscalltable isn t exported anymore in   kernels we have to use some tricks compile with make load with insmod kernelroll ko rollfile and path and to and rickroll mp fire up a music player of your choice play a song and consider yourself kernelrolled
1357872, app engine boilerplate is a versatile yet minimalistic setup for new app engine projects including it s automated build toolchain for minification and concatenation of js and css flexible user preferences model with auto caching plus gravatar link baserequesthandler for simplified rendering and access to user preferences loginrequired decorator memcaching setup templates and template addons tools such as istestenv and slugify url automatically subscribe users to your mailchimp newsletter app yaml configuration for admin areas static files this project does not contain a lot of code to get the best understanding of it s features openid authentication  user authentication with openid works out of the box including a nice user interface via the openid selector  jquery plugin also used by stackoverflow  be sure to enable openid authentication in your app settings on app engine more infos about appengine and openid memcaching  returning cached data usually improves the performance of a website app engine provides a custom version of memcache to store various data types which can be used to efficiently cache the results of datastore queries or commonly used elements on the homepage memcache with a datastore fallback if not yet cached simply adapt as you need it html boilerplate  html boilerplate  is a great base setup for building the website frontend and furthermore includes a build script which minifies and compresses html css javascript and images html boilerplate is located in and staticdev  and it s build script outputs an optimized release version to and staticdev and publish the only modification to the standard html boilerplate is adding a few blocks to and staticdev and index html block header and main and scripts and footer during development the symlink and static points to and staticdev on publishing the project uploadtoappengine sh invokes the html boilerplate build script and changes the symlink and static to and staticdev and publish  in order to upload the optimized version uploadtoappengine sh  uploadtoappengine sh is a tiny shell script which simplifies invoking the html boilerplate build tools before testing and uploading your app to app engine to use it you need to set cmdappcfg to your local devappserver py exact steps of and uploadtoappengine sh asks if it should run the build process with ant minify changes the and static symlink to the production version waits for you to test and confirm uploads the app to appengine reverts and static to the development environment these would be the manual steps go into html boilerplate s build directory cd staticdev and build run ant which compiles an optimized version into staticdev and publish ant minify go back into the main directory cd and and change reference of and static symlink to optimized version rm static ln s staticdev and publish static test the optimized version publish to web with appcfg py after publishing you can change back to staticdev rm static ln s staticdev static adding css files  css files are no longer imported from index html but exclusively through using import in style css html boilerplate automatically includes minifies and concatenates css files which are imported via an import statement from within style css add references to your custom stylesheets from there never from within index html working in windows  there are a couple of posix symlinks within the project that will need to be updated to work with windows and static which points to and staticdev during development and templates and base html which points to and static and index html to create the new links delete the existing links and use the mklink command from an command prompt run with administration privileges making these two changes will enable you to launch the project using the google app engine sdk launcher during deployment the current sh script changes the and static link to and staticdev and publish and a forthcoming bat script will include this functionality  feedback improvements and critique are greatly appreciated fork away some ideas for future improvements check for unique username email verification update openid selector oauth login twitter facebook linkedin dropbox etc about page with feedback form feedback dialog akismet twitter bit ly modules
1552202, formfactor  formfactor helps you customize your web app for different form factors e g when you make the mobile version  the tv version  etc about form factor detection  the write once run many aspect of html means developers are building html apps for desktop tablets mobiles tv and so on we don t advocate a separate web app for every device ever but we do think it s sometimes nice to make a distinct interfaces for each major form factor you keep your core app most of the logic markup and styling and you augment it with an awesome layer to target each form factor you ve heard of browser detection and feature detection form factor detection is a third way providing an avenue to manage conceptually distinct user interfaces it doesn t eliminate the need for the first two approaches but you use them in the context of a particular form factor s interface about formfactor js  this library is a bit of infrastructure to help you manage a multi form factor project we re sorry to infom you this library alone won t automatically make a spiffy mobile version of your desktop app it s really just piping the spiffiness is up to you formfactor allows you to register a number of form factors each form factor is an id and a list of indications that the form factor is in use if any indication is true the form factor is deemed to be in use formfactor allows you to register a number of user interfaces uis each ui is associated with any number of form factors  resources  and callbacks the resources can be stylesheets or scripts when formfactor js deems a given form factor is in use and there is a ui for that form factor it does the following attach the form factor s id to the document s root html tag dynamically loads and executes all resources calls all callbacks passing in the form factor id this is very under construction script function and contents of tv js and formfactor register tv tv  function return navigtor indexof samsung   navigtor indexof samsung    and script script var formfactor formfactor detect  formfactor tv  resources and style and tv css  and style and fullscreen less  and script and ambientsounds js  and script and fx coffee  callbacks function alert look mum i am on tv   formfactor tablet     and and default callback when nothing matches  resources and style and plain css  script and plain js  callbacks function alert in plain mode   and script script if formfactor is tv alert look ma im on tv  if formfactor isnt tv alert the revolution will not be televised  and script does this replace media queries no this is a proof of concept framework designed to complement all the existing technologies on the web and help you target specific classes of devices with stylesheets does this replace feature detection no we like feature detection too much in the context of any given ui you should still be using feature detection for features which may or may not be present can i still practice responsive web design heck yes you can still use all the current techniques to style your app or site based on capabilities such as min device width etc can this detect every device class not a chance yet we need your help to expand this project to help with device detection can i define definitions for my own device classes perhaps i don t care for tv yes in fact the core framework is agnostic about form factors and their indications we do include a handful of basic indicators for the main devices but we hope the community will help refine them over time
6700, provides font lock indentation and navigation for the it s easiest to install and keep clojure mode updated using require package add to list package archives package initialize m x package install clojure mode if you use a version of emacs prior to  that doesn t include older package el installed from tromey com you should upgrade in order to support installation from multiple sources of course it s possible to just place it on your load path and require it as well if you don t mind missing out on byte compilation and autoloads using clojure mode with paredit is highly recommended it is also available using package el from the above archive use paredit as you normally would with any other mode for instance require paredit if you didn t install via package el defun turn on paredit paredit mode  add hook clojure mode hook turn on paredit better interaction with subprocesses via slime place the lein script on your path and make it executable lein plugin install swank clojure    m x clojure jack in from inside a project copyright    jeffrey chu lennart staflin phil hagelberg distributed under the gnu general public license see c h t to view
872827, this means that you can take advantage of variables  function calls  mixins and operations and calculations in your stylesheets together with a full stack html css framework that leverages all these exciting new technologies new features the outliner shows your current document s structure with the new html algorithm to structure documents this is important for website semantics just follow the html outliner links to navigate around your document best features during development you can keep your browser window open beside your code and as you make changes and save your less file in your coding environment the browser refreshes to show you the changed layout cssborderradius px px   see css and style less for an example pure semantic html is one of the most important goals i had in mind when designing the flaw less css framework that way you can completely divide markup and presentation for example if you need to change column positions there are nice helpers like and and first column in markup shift it  columns to the right my content gridspan  and and this is  columns wide gridshiftright  and and shift  cols width of sidebar and and second columns in markup the sidebar my sidebar gridspan  and and this is  columns wide gridshiftleft  and and swap position with content  cols yeah you read that correctly you can swap column positions just with css you start with  kb  and simply add only what your website needs a basic grid is smaller than  kb how can i use this download the complete package and look at index html and css and style less there s plenty of inline documentation to get you started what exactly makes this framework different most css frameworks provide a set of css files that make up the rules you have to include many things you might not need for your custom layout and often it s not easy to change basic things like the number of columns in the grid system with flaw less css you begin with no rules at all you add every feature you need via mixins that the framework provides here s an example gridsetup     em center px px this sets up an  column grid with  width and gaps of  em between columns the grid will be centered and has a min width of px and max width of px this works cross browser down to ie and you don t have to exhaust yourself again to find out how to make ie listen for min width or max width all the dirty stuff is already in the framework flaw less privdes you with elegant abstractions of the wilderness that is css today this was accomplished in just one  function call that sets up the grid exactly how you need it now let s define some markup for the grid body section id grid header and header footer and footer and section and body this is the markup we could use for a basic two column layout with header and footer we don t have to put any classes about the layout or design here this is pure semantics and it s beautiful here s the css needed to build the complete grid grid grid and make this element the grid and header gridspan  and span all  columns and article gridspan  and the content  columns wide and aside gridspan  and sidebar fills the rest and footer gridspan  and footer has full span of  cols and the best part about this is that you re not locked into any rules from the framework you can change the complete layout any time just change a few arguments in gridsetup or adjust element sizes by changing how many columns they span cutting edge webdesign maybe you have heard of all the talk about liquid  elastic and device responsible websites you know what you can do all this with flaw less css above you already saw a liquid layout width  but you can change your mind any time if you decide to change to a flexible layout just change your gridsetup call to this gridsetup em   em px px or if you prefer a rigid layout you can easily declare a fixed px and the framework does the rest for you gridsetup px   em look at this media only screen and max width px and min width px article gridspan  and make the article span the full  columns and aside gridspan  and and also the sidebar gets full width and this is the way you decide how your columns change in response to the screen size see how simple that is these rules just apply to the layout on screen sizes between px px and we said  if the screen is that small change the width of my columns so that they both span the full width  this results in a one column layout that s perfect for small devices or screen sizes okay that s nice but i want real css on my server just add compress to the end of the url in your development browser and reload the page this will give you an lt textbox gt at the end of the page with the complete css code compressed and optimized for production copy this into a  normal css file and link it in your html you ve just finished your first development cycle the first css framework with real addons the best thing about flaw less is its modularity each core module is located in the and core subfolder where you can find all components that make up the modules components are files that add small functionality to the big picture and together they form great systems like the grid it s really easy create firstmodule less under and addons open and addons and install less add import firstmodule less at the end of the install less you ve just installed your first flaw less module visions for the future if anyone is interested in collaborating i m planing a website ala jquery s for people to upload custom modules along with some docs and advice i think this could become the next big movement toward pleasant webdesign much like jquery opened up javascript to new audiences and of course i d love to see you in the team for making the framework better kind regards dominik guzei contributors anna frey israel d canasa the mit license copyright c   dominik guzei permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the  software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided  as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1532304, and express and backbone and socket io the project can be installed via npm or by cloning this repo into your project npm install backbone redis git clone git and and github com and sorensen and backbone redis git var express require express  redis require redis  bbredis require and and  browserify require browserify  io require socket io  server module exports express createserver  io io listen server var db redis createclient       pub redis createclient       sub redis createclient      bbredis config io io database db publish pub subscribe sub listener backbone  server listen  you can also create schemas for your models which will have hookable methods for you to intercept the data the hookable methods are create  read  update  delete  subscribe  and unsubscribe  each with both pre and post methods attached var fooschema bbredis schema fooschema pre create  function next model options cb next model options cb  post create  function next model options cb next model options cb  pre subscribe  function next socket options cb next socket options cb  post subscribe  function next socket options cb next socket options cb  bbredis model foo  fooschema just be sure the name you give for the schema matches the type attribute that you set on the backbone model if you have cloned the repo just serve the file otherwise you can expose it to the client using browserify var socket io connect bbredis config io socket listener message var foo backbone model extend url foos  type foo  sync  sync var foolist backbone collection extend model todo url todos  type todo  sync  sync now that there is something to work with we can use all of the default backbone methods foolist fetch foolist subscribe  function foolist create data lorem ipsum  foolist unsubscribe
1986986, disruptor wizard  the lmax disruptor itself is an extremely high performance low latency method of passing data between producers and consumers a simple consumer chain where a must process events before b which must be before c which in turn must be before d disruptorwizard dw new disruptorwizard entryfactory ringbuffersize executor dw consumewith a then b then c then d a diamond shape dependency where a and b process any event c depends on a d depends on b and e depends on all previous tasks dw consumewith a b dw after a consumewith c dw after b consumewith d dw after c d consumewith e
1071112, a cocoa interface to socket io by way of web sockets if you re already using socket io stuff for your web site you might find it convenient to use the same architecture for your mobile stuff too socketioclient client socketioclient alloc initwithhost host port port client delegate self client connect client send hello socket io isjson no you ll get sweet callbacks on your delegate when stuff goes down void socketioclientdidconnect socketioclient client nslog connected void socketioclientdiddisconnect socketioclient client nslog disconnected void socketioclient socketioclient client didreceivemessage nsstring message isjson bool isjson nslog received  message and of course all the normal heartbeat and reconnection stuff will happen for you behind the scenes if you have git   and git clone git and and github com and fpotter and socketio cocoa git recursive or earlier git clone git and and github com and fpotter and socketio cocoa git socketio cocoa cd socketio cocoa git submodule init git submodule update copy the asyncsocket h  asyncsocket m  websocket h  websocket m  socketioclient h  socketioclient m files to your project if you re building for ios  make sure you add a reference to the cfnetwork framework or you ll see compile errors from asyncsocket
2908502, php mp png waveform generator generates png waveform images for a given mp file by converting it to wav and processing amplitude points and plotting them on a gd canvas web server apache etc unless modified to run as a command line script copy to a location on your web server ensure that the lame command is accessible and executable from that directory for windows systems place the downloaded exe and dll as linked above into that same directory or modify the script ensure the directory support write persmissions or specify an alternate temporary output directory that does the initial form when the script is loaded in your browser allows you to specify some basic parameters for how the image is generated and displayed other than the obvious dimensions and colours there are two advanced options draw flat line indicates whether or not to draw waveform point details that have a value of  enabling this will allow you to see a flat zero level line where there is no audio playing otherwise it will be left blank the stereo waveform option allows you to generate a single image with both left and right audio channels separately the detail of the waveform can be adjusted by modifying the detail constant at the top of the script the lower the number the less data points are skipped thus resulting in higher detail waveform the most time consuming factor of the script is the lame encoder which first converts the uploaded mp into a  bit mono  khz mp and finally to a wav audio file unfortunately this doesn t seem to be possible to perform this in one step with the lame encoder if this script is to be modified to generate waveforms on the fly for the same mp multiple times i recommend either storing a copy of the final wav file or modifying the script to keep a dataset of the amplitude points so that the waveform can be redrawn much more quickly please see the license file
1687958, apsplitviewcontroller  a custom splitviewcontroller  it always keeps both sides visible it s always launched in the portrait but it s rotated to any direction properly each side contains uinavigationcontroller so it s easy to make standard navigation by pushing and poping uiviewcontrollers several apsplitviewcontroller can be contained in the custom uitabbarcontroller aptabbarcontrollerforsplitcontroller aptabbarcontrollerforsplitcontroller  use it as base when you want apbasesplitviewcontroller to be contained in uitabbarcontroller it sends rotation events to content controllers apnavigationcontrollerforsplitcontroller  it s used as a container for content controllers in the apsplitviewcontroller it sends messages on pushing and poping subcontrollers split sample project  simple split demonstrates how to use the component when you need divide the screen into two equal funcional parts master detail split demonstrates more complex situation when you need two parts with master detail relationships it even has a connection from detail to master future releases  besides apsplitviewcontroller is used in  real project it s still in the initial stage
1328318, jquery mobile  is a port of  grid to jquery mobile to more flexible on tablets
305256, swinger is a couchapp for creating and showing presentations think keynote stored in couchdb run via javascript and sammy js this was created as a demo for my talk at jquery conf  about sammy js however its usefulness might outlast my talk we ll see a running couchdb server   all you need to do to get up and running after the requirements are installed is it should print out instructions of where you can view it you can also set up a couchapprc file that looks something like this env default  once that is set up you can just do couchapp push
1647701, planned features simple refactorings like renaming a step and having all other related steps in the project be renamed too related steps would be found using stepdef regexps features that would be nice but shouldn t go into this project achieving the goals listed above will require several changes to ace so far there are a few branches with different features on cucumber s ace fork there may be more and some may go away if the ace project accepts them rejected ace pull requests will likely move into this project so we don t have to depend on a forked ace long term this branch contains the changes on the other branches so that all our fixes can be used in this project npm link git submodule update init recursive node server js these are currently broken after a major rewrite of the autocomplete widget nodemodules and bin and jasmine node spec only edit files under lib not under build they are generated to regenerate after hacking cd vendor and ace git submodule update init recursive and makefile dryice js normal make a feature branch for everything you do gherkin editor users won t understand regexp anchors display a  or instead move autocomplete widget to ace autocomplete project once it matures may improve quality long term more contributors fix  for jquery ui png images ideally generate jquery ui css files from current theme figure out how require js works so we don t need to require so many files in our html separate displaying of autocompleted text from its content we may want to indent or use other visual style for step examples to separate them from step definitions
1339905, skip directly to usage usage  a complex example usage complex example  and learn how to extend with new features extending version    default renderer for non textual and non array values is children version    pre and post processing filters exception handling version    npm compatibility installable via npm install minimal version    fixed serious bug on minimal node that prevented multiple templates to coexist performance improvements version    initial version yes the current landscape for html templating is very rich however there are severe problems that create impedance on their usage including difficult or impossible to be extended no proprietary and alien dsl syntax html is the template json is the data there s no need to reinvent the wheel nor to complicate when there s no need to minimal syntax in both html and json counterparts extra fluff should be present only when it is strictly impossible to infer the bindings and this fluff must be minimal as well independent from javascript libraries but friendly to any of them dynamic afford reapplication of new data into an existing template e g  for ajax re binding of json data fast examples support caching no eval style directives extendable to new functionality simplest of the setups just add minimal js to your html document afterwards an object named m is available at the window scope and its alias window minimal as well this object provides two functions m render  to support rendering including iterations and modes functionalities note since it s the most common task to be done with this library m is also a function alias to m render m custom  to extend minimal js with new renderers discussed further below extending minimal js is now available via npm to install it and dependencies  execute the following command npm install jsdom minimal now minimal js is ready to be used by importing the minimal module as follows var minimal require minimal since we re outside a browser s context the actual html template has to be loaded for that the minimal node js library provides the template function to load a string based template which returns the m object var m minimal template html and html afterwards the m object is available to be used just like in the browser additionally the rendering of the html template can be accessed through the special function m html available at this object var html m html minimal js comes bundled with a predefined css selector basically a wrapper on element queryselector since several js libraries such as jquery provide their own custom css selector minimal js can be configured to use appropriate implementations to accomplish this override the m queryselector function with a function that takes a base and a selector parameters example implementations for some well known libraries follow m queryselector function base selector return selector base  m queryselector function base selector return dojo query base query selector  m queryselector function base selector return base select selector  m queryselector function base selector return sizzle selector base  by default minimal js does not fail in the case of encountering incorrect json bindings however it is possible to handle these exceptions with a custom exceptionhandler function m exceptionhandler function the function signature to render json data is m json json is a hashmap of key and value pairs each key must represent a valid reference to an html element in the following way if key is a valid id i e  analogous to document getelementbyid  it defines the scope of applicability of its value counterpart if it is a valid class i e  analogous to document getelementsbyclassname  it applies the value to the first matched element otherwise the key is interpreted as a css selector i e  analogous to document queryselector afterwards the value is applied to the corresponding html element note due to the way minimal js is implemented this function can only be executed after the dom tree is fully loaded e g  domcontentloaded event in opera and gecko based browsers consider the following html template snippet h and h and the following javascript h this is a title  p this is a paragraph  footer this is a footer will result in the following transformed html h this is a title and h h and p are interpreted as css selectors  whereas footer is interpreted as an id iterations extend the value counterpart of the core rendering functionality this is achieved by specifying a child html element as the template and an array instance as its json data consider the following html template snippet li and li and the following javascript ul foo  bar  baz will result in the following transformed html li foo and li li bar and li li baz and li minimal js provides several modes to modify template processing behaviour replace  append  and prepend these modes are detected through the data mode attribute if this attribute is not found the replace behaviour is assumed note minimal js supports all modes on both rendering and iteration core functionalities the replace mode is the default behaviour for template processing where templates always reflect the binding to the latest corresponding json data consider the following html template snippet li and li and the following javascript ul foo  bar ul baz will result in the following transformed html li baz and li the append mode allows for the attachment of new json data to the end of a given html template consider the following html template snippet ul data mode append li and li and the following javascript ul foo  bar ul baz will result in the following transformed html li foo and li li bar and li li baz and li the prepend mode allows for the attachment of new json data to the beginning of a given html template consider the following html template snippet ul data mode prepend li and li and the following javascript ul foo  bar ul baz will result in the following transformed html li baz and li li foo and li li bar and li minimal js comes with three custom renderers in addition to its core functionality attr  children  and nano these are provided to cover more complex real template scenarios custom renderers are identified by the data render attribute on html elements the attr renderer provides binding facilities to element attributes example consider the following html template snippet and the following javascript will result in the following transformed html note this renderer applies the content directive to the html element s content the children renderer provides delegation of json data to a given html element s child elements the json data can be either an array as exemplified below  an object where keys can be id  class  or css selector based  or atomic values consider the following html template snippet h and h and the following javascript div header  content will result in the following transformed html h header and h as of version    minimal js defaults json data rendering to the children renderer for object types thus the previous example is equivalent to the following html template snippet h and h consider the following html template snippet and the following javascript placeholder this is some text  stuff some more text follows will result in the following transformed html for reference purposes please find below a more complex example usage of the minimal js template engine simulating a blog posts page consider the following html template snippet h id page title and h ul id posts h class date and h and the following javascript page title a minimal js blog  posts title link href and posts and   content second post  date today  content second post content title link href and posts and   content first post  date yesterday  content first post content will result in the following transformed html h id page title a minimal js blog and h ul id posts li data render children h class date today and h li data render children h class date yesterday and h if the supplied functionality is limiting what you want to do with html templates and and or json data binding you can extend minimal js with your own renderers or tailor existing ones to minimal js s personality the m custom hashmap provides this functionality as follows m custom name function json element where name is a string to be matched at data render attributes which maps to a function that provides the custom templating functionality with the following parameters json corresponds to json data to be bound and element is a dom element contextualising the custom renderer note authors may delegate dom elements to other renderers by invoking the m json element function where appropriate yes m can take an additional element as the rendering context please tell this to nobody also authors are advised to check for the presence of the data attributes such as data mode  and have their renderers act accordingly an auxiliary function is provided for this feature with the following signature m dataset element namespace example to get the mode of a given element var mode m dataset document getelementbyid some element  mode consider the following html template snippet and the following javascript m custom foobar function json element element innerhtml json and foobar m p this is will result in the following transformed html minimal js also supports element processing and filtering capabilities for json data processing and filtering can occur before and after rendering of each data item there are two types of filters available under m filters pre and post  as follows m filters pre name function json element m filters post name function json element by default processors and filters are applied to every element if you want to actively filter an element and stop rendering to a given json data item s children add a return false instruction to your filter note if the filter returns false the element is removed from the document consider the following html template snippet ul id foo li and li and the following javascript m filters pre nothrees function json element return json  m foo    will result in the following transformed html ul id foo li  and li li  and li in no particular order template composition includes  partials  etc extendable modes conditionals probably as extendable modes sorting probably as extendable modes the mit license copyright   rui lopes permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the  software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided  as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1658698, macshairport is a native re implementation of shairport for mac that means any mac user could download a build and run it on their computer without having to worry about perl modules and dependencies win yes mostly it seems to be pretty temperamental underruns depending on your network configuration but it does work i m hoping to improve that soon the biggest problem right now is that hairtunes underruns a lot depending on your network configuration it d be awesome if we could improve that new bsd license see license txt basically do whatever you want with it but don t blame me for anything that goes wrong and don t remove my license
1891065, very brief sample of how to use echoprint in an ios app this will choose a file from your library compute the code with echoprint and send it to the echo nest api for matching you will need to have compiled libechoprint codegen ios a which you can compile using the xcode project in echoprint codegen
656432, same theory of operation as node js single threaded eventing front end non blocking io back end api compatibility with node js written entirely in javascript jscript net runs on the net runtime enough of the http module to implement a basic server that handles post data and sends back response enough of the net module to implement a tcp server that echoes requests to stdout enough of the stream api to support the above require sys puts http requests are cached by net even though the stream is read async this was a limitation of using httplistener in net the tcp server is fully streaming however writes are implemented as blocking calls currently i didn t have time to implement write queues to enforce write ordering on windows if you have the net   framework installed likely if you are on a windows box  just run the build script if you d rather build against a different framework version you can alter the path to jsc exe c node exe server js on linux under mono c mono node exe server js in order to run under mono you ll need microsoft s version of microsoft jscript dll which is included in the net framework i can t provide it here since it is not redistributable individually running an http server that prints post data to the console and replies with an all finished message when the request completes var sys require sys  http require http http createserver function request response request addlistener data  function data sys puts data request addlistener end  function response end listen  localhost to test it out try something like this running a tcp server that listens on port  and writes data sent to the console var sys require sys  net require net net createserver function stream stream addlistener data  function data sys puts data listen  localhost to test out the tcp server try sending it some data using telnet c telnet localhost  the net framework can be accessed from within the javascript that runs under node net for example the tcp server shown above could have used console writeline in order to write its output to the console var net require net net createserver function stream stream addlistener data  function data system console writeline data listen  localhost on windows c build bat mono s mjs compiler doesn t compile node net implement non blocking writes http implementation should be rewritten to use the net module to allow streaming implement more of the node js api filesystem process etc node js is provided under the mit free software license see the file license for the full text copyright  dan newcome
761933, visualization of an irc channel in a wargame theme change the port on line  in server js alter the options at the bottom of server js to decide what channel and network to join if you want persistant storage a cache path in the app settings
394786, node mongodb an asynchronous node interface to mongodb var sys require sys var mongodb require and lib and mongodb var mongo new mongodb mongodb mongo addlistener close  function sys puts closing connection mongo addlistener connection  function var widgets mongo getcollection widgets mongo getcollections function collections sys puts the collections in the db are and json stringify collections and and remove widgets with shazbot  widgets remove shazbot gt  and and actually just remove all widgets widgets remove widgets count null function count widgets insert foo  shazbot  widgets insert bar a  shazbot  widgets insert baz   shazbot  and and count all the widgets widgets count null function count sys puts there are and count and widgets and and count widgets with shazbot  widgets count shazbot gt   function count sys puts count and widget shazbots are  and and count shazbots less than or equal to  widgets count shazbot lte   function count sys puts  count and and return all widgets widgets find null null function results and and and and return widgets with shazbot  widgets find shazbot gt   null function results and and and and return only the shazbot field of every widget widgets find  shazbot true  function results and and update shazbot of first document with shazbot  to  widgets update shazbot   shazbot  widgets find null null function results results foreach function r and and and and close the connection mongo close mongo connect hostname      port  db mylittledb description  this is an attempt at mongodb bindings for node the important thing here is to ensure that we never let ourselves or any libraries block on io as such i ve tried to do my best to make sure that connect and recv never block but there may be bugs the mongodb c drivers are used to interface with the database but some core functions needed to be rewritten to operate in a non blocking manner installation  make sure you have git installed and update mongo c driver sh node waf configure build and run tests sh this package is experimental with emphasis on mental i am working on this in my spare time to learn the node v and mongodb api s the error handling in this extension needs to be improved substantially be i would appreciate any and all patches suggestions and constructive criticisms acknowledgements  ryah s node postgres driver was the foundation for this extension mongodb c drivers the people in node js and mongodb on freenode for answering my questions orlando vazquez ovazquez gmail com
581333, this repo is unmaintained  stalker a job queueing dsl for beanstalk  queueing jobs  from anywhere in your app require stalker stalker enqueue email send  to joe example com stalker enqueue post cleanup all stalker enqueue post cleanup  id post id working jobs  in a standalone file typically jobs rb or worker rb require stalker include stalker job email send do and args and pony send to args to  subject hello there job post cleanup all do and args and post all each do and post and enqueue post cleanup  id post all end job post cleanup do and args and post find args id cleanup first make sure you have beanstalkd installed and running sudo port install beanstalkd beanstalkd sudo gem install stalker now run a worker using the stalk binary stalk jobs rb working  jobs email send post cleanup all post cleanup working send email email hello example com finished send email in ms stalker will log to stdout as it starts working each job and then again when the job finishes including the ellapsed time in milliseconds filter to a list of jobs you wish to run with an argument stalk jobs rb post cleanup allpost cleanup working  jobs post cleanup all post cleanup in a production environment you may run one or more high priority workers limited to short and urgent jobs and any number of regular workers working all jobs for example two workers working just the email send job and four running all jobs for i in   do stalk jobs rb email send log and urgent worker log   end for i in     do stalk jobs rb log and worker log   end error handling  if you include an error block in your jobs definition that block will be invoked when a worker encounters an error you might use this to report errors to an external monitoring service error do and e job args and exceptional handle e before filter  if you wish to run a block of code prior to any job before do and job and puts about to work job jobs are serialized as json so you should stick to strings integers arrays and hashes as arguments to jobs e g don t pass full ruby objects use something like an activerecord and mongomapper and couchrest id instead because there are no class definitions associated with jobs you can queue jobs from anywhere without needing to include your full app s environment if you need to change the location of your beanstalk from the default localhost   set beanstalkurl in your environment e g export beanstalkurl beanstalk and and example com  and the stalk binary is just for convenience you can also run a worker with a straight ruby command ruby r jobs e stalker work running the tests  if you wish to hack on stalker install these extra gems gem install contest mocha make sure you have a beanstalkd running then run the tests ruby test and stalkertest rb created by adam wiggins patches from jamie cobbett scott water keith rarick mark mcgranaghan sean walberg adam pohorecki
815252, wsbench is a scriptable benchmarking tool for web socket servers other external dependencies see benchmarking web socket servers with more background on the motivation and intended usage of this tool at its simplest wsbench can be invoked with a web socket url pointing to the server for example this opens and closes  connections in serial to the server running on localhost port  no messages are sent down the connections wsbench ws and and localhost  a parallel rate driven model is available using the r option for example the following opens and closes  connections per second and runs indefinitely this uses c nnn to specify termination after nnn connections with  indicating no limit wsbench r  ws and and localhost  we can also send messages over each connection using the m nnn option to indicate how many messages to send the s nnn option can be used to set the size of each message in bytes when operating in this mode the websocket connection is guaranteed to remain open until all messages have been transmitted the wsbench tool supports execution of arbitrary javascript code to drive the interaction over open connections e g to send and receive messages using the s file option this allows testing of rich application specific behavior as a trivial example the following file will send a hello message for the first  connections and world for each connection after and then close the connection note that the session function is invoked once for each web socket opened so we keep our counter in the module scope var cnt  module exports function ws ws onopen function ws send and and cnt  hello world ws close  a more involved example is available in the examples and echo and finally the session logic can use any nodejs module installed in the system significantly this provides access to the built in http stack constructing heterogeneous workloads consisting of a mix of web socket and http requests is trivial the complete usage is usage wsbench options url kick off a benchmarking run against the given ws and and url we can execute our workload in one of two ways serially wherein each connection is closed before the next is initiated or in parallel wherein a desired rate is specified and connections initiated to meet this rate independent of the state of other connections serial execution is the default and parallel execution can be specified using the r rate option parallel execution is bounded by the total number of connections to be made specified by the c option available options c num conns number number of connections to open default  h help display this help m num msgs number number of messages per connection dfeault  p protocol proto set the web socket protocol to use default empty r rate number number of connections per second default  s msg size number size of messages to send in bytes default  s session file file to use for session logic default none
2207972, flyjsonp is a small javascript library that allows you to do cross domain get and post requests with remote services that support jsonp  and get a json response have a look at the demo to see it in action or check out get started guide for usage instructions and examples control over the callback parameter name for get requests no other dependency on other javascript frameworks to get started first download flyjsonp and add it to your code then simply call init method to setup the initial options script flyjsonp init debug true and script to issue a cross domain get request you call the get method it accepts number of options and calls success callback when provided with json response flyjsonp get success function data console log data error function errormsg console log errormsg to issue a cross domain post request you call the post method it accepts number of options and calls success callback when provided with json response to get around cross domain issues for post requests flyjsonp uses yql to send the request and retrieve the response flyjsonp post parameters username your username  apikey secret api key  title flyjsonp  description testing it out success function data console log data i would like to thank the following people and give them credit for their awesome work johannes charman for creating yql data table jsonpost christian heilmann for creating yql data table htmlpost
2087165, cubetabbarcontroller  the normal switching between view controllers on uitabbarcontrollers is boring no animation whatsoever so i decided to add a cube animation it uses coreanimation to be able to rotate around the y axis the one pointing out of the top of the phone i had to use catransformlayer to preserve the  angle while keeping the edges of the views touching i actually started with using ios  s container api and got it working with that but then tried to see whether i could get it to work with a subclass of uitabbarcontroller note this project is built with arc if you need to use it with mrr you ll have to add all the proper methods
564631, astaire allows the use of the basic sinatra get and post and put and delete dsl inside of rails controllers this allows defining quick actions without having to update config and routes rb for example class contactcontroller actioncontroller base get and contact do render contactform end post and contact do handle form input redirectto homepagepath end add the following to your application s gemfile gem astaire then run bundle install and you are good to go currently astaire provides  class level methods available in the controller get  post  put  and delete with these methods you can define actions and routes all at once class mycontroller actioncontroller base get the contact form get and contact do render contactform end the paths can also have named parameters and optional segments  and say and hello i say hello and say and hello and world i say hello world  get and say and one and two do words params one  params two compact join render text i say words end it is possible to name actions such that regular url helpers can generate them class mycontroller actioncontroller base will output and hello def index render text hellopath end get and hello  as hello do render text hello end astaire supports inline templates in the same style as sinatra for example class mycontroller actioncontroller base get and hello do render greetings end end greetings html erb greetings to you i guess at this point i m just putting what i have into the wild next steps will be determined by feedback that i get
2428797, what mac os x boilerplate is  os x boilerplate provides you a project template for a non document based application it is based on the well know ios boilerplate project you can download os x boilerplate at github com if you have questions feedback or anything else simply contact me christian kienle de
1413148, the goal of restmvc is to provide a simple framework that helps you to write a restful webservice using nodejs express mongoose and mongodb it s goal is to take out the repetitive crap everyone hates doing while staying out of your ways as much as possible and letting you do things how you want to this project is just begining it arose from my attempts to create a restful service and discovering that it wasn t as easy as i would have liked lately it seems this is evolving into nodejs on rails not that i think i could possibly take on that daunting task i d really appreciate any contributions bug reports advice or suggestions for improvement this is the first release but so far given a mongoose model object it will tool to build project skelleton for you tool to build empty models for you auto generate controllers auto generate routes handle badrequest  notfound and  errors in a nice clean way inflection library to translate person into people accept header based response rendering list will now take from  to  for paging planned in the near future security more complex list actions on the controller filters more error types npm install restmvc js so far this is dependant on nodejs    mongoose    mongodb    express    nodeunit    node jake ejs    i ve created an example project in the example folder if you download the complete restmvc js project and from the command line navigate into the example folder you can run a set of integration tests by typing jake test you can also start up the the rest service by typing jake debug a tool is provided to auto generate a project structure for you you can use it by executing the following restmvc app hello it will generate a project structure for you like this and controllers and controllers and entityname js and models and models and entityname js and routes and routes and entityname js app js models are just standard mongoose models you can create a new model by creating a javascript file inside of the models folder you need to name the file and the export the same your object will get a mongoose object passed to it you use that to create your model you can create an empty model by typing the following from the root of the project restmvc model entityname here s an example of how you d define one exports person function mongoose var schema mongoose schema mongoose model person  new schema firstname string lastname string initial string dateofbirth date  return mongoose model person you don t have to do anything to create a basic controller one that provides show index insert update and destory is reflectively created for you at runtime however if you wanted to extend or change the base controller you d create a file inside of the controllers folder and name it the same as your model file the file should export an object named entityname controller for example personcontroller here s an example of how you d define one module exports personcontroller function basecontroller restmvc return basecontroller from this basic framework a controller is dynamically built for each model object that implements show id index  index start limit  insert json update id json remove id you can extend the base functionality by defining your controller something like this module exports personcontroller function basecontroller restmvc and and example of how to extend the base controller if you need to var personcontroller basecontroller extend tostring function and and calls parent tostring method without arguments return this super extendedcontroller tostring and this name   return personcontroller the default routes that get added to your express app are get and entitypluralname and renders index view of all entities in the colleciton get and entitypluralname start  limit  renders index view of all entities in specified range get and entitypluralname and new renders new view to create a new entity get and entitypluralname json start  limit  sends a json list of all entities in specified range get and entitypluralname json sends a json list of all entities in the colleciton get and entitypluralname and id renders show view of a specified entity get and entitypluralname and id json sends json representation of a specified entity get and entitypluralname and id json and action renders a view by the name of the action for the specified entity put and entitypluralname and formdata inserts a new record using formdata passed in put and entitypluralname and json inserts a new record using the json passed in post and entitypluralname and id formdata updates a record using the formdata passed in post and entitypluralname and id json updates a record using the json passed in delete and entitypluralname and id deletes the specified record you don t need to define a route at all as they are setup for you but if you want to extend the defaults by defining routes for your entity type it would look something like the following module exports employeeroutes function employeecontroller app restmvc and and example route implemtation app get and employees and id  function request response next employeecontroller get request params id function err instance if err next new error internal server error see logs for details and err  request response else if instance next restmvc resterror notfound create employee id and request params id and was not found  request response else response send instance toobject   in your app js file after connecting to mongoose and defining your express app you should initialize everything like so var express require express var restmvc require restmvc js var mongoose require mongoose var app module exports express createserver mongoose connect mongodb and and localhost and restmvc a bunch of standard app configuration junk restmvc initialize app mongoose app error restmvc errorhandler if module parent app listen  you can then start your sever using app listen so far only two errors are handled  and  if you want to extend this it is very easy to do just do something like this in your app js file and and add a custom rest error for forbidden restmvc resterror forbidden restmvc resterror baseresterror extend name forbidden  title forbidden  description access denied  httpstatus  you can just let the default error template generate the html response or you can define a customer one like so and and add a custom handler for forbidden restmvc errormapper forbidden function error request response response render resterror jade  status error httpstatus error error  restmvc make all the models controllers and resterrors junk available to you via the following restmvc models all your models are available here by name such as var personmodel restmvc models person restmvc controllers all your controllers are available here by name such as var personcontroller restmvc controllers person restmvc resterror the resterror infrastructure is available to you here for customization restmvc baseresterror use this to extend the default error handling and create new types of resterrors based of standard http status codes of course restmvc errormapper this defines what the error handler does when it gets passed a particular error restmvc errorhandler this is used by the express app to handle the errors actually you have to wire this up by doing app error restmvc errorhandler restmvc initialize app mongoose this is what kicks off everything called by you in your app js file restmvc basecontroller this is the base controller that all others are created from exposed for testing purposes restmvc registerroutes app controller registers the default routes for the default controller exposed for testing purposes the mit license copyright c  keith larsen permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
190349, h installation and h h usage and h cache memcache new use apithrottling requestsperhour  cache cache auth false key proc new and envauth and env pathinfo  time now strftime y m d h h introduction to rack and h h basic rack application and h use rack showexceptions use rack lint run lambda and env and  content type text and plain  content length   hello world http and    ok content type text and plain content length  connection keep alive server thin    codename that s what she said hello world h redis and h h our rack middleware and h li for every request received increment a key in our database the key string will consists of the authenticated username followed by a timestamp for the current hour for example for a user called joe the key would be em strong joe    and em and strong and li li if the value of that key is less than our maximum requests per hour limit  then return an http response with a status code of  indicating that the user has gone over his rate limit and li li if the value of the key is less than the maximum requests per hour limit then allow the user s request to go through and li r redis new key auth username  time now strftime y m d h r incr key return overratelimit if r key toi options requestsperhour require rubygems require rack require redis class apithrottling def initialize app options app app options requestsperhour  merge options def call env options auth rack auth basic request new env if auth provided return badrequest unless auth basic begin r redis new key auth username  time now strftime y m d h r incr key return overratelimit if r key toi options requestsperhour rescue errno econnrefused if redis server is not running instead of throwing an error we simply do not throttle the api it s better if your service is up and running but not throttling api then to have it throw errors for all users make sure you monitor your redis server so that it s never down monit is a great tool for that app call env def badrequest bodytext bad request  content type text and plain  content length bodytext size tos  bodytext def overratelimit bodytext over rate limit  content type text and plain  content length bodytext size tos  bodytext require apithrottling use rack lint use rack showexceptions use apithrottling requestsperhour  run lambda and env and  content type text and plain  content length   hello world http and    ok content type text and plain content length  connection keep alive server thin    codename that s what she said hello world http and    ok content type text and plain content length  connection keep alive server thin    codename that s what she said hello world http and    ok content type text and plain content length  connection keep alive server thin    codename that s what she said hello world http and    service unavailable content type text and plain content length  connection keep alive server thin    codename that s what she said over rate limit
663860, railsconf  tutorial  this repo contains a workbook and source code for the  hour mobile app development with iphone and ipad and to start working through the workbook open the tt workbook and html and all html and tt file in your favorite browser each section starts with an objective and includes steps to guide you to the solution source code  the tt code and tt directory contains incremental versions of the iphone app that correlate roughly to each section of the workbook check the tt readme and tt in each directory for more the final iphone and rails apps are in the tt iphoneapp and tt and tt railsapp and tt directories respectively install rails  beta  you ll need the rails  beta installed to run the sample rails app gem install rails pre install the iphone sdk  you ll need the iphone sdk to run the sample iphone app  make sure you ve upgraded your intel based mac laptop to run snow leopard version     the latest mac os x release  xcode    is included in the full download of the iphone sdk iphone sdk   verify that you re running xcode version    by launching xcode and using the em xcode about xcode and em menu item you ll find xcode under the tt and developer and applications and tt directory if you want to run your apps on your iphone or ipod touch device you ll need to join apple s iphone developer program the program costs  and year for individuals new to iphone programming  the workbook assumes you have a basic working knowledge of objective c and a general understanding of iphone table view programming here are some recommended resources to help you get started
834710, gwt mobile  gwt mobile is a cross platform mobile development tool using google web toolkit technology it provides a set of ui widgets optimized for mobile devices a orm module to persist objects to the browser database and a wrapper to access phonegap functions from gwt gwt mobile ui  gwt mobile persistence  gwt mobile phonegap  apps that use gwt mobile  gwt mobile phonegap a phonegap showcase app demonstrate all phonegap functions gwt mobile google group 
1067793, c  mug   easy javascript for your jvm  mug is a simple static javascript compiler for the jvm written in coffeescript and self hosted mug targets java  and focuses on simplicity and file size git clone git and and github com and timcameronryan and mug git mug cd mug and mug compiler and test export classpath and mug runtime    jar with dependencies jar and asm   jar and lib and mug compiler jar java js mug compiler hello world js java cp classpath out js helloworld hello world version    and  and  aaaand we re back mug compiler rewritten in coffeescript and now self hosting speed and api improvements better ecmascript support the old clojure version has been tagged and locked away started mug nodelib project to emulate the node api version    and  and  initial release the compiler  compile modules with mug compiler jar and asm   jar java cp lib and mug compiler jar asm   jar js mug compiler module js path and to and module js path and to and module js options in your output directory your class files or a jar archive are written out mug takes the basename of each file and compiles it into the js package for example the file module js  becomes the class js module you can specify namespace parameters with the n parameter i e module js with namespace storefront becomes js storefront module the n parameter can be used multiple times and applies to all subsequent files specified the runtime  mug includes a small runtime kb to bootstrap compiled modules mug modules can be run directly or included from other scripts include the mug runtime jar to run your module java cp mug compiler jar my module jar js mymodule mug has built in support for commonjs style require all modules loaded are either relative to the current package js storefront module calls require and models  loading js storefront models  or loaded from mug s global package ie java  mug nodelib etc see libraries below you can use mug s java module to interact with java classes directly from javascript var java require java var swing java import javax swing and and get a package object var frame new swing jframe window frame add new swing jbutton click me frame setsize new java lang integer    and and java lang and io and util needs no import frame setvisible true you can also run a compiled module programmatically in java it returns the exports object import js mymodule import mug runtime jsobject fs js mymodule load and and returns the exports object string id jsutils asstring fs get id and and jsutils has functions to coerce types jsfunction fs get open invoke null somefile txt and and use invoke thsobj args to call functions for authoring mug modules in java please see the wiki where s my standard library commonjs support  libraries between java implementations differ drastically as such mug by default only includes the java module leaving the choice of standard library up to the user if you re interested in node js api compatibility see my other hosted github project mug nodelib if you re interested in commonjs support feel free to start a project i ll work with you to get your code up and running mug why how  compared to rhino favors static compilation and small runtime vs large interpreter minimal overhead runtime library mug compile jar is kb consistent easily debuggable compiled output it s a neat party trick the mug compiler is written in coffeescript and self hosted and is easily extensible the mug runtime is written in java and developed in eclipse note mug is still alpha quality software and bug reports are a good thing support for ecmascript features is generally added incrementally mug is stable enough to run one major application the mug compiler itself  but there is no assurance it will run everything file a bug and support will be added asap mug is copyright   tim cameron ryan released under the mit and bsd license compiler libraries parse js cl library ported to javascript in  by mihai bazon released under the bsd license see uglifyjs on github asm bytecode manipulation framework copyright c ow consoritum released under the bsd license runtime libraries json simple json parsing library copyright c fangyidong released under apache   license jakarta oro java text processing classes c the apache software foundation released under the apache   license
1100540, cssess is a js tool that helps find extra css rules on your site it is designed to be used as a bookmarklet the name cssess comes from the word secess and is pronounced the same way secess means withdraw or retreat helium depends on queryselectorall restricting use to the latest browsers cssess uses jquery as a selector engine helium requires that you add urls to check manually cssess will spider all same domain links on the current page helium was designed to be included within the page cssess is designed to be used as a bookmarklet to install as a bookmarklet use the following in a bookmark url to use the un minified version replace cssess min js with cssess js how it works  each url is loaded into a hidden iframe once the iframe has finished loading all of the stylesheets and inline styles are checked against the dom to find unused styles cssess will not work cross domain due to browser security restrictions contributions are welcome feel free to fork on github and submit a pull request
1805835, download waldo zip and put the app in your applications folder launch waldo app to install the vim plugin open macvim app and trigger waldo using the leader f mapping note leader is a programmable prefix for commands by default it s backslash  though you can change it in your vimrc file note if you do not have your vim and folder in your home directory you must manually place waldo vim found inside the app package in your vim and plugins directory note make sure you cd into directory you want to search fix crashes introduced in   rename literal match to regex rename case sensitive to ignore case code refactoring opening waldo without specifying a project path in the command line will present an open dialog launch as menu item only rename project to waldo previously known as vimack auto install vim plugin on first launch thanks zef add support for case sensitive searches thanks zef add support for regex searches thanks zef launch waldo as a menu item thanks ashchan perform ack subprocess on a separate thread support for sparkle framework to ship updates automatically prevent multiple instances of waldo to open when you trigger leader f add history to search field add ignore directories feature keyboard navigation i highly encourage you to fork my project and implement any of the features in the roadmap just submit a pull request and be sure to give yourself credit here copyright c  by majd taby permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1115308, facebook exporter contact exporter  your friends on facebook made their information public to you such as their email phonenumber and websites they want you to know about them but there is no way to extract such data and place it in your most used contact book so you can keep in touch with them fb exporter extension will allow you to get their contact information so you can contact them with your favorite email client you can extract their information and transfer it to your client your not stealing their information your friends are making it public for you to use them they want you to contact them thats what friends do eh functionality  i am reading your facebook friends all at once in a variable that variable allows us to instantly see the users photo in a nice collage and export everyone at the same time without any manual process or you can pick and choose anyone not only exports your friends emails it exports your contacts phone numbers emails end im screen names such as google talk yahoo icq skype qq and msn windows live messenger hotmail  and your friends birthday there are error handling routines as well if facebook doesn t like what your doing it will stop instantaneously you can start it back again next day or in a couple of hours just open up the log and you can see errors when it happens the results are cached so if you want to continue the process some other time then no worries it will continue from the last processed contact i have refactored some portions of the code and added comments where applicable i have added a better ui for example a facbook style dialog instead of the custom one made before i have changed the way the process works too how to download  it is currently not available in the chrome web store i am decided to stop development to focus on better and more exciting things  they are converting emails into images so you cannot copy it somewhere say what  of the people copy the email into their email client i added mechanism that catches that instantly so you don t have to worry if they see something the process will stop and you can start it again the next day when you start it again it will pick up where it left off have fun feel free to submit patches and fork
1516322, this is the source code behind notepag es   a page site designed to allow quick technical documents to be written online without access to a latex distribution or editor such as lyx the main formatting of the documents is done in markdown and maths can be embedded using latex format this repository contains the development version which is available at dev notepag es dev and runs on the same database the development version is deployed to live when it has been shown sufficiently stable the notepages server is built upon node js  and mongodb   and uses the express  and mongoose  libraries both libraries are available through npm bundled libraries are quickdiff  created for notepages  and mdext  a showdown fork npm install express mongoose jade sass underscore redis to clone the repo and all its submodules the database configuration is trivial and at the top of the server js file running node server js will start the server listening on port  or  depending on what i pushed last notepages serves the mathjax google font api and jquery through their respective cdns reading and editing has been tested across all modern browsers ie safari  chrome firefox   and  ie is not supported ie and  should be able to read though will not have code highlighting and the edit experience will be haphazard chrome frame is set to be enabled for users of ie or lower but does not currently prompt for install a mobile version is served to detected browsers using jquery mobile alpha  it has been tested on ipad and iphone browsers reading experience is good on the ipad somewhat constrained on the iphone due to width editing is buggy due to alpha status of jquery mobile  but functional a print stylesheet is served which formats the document in a print friendly manner exporting of pages is not self supported but print to pdf functionality of most browsers works as expected notepag es supports markdown but does not allow arbitrary html html markup can still be used but only insofar as elements that can naturally be created with markdown syntax some extensions to markdown syntax have been provided at this time tables and figures tables are a port of the php markdown extra syntax mdextra figures allow an optional or after the when defining an image indicates a left floated figure and indicates right floated the caption used will be the title of the image which can be defined in two ways standard markdown left alt lefturl
803581, make elements stick to browser window as you scroll stickyscroll performs very badly in the current versions of chrome and firefox at the time of this writing and i m not sure i m capable of fixing it without stripping it down to next to nothing so development is not very active right now if you d like to see an example of the problem stripped down to its most basic case see the demo basic html file look at the source in that file and see if you have any ideas to make it work again it looks to me like the window onscroll function just doesn t fire enough to make this a viable option selector stickyscroll container container element this is auto mode the sticky element will never cross the boundaries of the specified container selector stickyscroll this is also auto mode but the container will be the body tag selector stickyscroll topboundary px  bottomboundary px this is manual mode the boundaries are relative to the top and bottom of the document and the sticky element will never cross those boundaries so in the example given the top of the sticky element s will never be above  pixels from the top of the document and the bottom of the sticky element s will never be below  pixels from the bottom of the document selector stickyscroll reset use this command to rid an element of any stickiness del disclaimer requires position fixed support so no ie and del no longer uses fixed positioning only mimics it much better support now for mobile and tablet possible enhancements to come del fluid and elastic layout support and del now supports fluid layouts best in auto mode support for callbacks when a boundary is reached
628418,  matchure is pattern matching for clojure sequence destructuring map destructuring equality checks regexp matches variable binding instance checking arbitrary boolean expressions boolean operators and or not if when cond fn and defn variants matchure is pretty fast too all patterns matches are compiled to nested if statements at compile time basic values check for equality if match nil nil true true if match   true true if match asdf asdf true true let s asdf if match asdf s true true  and are both wildcards and will match anything  is idiomatic for clojure has special meaning in matchure can be thought of as the thing being matched against and so by itself always succeeds it is also used to store the matched value in a variable and is substituted into function calls for arbitrary tests examples below regular expression literals check for a match if match hello hello world true true fully qualified class and interface names check instance if match java lang string foo true true if match java lang comparable foo true true the form var is a pattern which always succeeds and has the side effect of binding the matched against value to the variable var if match foo bar foo bar literal vectors destructure and match sequences if match fst rst    fst rst    if match message value message foo value foo if match java lang string java lang string list hello world true true if match a b rest     list a b rest     can also destructure maps if match key value rest sorted map   key value rest   if match key value rest sorted map     key value rest     failing matches if match fst rst fst rst failed match failed match if match key value rest sorted map key value rest nil map literals look up corresponding values by key and check the value of the given map against the pattern value of the pattern map if match foo java lang string foo bar true true if match foo java lang string sorted map foo bar true keys that aren t pattern matched are ignored if match foo java lang string foo bar  baz qux true true assoc lists aren t currently supported if match foo java lang string foo bar true nil lists are evaluated as clojure expressions with being substituted for the matched against value for example to check for an odd integer you would use if match odd  true true not all lists are left as is matchure has an extensible set of special forms right now the special forms just include quote and boolean operators and  or  and not one common use of and is to test a value and bind it to a variable if the test succeeds if match and foo hello hello world foo hello world if match and foo hello goodbye world foo nil or and not also supported to assert the matched value is a string either doesn t match hello or matches both hello and world if match or not hello world hello world true true if match or not hello world whatever true true if match or not hello world hello everyone true nil quote allows you to escape what would otherwise be a pattern so it s tested for equality instead for example the pattern foo tests for equality to the symbol foo you can also use when match when match fst rst list   prn asdf prn ghjkl cond match allows you to either test one value against multiple patterns cond match hello world foo matches foo hello matches hello doesn t match either matches hello or match multiple values against multiple patterns let s hello world cond match foo s matches foo hello s matches hello s doesn t match either matches hello fn match and defn match work like the corresponding builtins but match their patterns they support both the fn args body and fn arglist body variants an illegalargumentexception is raised if either the number of arguments does not fit any provided pattern or the particular specified arguments do not fit any pattern fn match defines anonymous functions that pattern match on arguments fn match this     n and this dec n this dec dec n defn match works similarly defn match fib     n and fib dec n fib dec dec n fn match and defn match are intended to work as though the provided arguments are matched against each provided pattern in order for example consider the function defn match example fn   wildcard no args  one a b a b fn match first tests its arguments against    which will match any sequence having at least one element it then tests its arguments against which matches an empty sequence finally  and a b are tested because   will match any non empty set of arguments example fn only has two return values in practice no args is returned when example fn is called with no arguments and wildcard is returned for any other set of arguments this is true even for example fn  because   is tested first performance characteristics  an efforts been made to have patterns compile down into efficient code one goal was to be able to use patterns in almost any context without having to worry about overhead in general every set of patterns compiles down into a tree of if and let statements pattern matches short circuit and redundant checks are avoided for example when a b c is compiled you end up with a code tree that checks the value matched against is seqable then that the first element is equal to a  then the second is equal to b  etc if any of these checks fails the match short circuits and the failure branch is taken because of this the success and failure branches passed to if let which all the other macros compile down to can be repeated a large number of times if they contain other macro calls the whole thing can generate into a large amount of code for this reason if either the true or the false branch is going to be repeated more than once and that branch is not atomic it is wrapped in an anonymous function which is called any place that case can occur this compramise can make simple cases a tiny bit slower but hopefully avoids more drastic consequences for complex use cases and increases the chance the resulting function is below the jvm s inline limit fn match and defn match define multi arity functions behind the scenes and only test patterns that compatible with the provided number of arguments furthermore varargs are only used if varargs patterns are provided and then only for argument counts that don t match any non variadic patterns in practice this means matching functions that use simple patterns are about as fast as the function you probably would have written yourself as an example here s the fn example fn ends up expanding clojure core and fn matchure and cond match do no args throw java lang illegalargumentexception failed to match arguments arg matchure and cond match  arg  list do wildcard  arg do one  arg throw java lang illegalargumentexception failed to match arguments arg arg matchure and cond match  arg  list arg do wildcard a arg b arg do a b  arg  arg throw java lang illegalargumentexception failed to match arguments arg arg rest matchure and cond match clojure core and list arg arg rest   do wildcard  throw java lang illegalargumentexception failed to match arguments notice that that   is not tested when no arguments are passed in and is not tested when any arguments are passed in because these patterns arities don t match those cases also note that variadic patterns introduce a small amount of overhead to test to combine the extra arguments into a sequence  so putting variadic patterns toward the end of a function definition can reduce overhead add public extension mechanism copyright c  drew colthorp permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1313405, like websocket but no server setup and available in any browser easywebsocket aims to make realtimes webapps in every browser without the trouble to setup websocket servers include the following in your webpage and it just works script var socket new easywebsocket ws and and example com and resource socket onopen function socket send hello world  socket onmessage function event alert received and event data  and script step  you connect the socket to a given url step  what you send thru this socket is sent to all sockets connected the same url setup no cross origin issue to care about it is that easy
1470055, after leaning about ibm s watson  and reading mind vs machine  i wanted to better understand the state of natural language processing artificial intelligence and natural language generation this project is not a port of any existing libraries although it does contain some code ported from pythons nltk it serves more of a glue layer between existing tools ideas and projects already used today download fork or clone the code setup the  dependancies below spacetokenizer tabtokenizer regexptokenizer wordtokenizer wordpuncttokenizer new treebank tokenizer new hunpostagger download and run the java server java mxm cp stanford ner jar edu stanford nlp ie nerserver loadclassifier classifiers and ner eng ie crf  conll distsim ser gz port  break a sentence down into different parts subject predicate etc using the porter stemming algorithm bigrams trigrams util bigram the  fox  ran  fast and and the  fox  fox  ran  ran  fast util trigram the  fox  ran  fast and and the  fox  ran  fox  ran  fast wordnet bindings have been started you must download the wordnet database before you can play with it copyright c  rob ellis permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
315241, the api is very similar to the rake api though with javascript syntax jake task name dependencies  action declares a task called name  with an optional array of dependent tasks and optional function to perform jake file path dependencies  action like task  but only runs the action if the target file name doesn t exist or was last modified before at least on dependency jake directory directorypath jake filedir path dependencies  action todo better api docs example jakefile  var jake require jake and and prints default jake task default  function t print t name and and runs tasks bar and baz jake task foo  bar  baz and and only runs if bar is older than bar source or non existant jake file bar  bar source  function and and stuff to compile bar source to bar and and does nothing jake task baz example usage  runs default task if no task names are given runs bar  baz dependent tasks then foo task jake foo runs bar  baz  foo  and default tasks jake foo default
692663, read ruby  read ruby is a book i m writing about ruby    it s in a very rough state but the latest version can always be viewed at text and images are licensed under a creative suggestions and issue reports are welcomed via the issue contributor s guide  commits and do pull requests to generate the book you ll need ruby    or   trunk  which can be installed via xsltproc available in an eponymous package on debian and her derivatives the gems coderay  h min  nokogiri  sinatra  and wcvalidators if you have the bundler gem installed you can install the lot by executing bundle install in the repository root to validate the docbook sources you ll need xmllint packaged as libxml utils on debian et al and and or if these programs aren t installed gzip for compressing html and css and js installed by default on most systems to preview it locally run rake browse to start the bundled web server
690156, blogkit is a rails plugin to add a blog to your app the goal is to provide common blog functionality that integrates into your existing app while keeping things simple blogkit has the following features and admin for blog articles and search engine friendly urls and uses existing user model and comments via existing user model and highlights code with ultraviolet and uses your existing layouts and easily customizable css and akismet spam filtering support and markdown default or just plain html parsing and image and gravatar support and anonymous comments optional and atom feeds and image upload via paperclip or something that adds hasattachedfile to models and s image support coming soon and follow comments via e mail in rails and script and plugin install git and and github com and ryanstout and blogkit git the plugin will then copy in migrations for the blogpost and blogcomment models install the tables with rake db migrate the blogkit configuration file will be installed in config and blogkit yml you can enable and disable features there an editable css file for the blog pages will be copied into public and stylesheets and blogkit css css files for the code highlighter will be copied into public and stylesheets and syntax and then you will want to make sure your app meets the setup requirements below assumptions  blogkit makes the following assumptions and flash messages displaying is handled via the layout blogkit is designed to work with your existing user model at the moment it assumes this will be called user your user class and application controller simply need to respond to some methods to be able to use blogkit these methods while not standardized are very common and come with plugins like authlogic and restfulauthentication applicationcontroller should respond to requireuser currentuser title optional passes in the pages title as the first argument user model should respond to admin returns true if the user can edit posts and delete comments name the users name blogimageurl optional the users photo show next to comments and posts email options for gravatar support once you have everything setup you can see and manage the blog at and blogposts make sure that you have all of the requirements below met requirements  rails   x rails  support coming soon willpaginate optional ultraviolet and its deps for code highlighting install oniguruma if   x config gem ultraviolet bluecloth  for markdown config gem bluecloth paperclip rails  is supported see rails branch customization  be sure to edit config and blogkit yml many common settings can be changed there view customization blogkit is built as a rails engine plugin for rails   x not the previous engines plugin you can see the models views and controllers in vendor and plugins and blogkit and app and you can change them by copying any of them into your apps and app directory rails will look in and app before looking in vendor and plugins and blogkit and app and once they are copied into and app you can customize the appearance and behavior of the blog pages by default the layout does not display a list of all tags this can be easily added to any layout in the application by including this in the controller helper blog then in the view blogtagslist you can optionally pass in a limit on the number of tags to show also keep in mind that you can specify a layout just for the blog kit pages you can have blogkit set the page title just create a method in applicationhelper like def title ttl pagetitle ttl if anyone knows of a better convention for this let me know this is what niftygenerators uses code highlighting example  to get code highlighted place the following tag code lang ruby and code you can find a list of languages syntaxes under doc and syntaxes and a list of themes colors under doc and themes copyright c  ryan stout released under the mit license
537093, by using eventmachine happening does not block on s downloads and uploads thus allowing for a higher concurrency alternatives like rightaws block during the http calls thus blocking the nanite agent for now it only supports get put and delete operations on s items the put operations support s acls and permissions happening will handle redirects and retries on errors by default installation  gem install happening  require happening em run do item happening s item new bucket  itemid item get non authenticated download works only for public read content item happening s item new bucket  itemid  awsaccesskeyid your id  awssecretaccesskey secret item get authenticated download item put the new content item delete the above examples are a bit useless as you never get any content back you need to specify a callback that interacts with the http response em run do item happening s item new bucket  itemid  awsaccesskeyid your id  awssecretaccesskey secret item get do and response and puts the response content is response response em stop end this will enqueue your download and run it in the eventmachine event loop you can also react to errors em run do onerror proc new and response and puts an error occured response responseheader status em stop item happening s item new bucket  itemid  awsaccesskeyid your id  awssecretaccesskey secret item get onerror onerror do and response and puts the response content is response response em stop end if you don t supply an error handler yourself happening will be default raise an exception downloading many files could look like this em run do count  onerror proc new and http and puts an error occured http responseheader status em stop if count  onsuccess proc new and http and puts the response is http response em stop if count  count times do and i and item happening s item new bucket  item i  awsaccesskeyid your id  awssecretaccesskey secret item get onsuccess onsuccess onerror onerror end  happening supports the simple s put upload em run do onerror proc new and http and puts an error occured http responseheader status em stop item happening s item new bucket  itemid  awsaccesskeyid your id  awssecretaccesskey secret  onsuccess onsuccess onerror onerror item put file read and etc and passwd  onerror onerror do and response and puts upload finished em stop end setting permissions looks like this em run do onerror proc new and http and puts an error occured http responseheader status em stop onsuccess proc new and http and puts the response is http response em stop item happening s item new bucket  itemid  awsaccesskeyid your id  awssecretaccesskey secret  permissions public write item get onsuccess onsuccess onerror onerror custom headers em run do onerror proc new and http and puts an error occured http responseheader status em stop onsuccess proc new and http and puts the response is http response em stop item happening s item new bucket  itemid  awsaccesskeyid your id  awssecretaccesskey secret  permissions public write item put onsuccess onsuccess onerror onerror headers cache control max age   content type text and html  expires fri  nov     gmt  x amz meta abc abc   happening support the simple s put upload em run do onerror proc new and response and puts an error occured response responseheader status em stop item happening s item new bucket  itemid  awsaccesskeyid your id  awssecretaccesskey secret item delete onerror onerror do and response and puts deleted em stop end amazon returns no content on delete so having a success handler is usually not needed for delete operations  you can also just load the headers of an s item em run do onerror proc new and response and puts an error occured response responseheader status em stop item happening s item new bucket  itemid  awsaccesskeyid your id  awssecretaccesskey secret item head onerror onerror do and response and puts headers response inspect em stop end streaming  the response data can also be streamed em run do item happening s item new bucket item get onerror onerror onsuccess onsuccess stream do and chunk and handle the individual chunk ssl support  happening will use ssl and https by default what it cannot do by default is verify the ssl certificate this means that traffic is encrypted but nobody can say if the ssl endpoint is the one you except in order to verify the ssl certificate you need to provide happening with the path to a certificate ca collection in pem format happening s ssloptions certchainfile and etc and ca bundle crt you can also set this option on each item happening s item new bucket  itemid  awsaccesskeyid a  awssecretaccesskey b  ssl certchainfile and etc and ca bundle crt or even on the request item get ssl certchainfile and etc and ca bundle crt   happening is licensed under the apache   license see license txt 
2437749, right now kibi includes a template engine a router a jsonp implementation a page load indicator and pushstate support background  this repo is a snapshot of what i had built published as an exploration of the cool things still possible with very little code if you d like to develop it yourself please feel free to take over this fork building a kibi app  kibi apps are declarative and consist of several named and routed templates each of which lives in its own script tag when kibi loads it parses every script tag with a data kibi attribute into its own template the data kibi attribute should be set to a loose json object with the following keys pathname optional a regular expression when this is matched the template is rendered to the page body id optional a string this allows templates to be called from within other templates by name on the global kibi template object location optional a jsonp url when a template with a location is rendered it is rendered using the data returned from the url pretty neat eh a kibi app should have this structure script type text and plain data kibi pathname and and and  kibi template footer and script script type text and plain data kibi id footer and script script type text and plain data kibi pathname and and h not found and h and script for a better example see the kibi sample app itself installation and setup  to install enter npm install kibi to see the demo enter npm start kibi to build kibi and the demo enter node and tools and build js from the root of the project building will take a few seconds and show you the size of the library after compression like this building kibi js raw  bytes uglified  bytes crushed  bytes uglycrushed  bytes kibi js built successfully  bytes  permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
684274, rails template to setup a new rails  app to use the new jquery drivers instead of the default prototype ones how to use new project  javascriptincludetag cdn how to use existing project  if you re converting a rails  app to jquery you can use rake rails template to execute the template inside your existing app how to update  the template creates a new rakefile called jquery rb in lib and tasks that includes a rake tast jquery update to update the jquery js and rails drivers js files to use simply run the following command rake jquery update the rake task will automatically download both js files and overwrite those in public and javascripts this template works via this process  remove old prototype js  download latest jquery min and place into javascripts folder  download latest jquery drivers and place into javascripts folder  create requested javascript expansions you are free to make any and all modifications to the template and use it in whatever appropriate context you desire as long as you keep the attributions in place pull requests  i m sure there are a lot of ways this can be done better so if you make changes please send me a pull request
717134, space tweet  installation  you will need both node js and npm installed to get space tweet running locally if you have those just cd into the root of this repo and run npm install boom all server dependencies installed running this locally  once you ve got everything installed make sure to update the config json with your twitter username and password then sudo node server js this will start up space tweet on port  so go to your browser localhost  hopefully you should see space tweet hooray
2906356, this repository includes the following plugins portfolio rb a plugin for generating a portfolio page and individual project pages readmore rb a plugin for generating a link to read more for post index pages simpleformat rb a plugin for formatting a block of text very simply team rb a plugin for generating a team page individual profile pages and a liquid filter for short author bios on blog posts need to create a portfolio page for your company website look no further simply define data files in the projects directory and this plugin will read those create a portfolio index and a page for each project then all you need to do is style them see the sample pages for possible layouts and data file format this is a very simple liquid template filter to create a nofollow read more link for blog posts it is intended to be used on blog index pages after an excerpt for example if post excerpt post excerpt and readmore post url endif might produce something like note for seo purposes you should always have a unique excerpt for each post that is used on the index page this is a very simple liquid template filter to mimic the rails simpleformat method it will perform the following transformations r n and r n  and newline paragraph  newline br using our example from before if post excerpt post excerpt and readmore post url and simpleformat endif might produce something like need to create a team page for your company website look no further simply define data files in the team directory and this plugin will read those create a team index and a page for each team member then all you need to do is style them see the sample pages for possible layouts and data file format this plugin also includes a liquid template tag for an author bio to include on a blog post page add an author to your yaml front matter for each post like so author sample person then use the tag on your post layout authors note the author name will be converted to the yml file name so the file names need to follow a format that you use for your author names the general formula is convert author to downcase replace all spaces with dashes append yml e g  sample person sample person yml ruby    did we miss something is there a bug fork the project make your feature addition or bug fix commit do not mess with rakefile version or history if you want to have your own version that is fine but bump version in a commit by itself i can ignore when i pull send us a pull request copyright c  flatterline llc see license for details
1712848, this project shows how to create a simple web chat room with rabbitmq the chat server uses websockets to send messages to the connected users this means it only works with chrome and safari some browsers like firefox  can be configured to enable websockets each user that connects to the server will get a private auto delete anonymous queue this queue will be managed by an amqp consumer whenever the amqp consumer recieves a message it will forward it to the websockets process and this one will send it to the user browser when the user is disconnects from the server his consumer gets closed and the queue deleted get the source code git clone git and and github com and videlalvaro and rabbitmq chat git cd rabbitmq chat compile the source code make start rabbitmq if is not running already edit the file and priv and chatdev config to suit your rabbitmq configuraion start the server and start dev sh create a file called and priv and chat config with the proper values to suit your rabbitmq configuraion see the file and priv and chatdev config for an example of the configuraion format start the server and start sh see license md
786994, chronologic is a service for storing and generatin activity feeds new feeds timelines and other forms of aggregated reverse sorted data chronologic includes a small model layer that applications can use to map their domain to chronologic types this model layer talks to a chronologic rest service said service uses an underlying database for storage currently storage is cassandra only but that s a temporary condtion you dig chronologic exposes four kinds of data events are the items that appear in your feeds these are your statuses checkins commits changes etc feeds are often a social thing therefore they reference objects objects are the things that events happen to these are your users spots projects documents etc timelines are the endpoints where activity feeds appear they contain any number of events every event is written to one or more target timelines timelines fan events out based on subscriptions subscriptions connect timelines to other timelines to make events posted to your user timeline appear in the site wide timeline you would subscribe the site wide timeline to your use timeline an example goes here instructions on running chronologic and idea about deploying it go here the way you contribute to the development of chronologic goes here copyright   gowalla incorporated chronologic is mit licensed
1281093, fructose is a language that compiles to php fructose s syntax is borrowed from that of ruby s with changes and standard library differences to make this project feasible under php it is composed of two parts fructose itself which is written in c  and libfructose a support library written in php and included by every file fructose outputs libfructose is designed to provide a subset of the ruby standard library to fructose programs fructose is written in c and requires the net   framework to run fructose does work and is supported under mono but you will need to find yourself a copy of microsoft scripting dll and microsoft dynamic dll to get it to compile fructose also requires the presence of ironruby to compile and run the fructose compiler is licensed under the new bsd license libfructose is licensed under the zlib license
906828, piggyphoto  python bindings for libgphoto this is a very rough proof of concept feel free to play with it and add improvements import piggyphoto c piggyphoto camera print c abilities c capturepreview preview jpg c captureimage image jpg
277499, each model must extend the sprig class define a protected init method and set the field mappings example of a model class modelpost extends sprig protected function init  this fields and array id new sprigfieldauto title new sprigfieldchar blog new sprigfieldbelongsto array model blog   author new sprigfieldbelongsto array model user   body new sprigfieldtext published new sprigfieldboolean   loading models is done with the sprig factory name method post sprig factory post loading models by calling new modelfoo will not work you must use the factory method model data is read using object properties title post title body post body model data is changed the same way post title a new title you can also use the values method set many fields using an associative array post values array title a new title  reading records is done by setting the search values then calling the load method post sprig factory post post id  post load if post loaded and and do something with the post it is also possible to pre populate the model using an array of values post sprig factory post  array id  load creating new records is done using the create method post sprig factory post  array title my first blog post  body created using a sprig model  published false  and and create a new blog post post create if the model data does not satisfy the validation requirements a validateexception will be thrown this exception should be caught and used to show the end user the error messages and and create a new blog post post create catch validateexception e and and get the errors using the validate errors method errors e array errors blog and post updating a record is done using the update method if post try  post values post update  catch validateexception e  errors e array errors blog and post  note that you must always call load before update or the query will not be built properly deleting a record is done using the delete method post delete it is possible to generate a complete form very quickly using the inputs method php foreach post inputs as label input dt php echo label and dt dd php echo input and dd php endforeach and dl each input will be populated with the current value of the field if you need the field name as the inputs key instead of the label use false inputs post inputs false echo inputs title creating custom forms can by done using the input method to create place individual fields php echo post input title  array class spellcheck fancy and div php echo toolbar php echo post input body  array class wysiwyg and div this allows much finer control of how your forms are displayed at gives control over what fields will be updated accessing a field object is done using the field method title post field title an array of fields can be accessed using the fields method fields post fields sprig offers most database column types as classes each field must extend the sprigfield class each field has the following properties allow empty values to be used default is false a primary key field multiple primary keys composite key can be specified default is false this field must have a unique value within the model table default is false convert all empty values to null default is false show the field in forms default is true default value for this field default is an empty string limit the value of this field to an array of choices this will change the form input into a select list no default value database column name for this field default will be the same as the field name except for foreign keys which will use the field name with id appended in the case of hasmany fields this value is the column name that contains the foreign key value human readable label default will be the field name converted with inflector humanize description description of the field default is an empty string validate filters for this field validate rules for this field callbacks validate callbacks for this field an auto incrementing sequence field implies primary true and editable false a boolean true and false field representing by a checkbox implies empty true and default false a single line of text represented by a text input also has the minlength and maxlength properties a password represented by a password input note for security reasons the input generated by a password field will never have a value attribute a float or decimal number represented by a text input also has the places property an integer number represented with a text input or a select input if the choices property is set also has the minvalue and maxvalue properties a large block of text represented by a textarea extends sprigfieldchar  but requires the choices property extends sprigfieldchar  but requires a valid email address as the value extends sprigfieldinteger  but requires a valid unix timestamp as the value extends sprigfieldchar  represents an image file requires the path property the path to the directory where images will be stored a reference to another model by the parent model primary key value does not produce a form input has the model property the name of another sprig model a reference to another model by the child model primary key value represented by a select input has the model property the name of another sprig model a reference to many other models by this model primary key value does not produce a form input has the model property the name of another sprig model a reference to another model by a pivot table that contains the both primary keys represented by a list of checkbox inputs has the model property the name of another sprig model has the through property the name of the pivot table by default uses both model names sorted alphabetically and combined with an underscore for example a many to many relationship between modelpost and modeltag would default to posttag as the table name there s a few ways to add and remove many to many relations the first is to use the raw field names post foos array    this will completely overwrite all the relationships for this model the only relations to this model will be   and  the second way is to use the relate and unrelate methods post relate foos   you can also pass an object post relate foos  foo or an array of ids post relate foos  array    or an array of objects post relate foos  array foo foo foo to remove a relation use the same techniques as above post foos array    this will completely overwrite all the relationships for this model the only relations to this model will be   and  use unrelate instead of relate post unrelate foos   you can also pass an object post unrelate foos  foo or an array of ids post unrelate foos  array    or an array of objects post unrelate foos  array foo foo foo
2106358, departure board is a javascript and css implementation of a rail station departure board it was created as an experiment to see how browsers handle many transitions simultaneously the conclusion was not great at the time of posting i m getting the following results on my mac webkit inconsistent sometimes runs smoothy but most of the time it s jumpy and the whole document often flashes firefox had the smoothest results but it looks like it is achieving this by ignoring some transitions when there are too many at once opera handled the transitions in much the same way as firefox except the text appeared blotchy during the transform ie untested the mit license copyright c  paul cuthbertson lt github paulcuth me uk gt permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
594622, ever wanted to manage your rubygem in a sane way without having to resort to external dependencies like jeweler or hoe ever thought that rake and a hand crafted gemspec should be enough to deal with these problems if so then rakegem is here to make your life awesome rakegem is not a library it is just a few simple file templates that you can copy into your project and easily customize to match your specific needs it ships with a few rake tasks to help you keep your gemspec up to date build a gem and release your library and gem to the world rakegem assumes you are using git this makes the rake tasks easy to write if you are using something else you should be able to get rakegem up and running with your system without too much editing the rakegem tasks were inspired by the take a look at rakefile and name gemspec for new projects you can start with these files and edit a few lines to make them fit into your library if you have an existing project you ll probably want to take the rakegem versions and copy any custom stuff from your existing rakefile and gemspec into them as long as you re careful the rake tasks should keep working rakegem makes a few assumptions you will either need to satisfy these assumptions or modify the rake tasks to work with your setup you should have a file named lib and name rb where name is the name of your library that contains a version line it should look something like this module name version    it is important that you use the constant version and that it appear on a line by itself in order to make a new release you ll want to update the version with rakegem you only need to do that in the lib and name rb file everything else will use this find the canonical version of the library rakegem provides three rake tasks rake gemspec will update your gemspec with the latest version taken from the lib and name rb file and file list as reported by git ls files rake build will update your gemspec build your gemspec into a gem and place it in the pkg directory rake release will update your gemspec build your gem make a commit with the message release    with the correct version obviously  tag the commit with v   again with the correct version  and push the master branch and new tag to origin keep in mind that these are just simple rake tasks and you can edit them however you please don t want to auto commit or auto push just delete those lines you can bend rakegem to your own needs that s the whole point
2960740, a custom segue for uistoryboard ios  and that provides an opening door transition simply copy cidoorwaysegue h and cidoorwaysegue m to your project then create a custom segue in the storyboard editor and set the segue class to cidoorwaysegue mfdoorwaytransition by ken matsui doorway segue is available under the mit license see the license file for more information
499683, the sources in this repository simulate apple s storekit framework first of all this code is available under the cc license which to be blunt means it s public domain legalities has waived all copyright and related or neighboring rights to span property dct title simulated storekit and span this work is published from there legalities are done let s get to it this code reimplements the contract of apple s storekit framework exactly except that it prefixes all classes protocols and constants with ilsim or kilsim constants only this can be used to test a iap app in the simulator for example or to provide beta testers a iap based app without requiring them to have iap test accounts or make purchases sky s the limit additionally the ilsimstorekit h header includes a set of preprocessor definitions that can be used to switch an app written for storekit using sk symbols to simstorekit transparently write an app that uses storekit where you would import storekit replace import storekit and storekit h define ilsimreplacerealstorekit  import ilsimstorekit h also make sure you compile all the m files of simstorekit in your app and that all h files are on the headers path the easiest way is to simply drag them all into your project but see the next section for caveats the library needs to simulate the iap server using a property list of products which is set using environment variables in xcode use project edit active executable and look in the second tab to set them up env variables you can use and the expected format for the products list are documented at the top of ilsimskpaymentqueue h do not ship apps containing this code duh currently simstorekit does not have a way to remove itself from the build for release builds so you ll have to make up something on your own editing the implementation files to have a if allowsimstorekit or other preprocessor tricks are probably the way to go
320521, git framework mac os x git repository framework  an implementation of git in objective c foundation framework for embedding in mac os x and potentially iphone os applications supported features  the currently supported features of the project are reading objects both loose and packed resolving refs from git and refs reading branches both local and remote enumeration of commits in breadth and depth first orders rev list support to a certain degree full compatibility with git rev list is not yet available preliminary pack file and index generation support api needs work deltas currently unsupported planned features  features which will be implemented at some point in no particular order pulling changes from a remote repository via either ssh and and or git and and pushing changes to a remote repository via ssh and and mutable objects to enable writing new objects to the repository manipulation of the index and stage and much much more additionally features from cocoagit cocoagit which are not yet supported will be evaluated and migrated into this project maybe as and when things are thought of suggested or otherwise materialize terms and conditions may apply see binary for details adding the framework to your mac os x application  the first step to this is compiling a release build of git framework this can either be done in xcode or via rake on the command line as rake build release the built product will be in the builds and release and directory in the finder copy git framework to your project directory eg myproject and frameworks add the frameworks and git framework to your linked frameworks group in xcode open get info on your application target select the build tab change the configuration to all configurations enter runpath search paths into the filter field add executablepath and and frameworks to the runpath search paths add a new copy files build phase to your application target select frameworks from the destination dropdown drag git framework from linked frameworks to your new copy files build phase you might want to rename the copy files build phase to copy frameworks building in xcode and info plist versioning  some issues have been reported when building the framework in xcode and the info plist version script failing to find git the source of this issue stems from how xcode is started if xcode is started from a terminal session via open git xcodeproj or similar then xcode will inherit the path of the terminal session in the majority of cases this is results in no issues when xcode is started from finder then it inherits the path from the environment which unfortunately is not the same as the path used by shells in terminal to change the environment path requires creating or modifying and macosx and environment plist with the property list editor and adding and editing the path key in the plist as an example my and macosx and environment plist looks like this when passed to cat path and usr and bin and bin and usr and sbin and sbin and usr and local and bin and users and geoffgarside and bin after creating or modifying this file you will unfortunately have to login and logout for it to be picked up thanks to brian chapados who did the detective work on finding this information out running the test suite  the test suite requires macruby   macruby and bacon bacon and can be run either through xcode or rake in the terminal so far tests have been run using macruby r and bacon v  bacon can be installed either using rubygems or alternatively with rip rip code formatting and style  i ve tried to keep the code formatting and style unified within the project and with the current body of code this should be reasonably easy to follow to aid in keeping the tabs and spaces under control there is a pre commit hook which can be installed via rake checktabs installhook if you don t have a pre commit hook already then this one will be installed if you do then the script contents will be printed and you will need to merge them manually this will cause a commit were there are tabs in the files being committed to fail if you want to check the staged files or source and contents for tabs you can use either of the following rake checktabs source rake checktabs staged and any offending lines will be printed the hook can be configured to ignore specific file mime types and extensions this is done as follows git config pre commit ignored mime image and application and xml application and octet stream git config pre commit ignored extensions graffle pbxproj bridgesupport  the addition of any c level constants which need to be exposed to a bridged language such as macruby macruby or pyobjc will require the regeneration of the bridgesupport files the headers containing the constants or functions to be exposed will need to be marked as public in the git target and then the bridgesupport generate rake task will need to be run documentation of code  all headers need to be documented using the style currently in use documentation is generated using the doyxgen doxygen tool and is then post processed by the documentation and doxyclean project into the final format released under the terms of the mit licence details of which are below copyright c  geoff garside permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
648869, introduction  oauth ruby is a ruby library that makes it easy for developers to use oauth protocol currently in use in sites such as facebook twitter and launchpad  signals disclaimer as this is alpha software it is suspected to change and considered unstable currently the project consists of three seperate packages oauth core oauth server and oauth client the latter will be available soon implements oauth attributes which gives the possibility to set an attribute via callback blocks  accessor or passing a hash on object initialization this ensures that the library is very flexible getting started  how to contribute  if you wish to helps us make oauth  an easy ride with ruby please take note of the following should you wish to commit a patch please fork the project and send a pull request but please don t forget the tests
516908, remodel redis model is an activerecord like mapping layer which offers familiar syntax like hasmany  hasone etc to build your domain model in ruby entities are serialized to json and stored as fields in a redis hash using different hashes called contexts in remodel  you can easily separate data belonging to multiple users for example redis offers in memory read and write performance mdash on the order of k to k persistence to disk for example on my macbook  ghz redis benchmark d  r  q set   requests per second get   requests per second incr   requests per second lpush   requests per second lpop   requests per second brew install redis gem install redis  start redis and redis server  now the tests should run successfully started  finished in   seconds  tests  assertions  failures  errors class book remodel entity hasmany chapters class chapter property title short t  class string property year class integer property author class string  default anonymous class chapter remodel entity property title class string now you can do require and example and book context remodel createcontext shelf remodel context shelf book book create context title moby dick  year  book shelf  title moby dick  year  author anonymous chapter book chapters create title ishmael chapter shelf  title ishmael all entities have been created in the redis hash shelf we have used as context remodel redis hgetall shelf b   b t moby dick  year   c   c title ishmael  cbook b  bchapters c somewhat similar but instead of serializing to json stores each attribute under a separate key better docs make serializer json messagepack marshal configurable it has some rough edges but i have successfully been using remodel in production since summer 
1557177, what is it  zoey is a lightweight framework for developing mobile apps it is small customisable and features a range of ui components zoey is designed around html and supports modern browsers ios   android   tested using progressive enhancements and css no extra elements are added to the dom table of contents 
167717, twitterapp  twitterapp is a very basic rails  application that demonstrates how to use the workflow with version  x of the twitter support installation  git clone git and and github com and jnunemaker and twitter app git cd twitter app bundle install using twitterapp requires you to register an app with obtain credentials substitute your consumer key and secret into the command consumerkey abc consumersecret  rails server if you would like to see how to use the omniauth michaels ober maintains a simple rails how to do so
1262687, a generic styled view class for rendering simple graphics on the desktop i use this every day bsd license except for the image
1463402, and the web jsc file js jsc file js file coffee use make test or and setup py test repo for even more tests
958605, jammit s is a jammit wrapper that provides appropriate hooks so you can easily deploy your assets to s and cloudfront it s especially great for heroku user who use generated assets such as coffee script and sass jammit s includes a script you can use as a hook to recompile and upload all your assets to install jammit s just use gem install jammit s if you are using rails add it to your project s gemfile gem jammit s jammit s already has a gem dependency for jammit so i d recommend removing any existing gem jammit references from your gemfile sbucket my awesome jammit bucket to deploy your files to s just the jammit s command at your project s root jammit s if using it in the context of your rails app i d recommend using bundle exec bundle exec jammit s set your authenticaton information within config and assets yml saccesskeyid hdmnfcwzjt ssecretaccesskey tzrldmuhdooljtlwwqx and i and pfejziouwibl as you probably don t want to check this data into source control i d recommend you just set it to an environment variable on your local box and use erb saccesskeyid env accesskeyid ssecretaccesskey env secretaccesskey you can then set these env variables in your bashprofile by default jammit s will upload your configured asset directly along with public and images however you can customize this using the suploadfiles setting which should be a list of file globs adds image uploads suploadfiles public and css and images and by default jammit s uses the permission setting found on the s bucket however you can override this with the config spermission publicread valid permission options are private owner gets fullcontrol no one else has any access rights this is the default publicread owner gets fullcontrol and the anonymous principal is granted read access if this policy is used on an object it can be read from a browser with no authentication publicreadwrite owner gets fullcontrol the anonymous principal is granted read and write access this is a useful policy to apply to a bucket if you intend for any anonymous user to put objects into the bucket authenticatedread owner gets fullcontrol and any principal authenticated as a registered amazon s user is granted read access to use cloudfront simply add the following settings to config and assets yml usecloudfront on cloudfrontdistid xxxxxxxxxxxxxx cloudfrontdomain xyzxyxyz cloudfront net please note that cloudfrontdistid is not the same as the cloudfront domain name inside cloudfront management console select the distribution and you will see distribution id and domain name values this will use the cloudfront domain name for your assets instead of serving them from the slow s bucket  it may reportedly take up to  minutes to invalidate all the cloudfront caches around the globe and amazon charges for more than a certain number of invalidations per month  it s non atomic from the perspective of the end user they may get an older version of the site with a newer version of the javascript and css or vice versa  it doesn t play nicely with aggressive http caching for example once i serve a script or a stylesheet i would like it to be cached indefinitely with no more round trips to see whether it is valid given these constraints there s still an important need for some kind of content based hashing done right this assures that all files can be cached indefinitely and the user will always get matched html and js and css files this currently is in the works to suggest a feature or report a bug
1023036, rmq in intended to be fast and reliable the main difference is that subscribers don t need to be online or they will miss messages rmq track which messages the client didn t read and it will ensure that the client will receive them once he comes online you can download the latests build at to use it just as a producer producer p new producer new jedis localhost  some cool topic p publish some cool message to use it just as a consumer you can consume messages as they become available this will block if there are no new messages consumer c new consumer new jedis localhost  consumer identifier  some cool topic c consume new callback public void onmessage string message and and do something here with the message consume next waiting message and return right away consumer c new consumer new jedis localhost  consumer identifier  some cool topic string message c consume read next message without removing it from the queue consumer c new consumer new jedis localhost  consumer identifier  some cool topic string message c read and you are done copyright c  jonathan leibiusky permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1655196, informal is a small gem that enhances a plain old ruby object so it can be used with rails  form helpers in place of an activerecord model it works with the rails formfor helper and simpleform as well here s a quick and slightly insane example models and command rb require informal class command include informal model attraccessor command args validatespresenceof command def run command args end views and commands and new html erb formfor command do and form and form textfield command form textfield args form submit do it end controllers and commandscontroller rb def create command command new params command if command valid command run end it s a ruby gem so just install it with gem install informal  add it to your bundler gemfile or do whatever you like to do with gems there is nothing to configure the insanity of the above example aside informal is pretty useful for creating simple restful resources that don t map directly to activerecord models it evolved from handling login credentials to creating model objects that were stored in a serialized attribute of a parent resource in many ways using an informal model is just like using an ar model in controllers and views the biggest difference is that you don t save an informal object but you can add validations and check if it s valid if there are any validation errors the object will have all the usual error decorations so that error messages will display properly in the form view if you include informal model  your class automatically gets an initialize method that takes a params hash and calls setters for all attributes in the hash if your model class inherits from a class that has its own initialize method that needs to get the super call you should instead include informal modelnoinit  which does not create an initialize method make your own initialize method and in that you can assign the attributes using the attributes method and also call super with whatever args are if you name your model informalcommand  form params get passed to your controller in the params informalcommand hash as that s a bit ugly and perhaps doesn t play well with standing in for a real activerecord model informal provides a method to override the model name class informalcommand informalmodelname command  note the informalmodelname feature is available only in rails   or greater unless somebody back ports the required api change to   x the standard way that rails generates ids for new records is to name them like commandnew  as opposed to command for persisted records i ve found that when using informal models i often want more than one per page and it s helpful to have a unique id for javascript to use therefore informal uses the model s objectid to get a unique id for the record those ids in the dom will look like command  which would be scary if you did anything with those memory addresses except use them for attaching scripts copyright   josh susser released under the mit license see the license file
839954, githubfinder is a fast github repository browser the browser is inspired after mac osx finder bookmarklet if you don t have greasemonkey and greasekit installed you can drag the bookmarklet to your address bar the bookmarklet will open a new ghfinder window of the currently viewed repository switch between repos and branches with ease keyboard navigation support with arrow keys text files can be previewed inline with syntax highlighting support ruby javascript css and html with textmate like twilight theme files can be diff ed directly between commits diff is done by difflib flexible framework to customize and extend the existing functionalities github js api wrapper and javascripts and gh js since the app needs to be under  bytes it needs special optimization to achieve this size the unminifed uncompressed js is about  and kb all compressed down to  kb or so to build the app run the provided and build script to automatically bundle up everything into the and app folder for an ie build run and iebuild the minified app is working as follow bootstrap js loads code from png and eval javascripts and app js file is executed this file is appended at the end of the files list the code is somewhat modularized with a main class f defined in and javascripts and f js for the finder itself this class can be extended to add more functionalities through various plugins currently the plugins are diff allowing user to diff  different files from github code highlighter currently supports ruby javascript css and html keyboard navigation user can use the arrow keys to navigate resizablepanel enable the panels to be resizeable githubreadme automatically grab the readme files from github currently supported markdown md markdown  textile textile readme files github only renders these files automatically bookmarklet lets user create a bookmark to quickly access githubfinder greasemonk and greasekit userscript extend github s interface with a button linking to github finder to allow quick access combined with the build script this architecture is flexible enough to enable or disable certain components to achieve the right size and features github finder is possible by leveraging these tools github api
1804022, sample codes for who want to implement gallery feature in your android app gallery view full page view zoom in and out swipe to next picture
1420466, an extension built on backbone js that adds joins and relations to backbone models instead of having to write var note notes get  var owner owners get note get ownerid var ownername owner get name you can simply write var ownername notes get  get owner get name var ownername notes get  get ownername because we needed to export a large database into a javascript file and porting it to th th or even th normal form not counting the id column helped us greatly compress out data the drawback was that what had been a single joined record was now in five different backbone models this initial attempt at ligament js was built against backbone js    which depends on jquery and underscore js backbone js does not say which version of jquery and underscore they require i developed against jquery    and underscore    just open test and specrunner html in a browser and you re in business you do not need a server just open the file directly unit tests are found in the test and folder i used jasmine to test because the syntax is pretty and because it s totally self contained i used jasmine    the dsl is still in flux i m trying to stay transparently compatible with backbone js so the dsl adds extra attributes to models instead of adding custom methods currently setting up relationships is a bit laborious you must register each model and collection separately if anyone knows some metaprogramming magic to get around this please let me know i plan to add convention over configuration eventually in stages right now this very early version must be configured explicitly for usage examples let s say we have notes that are owned by owners and that owners in turn work for companies the model setup will look normal except that we use ligament model instead of backbone model and and basic mode and collection setup note ligament model extend notes ligament collection extend model note owner ligament model extend owners ligament collection extend model owner company ligament model extend companies ligament collection extend model company and and initialize collections owners new owners id   name bob from accounting  companyid  notes new notes id   text please submit your tps reports  ownerid  companies new companies id   name initech next comes the clunky part register each model and class and then the relationships between them ligament registermodel note  note ligament registermodel owner  owner ligament registermodel company  company ligament registercollection notes  notes ligament registercollection owners  owners ligament registercollection companies  companies ligament model belongsto note  owner  owners  ownerid ligament model delegatesto note  ownername  owner  name ligament model belongsto owner  company  companies  companyid ligament model delegatesto owner  companyname  company  name ligament model delegatesto note  companyname  owner  companyname but once the drudgery is out of the way your relationships are set up and working note get owner and and owner bob note get owner get name and and bob from accounting note get ownername and and bob from accounting note get owner get company and and company initech note get owner get companyname and and initech note get companyname and and initech sets an attribute on an object that finds an associated object in another collection by id if note has an ownerid and you have a collection called owners you can link them with ligament model belongsto modelname targetname collectionname foreignkey ligament model belongsto note  owner  owners  ownerid once you have told ligament that a model is joined to a collection through a belongsto association you can set attributes on your model that delegate to attributes on the other object for example once you have set up note get owner to return a remote object you can delegate ownername to get the name attribute from the note s ligament model delegatesto modelname targetname associationname foreignname ligament model delegatesto note  ownername  owner  name one trick to watch out for is that the third parameter is not a collection name but the name of a belongsto association you must have already set up no attempt has been made for handling assignment ligament currently only works for read only joins this first version only has belongsto and delegatesto hasmany and hasone are not yet supported this is super pre alpha code ligament does not recover gracefully yet if you overwrite an association if you try to retrieve an association that does not exist or if you create infinite recursion have a care your mileage may explode clean up the project i don t like symlinking ligament js from the test directory clean up the project i need some kind of package mechanism to create minified and packed versions of the file clean up the project i need some kind of deploy mechanism to publish the debug minified and packed versions somewhere i hear github supports this kind of thing now but i don t understand how the internet works these days clean up the dsl make as much convention over configuration as possible given an association of owner  for example we should be able to figure out that the collection is owners and the foreignkey is ownerid not sure how to handle custom pluralizations like companies people or children though try to move belongsto etc  directly to the model classes e g note belongsto owner try to figure out some metamagic that can identify collections as they are created safety checks to prevent infinite loops handle missing records id not found  and prevent accidental overwrite of existing attributes plural versions of registermodels and registercollections so we can register them all in a single pass
959252, a jquery plugin which renders a custom css styleable vertical scrollbar for arbitrary overflowed content jquery scroll contains unit tests based on googles js test driver jstd starting the server automatically launch the browsers and capture it browser paths for safari  firefox chrome are osx paths cd jquery scroll and tests java jar lib and jstestdriver    jar port  browser lib and safari shlib and firefox shlib and chrome sh config scroll conf running the tests java jar lib and jstestdriver    jar config scroll conf tests all
1617286, yeah right get a room you two i ve written a number of ruby libraries in my time i ve used many many more wait let s back up a bit people love libraries like sinatra and activerecord and babushka and aasm and name your favourite ruby library what they love about these is the small amount of ruby syntax required to get a whole lot done they love that they can contextualise their definitions that make the libraries do things with natural ruby syntax such as blocks to enable these kinds of libraries the use of so called meta programming constructs are required instanceeval instanceexec clever but inexperienced ruby programmers often make very useful libraries with wonderful apis but horrible internals my hand is up see workflow decouple the pretty ruby junk from the hopefully clean and explicit implementation that makes the library do it s job allow library authors to dream up apis and implement them without entering ruby metaprogramming hell it is a real place take the following example lispy new todata do fart  fart  fart   fart fart where inbed this will return fart   fart   fart    fart  fart where inbed it looks somewhat like an abstract syntax tree i think let s take an example with nesting lispy new todata do todolist do item priority high do desc take out the trash it stinks end item priority normal do desc walk the dog end item priority normal do desc feed the cat end end interestedparties do person me person you person end the pretty printed output is this but before you continue i ask you to take a deep breath and remember that you are a programmer and that you have been writing ruby for too long to be able to look at anything else than activerecord declarations and say something along the lines of wtf is this it is bad code omfg i am telling  yes once upon a time you were able to think as a programmer and once you had patience now that output todolist  item priority high  desc take out the trash it stinks  item priority normal  desc walk the dog  item priority normal  desc feed the cat  interestedparties  person me  person you  person that last example i just wrote off the top of my head you see how you can start with an api design and worry about implementation later if you haven t tried to make a nice ruby library before this wont be self evident but for those that have and have struggled through all the madness you ll see what i mean once you ve made up your api all you have to do is write the translation library that does whatever that needs to be done if that is piping out to a shell writing a configuration file or constructing an object graph then well you re covered aren t you your crazy so called dsl is now decoupled from your wonderfully explicitly programmed library i hope because i might have to modify it one day and man if i see a rats nest of instanceexecs and auto generated classes i might just write you a nasty letter with angry faces like this and if you have any questions about this or how i m using it for real world problems i am  please get in touch pete won t talk to me about this and i bought his car and everything to my mind this whole api fandangle we ve gotten ourselves into is due to ruby having a nice enough syntax to describe apis in a way that is easy to understand but ruby itself wasn t designed with this usage in mind when i see lines like hasone brain and dep nginx do it reminds me of a feature of lisp which is code as data ruby doesn t have this code as data facility but i reckon if it did we d have cleaner library implementations with it s idomatic syntax saying that i ve written about  lines of lisp in my life pete keeps telling me to go read sicp and i keep meaning to but then i end up at the local bar listening to some rock band and i m like crap it s am and even then i wont get to use lisp at work because i don t think anyone in our company except for pete has actually read sicp released under the mit license see mit license gpl can go fart itself seriously i like open source but i also like money
806586,  thematic htmlboilerplate  update the position of sidebars and sort out stuff compressed styles and script are placed in the wrong places by either w tool or wp minify plugins some changes need documenting other need testing others still need both default theme needs reworking a wordpress theme using html and based on thematic toolbox and other thematic themes header branding image from twentyten widget locations from twentyten background control from twentyten layout control from thematic options logo control from thematic options uses object orientated css todo built in support for popular wordpress plugins todo minify super cache cleaner gallery todo contact  form white label cms yoast plugins todo wp fancybox todo wp swfobject thematic child themes todo install minify plugin for wp customise the sheets as befits add files for required plugins a switch will exist to have minify not min css or js list the css files for minify to zap dkf or add library and css and hbp css library and css and and core and grid and grids css library and css and core and template and template css library and css and core and module and mod css library and css and screen css library and ccs and all css library and css and media css list the files for js as the original source is available at and more information is available at for more on oocss see other plans in mind also extra support for custom types built in support for funky jquery plugins later mox john raz
1819383, a simple dsl to create a systembar menu with macruby in osx  gem install mynu  macruby examples and dsl rb usage example macruby examples and dsl rb require rubygems require mynu mynu mynu new mynu menu hello world do and menu and puts inside menu setup menu title good bye world menu item option  do and item and item execute do puts execution block item title dynamically changed end end menu menu option  do and menu and menu item option a do puts option a clicked end menu item option b do puts option b clicked end menu execute do and menu and puts menu clicked menu title dynamically changed end end capturemenuitem menu item disabled do and item and item disabled end capturemenuitem disabled menu item enable disabled do and item and capturemenuitem enabled item execute do capturemenuitem enabled capturemenuitem execute do capturemenuitem title disabled again capturemenuitem disabled end end end end mynu item simple item do puts hello world end mynu run a workflow example macruby examples and workflow rb mynu mynu new mynu menu applications do and applications and applications app textedit  and applications and textedit app end mynu menu project do and project and project menu repos do and repos and repos open example  and example repos open resources  and example resources end end mynu separator mynu menu development do and development and development menu rails do and rails and rails open repo  and workspace and rails end end mynu separator mynu open downloads  and downloads mynu separator mynu open desktop  and desktop mynu separator mynu run a terminal example best used with visor and one terminal window macruby examples and terminal rb require rubygems require mynu mynu mynu new  warning this makes the assumation you use visor and only manage one terminal window otherwise tabs will only be created in your first and primary terminal window  normal usage will return to the frontmost app at execution mynu terminal echo disable item  echo hello do disabled end mynu terminal echo exit  echo hello  exit true do disabled end mynu terminal keeps focus on terminal tab  echo hello  focus true do disabled end mynu run improved api done reloading crash handling filemenuitem simple dialogs
719653, npm install play var play require play play and and play with a callback play sound and wavs and sfx and intro wav  function and and these are all fire and forget  no callback play sound and wavs and sfx and alarm wav play sound and wavs and sfx and crinkle wav play sound and wavs and sfx and flush wav play sound and wavs and sfx and ding wav  and and if you want to know when the player has defintely started playing play on play  function valid console log i just started playing  play sound and wavs and sfx and ding wav and and if you want to know if this can t play for some reason play on error  function console log i can t play  cd examples node demo js recommended that you use play min js for web based playbacks assumes you have already embedded the audio file as an embed tag see examples and index html one of the cli based audio player afplay mplayer mpg mpg play anyother cli based audio player if you know that a certain player will exist in the cli you can actually force it to use that specific player using the useplayer function see below for specifics and and if you want raw access to the player via stdin and and require and stuff happened here var play require play play var player false and and force it to use mplayer can be anything else play useplayer mplayer play on play  function player play player  play sound and somelonglongsong wav the player better exist or all hell may break lose
2600372, boxer is a template engine for creating nested and multi view json objects from ruby hashes section style text align center and section say you have a couple activerecord models in your rails app and you want to render an api response in json but the view of each of those model objects may change based on the api action that s being requested for instance the api for get and users and id should render a full representation of the user object in question including all relevant attributes but in your get and places and id and users api call you only need short form representations of the users at that place without every single attribute being included in the response boxer allows you to define a box for each type of object you d like to display or for each amalgamation of objects you want to display mdash it s up to you boxer box user do and box user and name user name age user age to display different views on the same object you can use boxer s views boxer box user do and box user and box view base do  name user name age user age  end box view full extends base do  email user email isprivate user private   end as you might guess the full view includes all attributes in the base view by virtue of the extends option now in order to render a user with the base view simple call boxer ship boxer ship user user first boxer assumes that you want the base view if no view is specified to ship mdash it s the only specially named view to render the full view for the same user boxer ship user user first view full which will give you back a ruby hash on which you can call tojson  to render your json response sup  and sup boxer ship user user first view full tojson name bo jim  age  email b a com  isprivate false composing different boxes together is as simple as calling boxer ship from within a box mdash it s just ruby boxer box place do and box place and name place name address place address topuser boxer ship user place users order visits first  see the wiki and gowalla and boxer and wiki for more features of boxer including extra arguments and gowalla and boxer and wiki and extra arguments preconditions and gowalla and boxer and wiki and preconditions helper methods in boxes and gowalla and boxer and wiki and helper methods in boxes box includes and gowalla and boxer and wiki and box includes multiple inheritance and gowalla and boxer and wiki and multiple inheritance
2286729, fox js allows you to use ascii art to create grid layouts in javascript grid layouts are often an important part of creating rich internet applications and yet creating them is still quite difficult and verbose the humble and experimental goal of fox js is to see whether ascii art provides a helpful way to design such layouts for applications easily and flexibly oh right table layouts are evil look away now if you want i ll just say that a this is on the client side so semantics for seo and so on become less important and b i ve plans to allow fox js to support other layout approaches like flex and grid anyway in the st century you shouldn t care but fox js is less than k compressed include fox js in your web app it adds the global code fox and code namespace currently this has one function of note code fox maketable and code this function takes two arguments the first is an array of equally lengthed strings that constitute the ascii art of the layout you want the second is a configuration object of options that alters the way the function works by default the function returns a dom node for the table you ve drawn so the simplest usage of the function is something like document body appendchild fox maketable and and  and a and  and and   this adds a one row one column table to the document s body with the letter a in it see below for how to use the map option to patch longer strings elements or views into the layout or course you also can do something more exotic with row and cell spanning document body appendchild fox maketable and and and and  and a and b and c and  and and and and  and and d and e and  and and and and  and and f and and  and and and and   the rules to obey when you re drawing your table are as follows all rows must be the same length vertices of cells must be drawn with a plus symbol code and and code horizontal edges of cells must be drawn with a hyphen code and code vertical edges of cells must be drawn with a pipe symbol code and and code every cell must be at least one character high and one character wide label cells with a single letter watch for wayward or missing code and and code symbols unexpected behavior may ensue the configuration options in the function s second object argument are as follows the code output and code option takes the following possible values code node and code default the function returns the table as a htmltableelement node code html and code the function returns the table s html as a string code raw and code the function returns the table as a raw javascript arrays objects for example to prompt the html string of the table alert fox maketable and and  and a and  and and   output html  the code raw and code output mode returns an array of table rows which in turn are arrays of cell objects containing properties describing the cells row and column spans content and styling if you wish to alter these objects and then resubmit them to fox to have them turned into an htmltableelement you can use the code fox totableelement and code function the code map and code option allows you to patch strings elements or views into your table layout pass in an object with properties of the same name as the letters you ve placed in your ascii art the values of these properties can be strings dom elements or any object that has an code el and code property such as a backbone js view for example document body appendchild fox maketable and and and  and a and b and  and and and  and c and d and  and and and   map a the letter a  b document createelement img  c id myview  el document createelement img   using an object in the same way as for the map above you can also add specific styles to the tables cells this allows you to have control over the layout s dimensions and colors document body appendchild fox maketable and and and  and a and b and  and and and and  and c and d and  and and and  and and and  and and and and  and and e and f and  and and and and   debug true map a toolbar  b menu  c sidebar  d canvas  e button  f button  styles table border collapse collapse  a width   background ccc  b width   c width   background   d height px  width   e width   f width    use the string based versions of css property names as the objects properties for example to specify a maximum width use code max width and code rather than code maxwidth and code you can also set a code table and code property which sets style on the outer table as a whole and you can also specify a special property code fixed width and code which will generate real code max width and code  code min width and code and code width and code properties to all have that same value as it says on the tin it s off by default but set to code true and code to log to the console the variables used while processing the table s art as well as the outputted raw object not really much use to anyone except me for when things don t work properly the library is developed against chrome and i m sure contemporary webkit browsers will be fine the library doesn t do anything very clever except use code foreach and code for a few of its loops so certainly javascript   or polyfills are required for that drop me a pull request if you re feeling nostalgic for less abled browsers
1155569, examples are organized by chapters so you can follow along
1509208, an implementation of operational transformation in javascript node    requirejs   
1782988, cracking the coding interview python  i ve been reading the book cracking the coding python all of the book s solutions are in java
2007575, bpm browser packager manager bpm is a system for managing resource dependencies for client side browser applications it is inspired by npm but has better support for the unique needs of browser applications including supports multiple module loaders i e you can choose requirejs spade or even no loader at all handles non js assets such as css and images support for scss and sass coming soon can autocompile other languages such as coffeescript bpm also implements a basic build system that generates cache optimized finally bpm is based on the rubygems library although you don t need to know any ruby to use bpm this means that we also benefit from nearly  years of lessons learned to jump start bpm once you have bpm installed see below  create a demo app like so bpm init myapp cd myapp then add jquery as a dependency bpm add jquery this will create a file called assets and bpmlibs which will include jquery you can then create an index html and reference that js everytime you add a dependency it will be based into this js file note that there is also a css file at assets and bpmstyles css we do the same thing there
1848535, craftyslide a tiny jquery slideshow plugin  craftyslide is a tiny just kb slideshow built on jquery craftyslide aims to be different by providing a simple no frills method of displaying images packaged into a small clean and efficient plugin li and li simply create a div which houses a ul containing your list of images add an optional title to create captions  then include the supplied js and css files that s all there is to it basic initialization script slideshow craftyslide and script set a custom width for your slideshow set a custom height for your slideshow select whether to display pagination or not setting to false hides pagination and enables auto mode define the fade animation speed of slides used during auto mode pagination set to false defines the delay between each slide being shown slideshow craftyslide width  height  pagination false fadetime  delay  copyright c  crafted pixelz licensed under the mit license
1919600, spooky is a lightweight and dead easy to use restful request handler for library and provides request handling similar to the helloworld erl module helloworld behaviour spooky export init and  get and  init port  get req req ok hello world get  smashingpumpkins throw  i m a teapot get req name req ok hello world and and name and and make erlc pa ebin and helloworld erl erl pa ebin and pa deps and and ebin   spooky startlink helloworld ok     spooky stop true modular split your web application up into different reusable modules say for user management mnesia administration or login logic restful request handling and routing use get and post and put and delete and head methods for a clean seperation of your http api use pattern matching to handle requests to different urls middlewares use chained middlewares to preprocess the request before it arrives at your handlers and modify or abort it on the fly erlang dead simple interfacing to your genservers  genfsms and genevents write documentation scratching an itch spooky is as simple as it gets you re left to deal with everything else than request handling if this is not what you are looking for and need things like orm support templating etc you should look at other frameworks about erlang
434917, sfslite is a fork of sfs originally written by randy rizun it is a file system that stores all data in an amazon s bucket it allows access to a bucket as though it were a local file system it is useful for publishing static web data that can be read easily by a browser or for backing up private or shared data this fork is intended to work better when using rsync to copy data to an s mount quick start  start by installing the dependencies in ubuntu linux the following commands should do the trick sudo apt get install build essential pkg config libxml dev sudo apt get install libcurl openssl dev libsqlite dev sudo apt get install libfuse libfuse dev fuse utils next download the latest source git clone git and and github com and russross and sfslite git go into the source directory and build it cd sfslite if there are no errors then you are ready to install the binary sudo make install this copies the executable into and usr and bin where it is ready to use i suggest also creating a directory to hold the attribute cache databases sudo mkdir p and var and cache and sfs it is also convenient to put your amazon credentials in a file i use vim  so the command would be sudo vim and etc and passwd sfs substitute the name of your favorite editor gedit is an easy choice if you do not know what else to use inside this file put your access key and your secret access key log in to your amazon s account to obtain these in this format accesskey secretaccesskey to protect your secret key make the file only accessible by root sudo chmod  and etc and passwd sfs mounting a file system  you need a mount point for your file systems this is just an empty directory that acts as a place to mount the file system sudo mkdir and mnt and myfilesystem you only need to create this once put this directory where mountpoint is specified below starting with an empty bucket or one that you have used with other versions of sfs already  mount it like this sudo sfs bucket mountpoint o attrcache and var and cache and sfs o allowother this mounts the file system with the attribute cache database in and var and cache and sfs and allows all users of the local machine to use the mount you should now be able to use it like a normal file system subject to some limitations discussed below to unmount it make sure no terminal windows are open inside the file system no applications have files in it open etc  then sudo umount mountpoint to simplify mounting in the future add a line to and etc and fstab substituting your editor of choice for vim  do sudo vim and etc and fstab and add a line of the form sfs bucket mountpoint fuse attrcache and var and cache and sfsallowother   with that in place you can mount it using sudo mount mountpoint and unmount it using sudo umount mountpoint this will also cause it to automatically mount at boot time attribute cache  if the attribute cache ever gets out of sync simply delete the database file this is and var and cache and sfs and bucketname sqlite if you set things up as recommended if you are accessing a single bucket from multiple machines you must manage the cache yourself you can either delete the file each time you switch machines or you can copy it over if you do the latter you should unmount the bucket before copying the file and before copying it into its new location you should only have a bucket mounted from one place at a the database file compresses very nicely compressing it and copying it to another location then decompressing it is a viable solution when starting from a cold cache you can just start using the system and it will gradually build the cache up if you are using it interactively it will be really slow at first so i recommend priming the cache first just do find and mnt and myfilesystem and go do something else while it runs this will scan the entire mount and load the attributes for every file into the cache from that point forward using it interactively should be much more pleasant using rsync  when using rsync to upload data i recommend using the a option to sync file times do recursive uploads etc and the w option w instructs it to always copy whole files without it rsync will download the old version of a file and try to be clever about updating it since this all happens in the local cache you do not save much but you do incur the cost of downloading it when it transfers a whole file it just deletes the old version for example i typically set it up so that the directory i want to upload has the same name as the mount point say myname if the source is and myname and the mount point is and mnt and myname  then i use a command like this rsync avw delete and myname and mnt and the delete option tells it to delete files in the target that are not in the source so be careful with this option an alternative is this rsync avw delete and myname and and mnt and myname and beware that this means something slightly different this syncs all of the files in and myname and  but does not sync the directory itself as a result files missing from and myname and will not be deleted from and mnt and myname and s s eventually consistent semantics can lead to some weird behavior rsync will sometimes report a file vanishing and other problems wait  seconds or so and try again and the problem will usually fix itself as an example sometimes when you delete a file it still shows up in directory listings but reports a file not found error when you try to access it this also happens frequently when you do a rm r over a medium to large directory structure it correctly deletes the files then fails to delete the directory this is because s is still reporting the odd file as existing in a directory listing but it has already been deleted wait for a few tens of seconds and it should fix itself rsync is nice because you can just repeat the command and it will only worry about the things that did not work the first time with the attribute cache only a few requests are necessary to look up directory listings  so repeated rsync operations are pretty the complete list of supported options is accesskeyid specify the amazon aws access key no default secretaccesskey specify the amazon aws secret access key no default acl specify the access control level for files default public read for files with public read permissions private for everything else retries specify the maximum number of times a failed and timed out request should be retried in addition to the initial attempt default  connecttimeout specify the timeout interval for request connections default  readwritetimeout specify the timeout interval for read and write operations default  url specify the host to connect to default of http to get secure transfers specify the host url should contain the bucket name as in a virtual host style url or put s in the host string and the bucket name will be substituted in for you attrcache specify the directory where the attribute cache database should be created and accessed default current directory dircache enable and disable directory caching with this enabled all metadata queries will be confined to the local cache if the file system believes it has up to date entries for every file in the directory when creating a new file or trying to open a file that does not exist this saves a round trip to the server to decide if a directory is completely represented it checks each time a readdir operation is invoked to see if every file the server names has a metadata cache entry future readdir operations are also satisfied by the cache default true dircachereset force the list of completely cached directories see dircache above to be reset at file system mount time default true writebackcache specify the directory where the write back cache temporary files should be created default and tmp files are unlinked as soon as they are created so you will not generally see anything listed in the given directory but the storage of that file system will still be used writebackdelay specify the number of seconds a closed file should be cached before changes are uploaded to s default  changes from sfs  this fork has the following changes sfslite has a write back cache that holds open files and files that were closed within the last few seconds this absorbs many of the requests that otherwise take a round trip each to s for example when rsync creates a file it creates it with a temporary name writes the data sets the mode sets the owner sets the times and then moves it over to its permanent name without the write back cache each of these operations requires a round trip to the server with it everything happens locally until the final version is uploaded with all of its metadata to force a sync do an ls in the directory of interest the readdir call does a sync on every file in the directory before retrieving the directory listing file metadata is cached in a sqlite database for faster access file systems do lots of getattr calls and each one normally requires a head request to s caching them locally improves performance a lot and reduces the number and hence cost of requests to amazon the original sfs has the beginnings of in memory stat caching but it does not persist across mounts for large file systems losing the entire cache on a restart is costly directories can be renamed this requires renaming all of the directory s children grandchildren etc  so it can be a slow operation but it works files are all copied at the server not by downloading them and re uploading them the same as for metadata updates regular renames and links directories with open files this includes any descendents cannot be renamed open files cannot be renamed either readdir requests do not send off file attribute requests the original code effectively issues a getattr request to s for each file when directories are listed the cache was not consulted but the results were put in the cache this behavior made listing directories ridiculously slow it appears to have been an attempt to optimize by priming the cache that backfired it wouldn t be the first time that a cache optimization has made things slower overall the mime type of files is reset when files are renamed this fixes a bug in sfs that is particularly devastating for rsync users rsync always writes to a temporary file then renames it to the target name without this fix mime types were rarely correct which confused browsers when looking at static content on an s archive by default acls are set based on the file permission if the file is publicly readable the public read acl is used which permits anyone to read the file including web browsers if not it defaults to private  which denies access to public browsers setting the defaultacl option overrides this and sets everything to the specified acl md sums are computed for all uploads and downloads s provides md hash values on downloads and verifies them on the received data for uploads ensuring that no data is corrupted in transit the usecache option has been removed an on disk cache is not currently supported except for the short term write back cache for afs style caching which is more or less what sfs uses  a seperate caching layer would be more appropriate dependencies  in order to compile sfslite you will need the following libraries kernel devel packages or kernel source installed that is the same version of your running kernel libxml devel packages curl devel packages or compile curl from sources at curl haxx se and use   x gcc gcc c and and pkgconfig fuse   x fuse kernel module installed and running rhel  x and centos  x users read below openssl devel    sqlite  these packages may have additional dependencies for ubuntu users the commands to install everything you need are given in the quick start guide for other users use your packaging system to install the necessary dependencies most compiler errors are due to missing libraries debugging  sfslite logs error and status messages to and var and log and syslog to make it display more messages you can enable some debug flags debug logs each vfs call that is made e g  getattr  readdir  open  read  write  etc debugwire logs each time it contacts s this can be useful for seeing how well the cache is working debugcache logs information about the write back cache this is fairly chatty output all of these messages go to and var and log and syslog  so open a terminal tail f and var and log and syslog to enable these flags add the following to the cppflags line in the makefile ddebug ddebugwire ddebugcache then do a make clean and another make and make install to rebuild it with the caching options the write back cache  when a file is opened it is transferred from s to a local file this is created in and tmp and immediately unlinked so it is not visible in the file system and will automatically be deleted when closed or if the program crashes all read and write operations take place on the cached copy of the file it is held in the cache and not synchronized with the server except in some special cases discussed below until the file is closed and has not been touched for  seconds metadata updates reset the clock so chmod and chown operations keep the item cached as a file is normally only flushed to the server when it is closed and has been idle for  seconds this covers file renames and deletes as well this is designed for rsync  which writes the data to a temporary file then sets its mode ownership and times then renames it to its final name all of this happens in the cache and the final version of the file complete with metadata is pushed to the server in one transfer readdir operations are never cached so they have the potential to pierce the abstraction and observe unsynced operations to prevent this all files in the cache are synced before a readdir operation this is the simplest way to force a sync and make sure all of the data has been written out just run ls in any directory inside the mounted file system rmdir operations also force a sync for the same reason non empty directories cannot be removed so a sync is performed first to make sure any recent deletes have been pushed to the server all of this means that operations like rsync will often be very fast for the first  seconds or so and then suddenly slow down the whole server uses a big ol lock for synchronization so only a single operation can be happening at once when the thread that flushes the cache obtains the lock it holds on to it until the cache has been cleared to the  second limit this means that while it is catching up nothing else happens preventing the backlog from getting too long as a result the server is usually within about  or  seconds of being current with the cache a sync is also forced when the file system shuts down normally to observe how all of this works enable all of the debugging logs see the debugging section known issues  sfslite works fine with s storage however there are couple of limitations file permissions are not enforced files are always created as the user who mounts the file system normally root  but anyone can change anything hard links are faked they are implemented by doing a simple server side copy this is great for most cases notably when using hard links as a way to move a file to another directory  but it is not the same as a real hard link if a file is open when it is linked the two versions actually do share storage and updates  but only until one of them is flushed from the cache i do not recommend relying on this behavior this note comes from the original sfs centos  x and rhel  x users if you use the kernel that shipped with your distribution and didn t upgrade to the latest kernel redhat and centos gives you might have a problem loading the fuse kernel please upgrade to the latest kernel    or above and make sure fuse kernel module is compiled and loadable since fuse requires this kernel module and sfs requires it as well sfslite is mainly intended for publishing data to s it does not provide general local caching nor services like encryption or compression some of these issues can be addressed with existing systems encryption if you want file by file encryption as opposed to encrypting an entire block device  you can plug in encfs with sfslite this acts as a layer on top of any other file system and provides encryption services caching systems like fs cache and cachefs promise to do the same thing for caching you mount sfslite then you mount another layer on top of it that provides caching compression fusecompress works on the same basic model as the others compressing data for a file system that does not have direct support for compression i have not tried these solutions i just googled for them  and would welcome reports about whether or not or how well they work source code tour  there are six main source files  common cpp utility functions and global variables  fileinfo cpp a simple class to hold file attributes  attrcache cpp the sqlite attribute caching this cache is intended to reflect the current state of the server and it knows nothing about the write back cache  srequest cpp wire requests to amazon s using libcurl srequest is ignorant of any caching and is purely concerned with forming requests and gathering responses  filecache cpp the write back cache this cache draws from and updates the attribute cache when necessary and issues s requests when needed in that sense it sits right below the main file system operations layer  sfs cpp the fuse file system operations along with startup and shutdown code this code depends on and knows about everything else sfslite retains the original gpl v license that sfs uses see the file copying for details
982872, this project evolved from a couchapp that stored pubsubhubbub notifications in couchdb into a node js app that actively fetches feeds and stores them in couch original concept by tylergillies tyler gillies architecture a parent node process couchpubtato js monitors a database on a couchdb for any documents that have both a feed and db attribute anytime it sees a matching document it will spawn a worker that will fetch the url contained within the feed attribute and save each item into the local couchdb specified in the db field currently it only works on rss and atom feeds but it is using jsdom which is capable of html parsing so in a future version you will be able to include a javascript function to execute on the fetched dom to try out install latest node and npm start couchdb clone this repo npm install request npm install jsdom git submodule init git submodule update then look in the articles database on couch the mit license copyright c  max ogden and tyler gillies permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
395033, simple array based dsl for request routing regular expression route matching including passing of captured groups to route handler simple cookie and session support this hello world app listens for http requests on port  var nerve require and nerve var hello and  function req res res respond hello world nerve create hello listen  this sample application makes use of nerve s regular expression uri path matching to pass a name parameter from the uri into a handler function this can be extended to any number of named arguments in the handler function it also makes use of request method matching the first matcher will only match get requests the second will match any request method the application stores the user s name in the session so that it can be used in subsequent responses var posix require and posix var nerve require and nerve  get nerve get and and define an application using request matcher and handler pairs var app and and this handler will only respond to get requests get and and hello and w and and  function req res name and and the session is available on every request it currently and and lasts for the browser session but will soon be configurable req session name name and and respond takes a string and provides sensible defaults and and content type text and html content length string length res respond hello and name and and and this handler will respond to any request method and and goodbye and  function req res var name req session name var message goodbye and name and and i hardly knew thee and and and respond takes an object specifying content and headers and and and uses sensible defaults if not supplied res respond content message headers content type text and plain and abc and username and postid  function req res params and and params username string postid string  and and create and serve the application with  second session duration nerve create app sessionduration  listen 
816131, slowgrowl  rails  plugin which surfaces slow code paths in your rails application by integrating with the new notifications api in rails  with your system growl osx or libnotify linux notification service by default any activity which takes longer than one second will generate a growl alert with the description of the action time taken and other meta data a preview in action integrating with rails   in your gemfile group development do gem slowgrowl that s it optional configuration for slowgrowl  in your config and environments and development rb config slowgrowl warn  growl any action which takes ms s config slowgrowl sticky true make really slow x warn alerts sticky resources 
2149490,  and x and and and x and  and  and   and and    and and    and and and    and and  and  and and and    and  and lodis   and and and   and  and and and   and   like redis and and and      and but in a browser and and and     and and and      and and and      and and and and     and and and      and and    and and   github com and elcuervo and lodis and and  and and and  redis   set  get  del  exists  expire  dbsize  expireat  keys  append key value  auth password  bgrewriteaof  bgsave  blpop key key timeout brpop key key timeout brpoplpush source destination timeout config get parameter config set parameter value config resetstat debug object key debug segfault decr key  decrby key decrement  discard echo message  flushall  flushdb  getbit key offset getrange key start end  getset key value  hdel key field field  hexists key field  hget key field  hgetall key  hincrby key field increment  hkeys key  hlen key  hmget key field field  hmset key field value field value  hset key field value  hsetnx key field value  hvals key  incr key  incrby key increment  lastsave lindex key index  linsert key before and after pivot value  llen key  lpop key  lpush key value value  lpushx key value  lrange key start stop  lrem key count value  lset key index value  ltrim key start stop  mget key key  monitor move key db mset key value key value  msetnx key value key value  multi object subcommand arguments arguments persist key  ping  psubscribe pattern pattern publish channel message punsubscribe pattern pattern randomkey  rename key newkey  renamenx key newkey  rpop key  rpoplpush source destination  rpush key value value  rpushx key value  sadd key member member  save  scard key  sdiff key key  sdiffstore destination key key  select index  setbit key offset value setex key seconds value  setnx key value  setrange key offset value  shutdown  sinter key key  sinterstore destination key key  sismember key member  slaveof host port slowlog subcommand argument smembers key  smove source destination member  sort key by pattern limit offset count get pattern get pattern asc and desc alpha store destination spop key  srandmember key  srem key member member  strlen key  subscribe channel channel sunion key key sunionstore destination key key type key  unsubscribe channel channel unwatch watch key key zadd key score member zcard key zcount key min max zincrby key increment member zinterstore destination numkeys key key weights weight weight aggregate sum and min and max zrange key start stop withscores zrangebyscore key min max withscores limit offset count zrank key member zrem key member zremrangebyrank key start stop zremrangebyscore key min max zrevrange key start stop withscores zrevrangebyscore key max min withscores limit offset count zrevrank key member zscore key member zunionstore destination numkeys key key weights weight weight aggregate sum and min and max store expirations within lodis itself to avoid expiration dates on reload should handle types in a different way custom types to match redis sync with redis via http
657217, rails  rspec fabrication or factory girl haml and jquery  easily generate a rails  application with rspec factory girl haml and jquery in one line rails new myapp skip bundle j t m use this generator file instead rails new myapp skip bundle j t m use either of the following generators instead rails new myapp skip bundle j t m rails new myapp skip bundle j t m use this generator file rails new myapp skip bundle j t m we love rvm  so the application has an rvmrc generated to specify a gemset generators  we use the factory girl and haml rails  generators mdash the generators for rspec and fabrication are packaged within their respective gems the factory girl and haml generators are from the  we use the jquery rails generator to pull in the latest and greatest jquery into the app we love git  so the application has a git repo initialized with all the initial changes staged after the application has been generated there are a few final command to finish the install check the output note on patches and pull requests  fork the project make your feature addition or bug fix add tests for it this is important so i don t break it in a future version unintentionally commit do not mess with rakefile version or history if you want to have your own version that is fine but bump version in a commit by itself i can ignore when i pull send me a pull request bonus points for topic branches
1936923, sproutcore ui is the next generation user interface layer built specifically for sproutcore   it provides a standardized set of components which can be used to build a consistent user experience that scales to different form factors  install bundler via gem install bundler  run bundle install to pull in ruby dependencies  gem install spade v      to run the development server spade update spade preview  install bundler via gem install bundler  run bundle install to pull in ruby dependencies  run bundle exec rake to build sproutcore ui the build will be placed in the dist directory
619061, phonegap windows  phonegap windows is just like phonegap on mobile phones except that it is for the desktop makes sense right there are definitely some other similar solutions out there but i figured we might as well try it out with the phonegap javascript apis getting started  this uses an awesome open source implementation of webkit on windows called webkit net that can be downloaded from here you will want to get the version   source and fix the link in the provided visual studio net  solution file to get it working once you get past that it is pretty sweet you can start building native windows apps with canvas community  contribute  fork commit push and send us a pull request at phonegap and phonegap the mit license  copyright c    rob ellis brock whitten brian leroux joe bowser dave johnson shazron abdullah jesse macfadyen filip maj ryan willoughby nitobi permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1065440,  way iscroll v  beta   way iscroll lets you swipe through a virtually infinite number of vertically scrollable pages
551713, still experimental feel free to play around so what is the issue with rack and async callback currently there are two ways of triggering a async responds the first is to throw async  the latter to return a status code of  even though thin and ebb do disagree on that opposed to what others say i would recommend using throw  as it simply skips middleware not able to handle async also it works on all servers supporting async callback  thin ebb rainbows and zbatery  about the same and copes better with middleware that is unable to handle an async respond that s the issue with async callback most middleware is not aware of it let s say you got an app somewhat like that class farnsworth def whenthereisgoodnews thread new do well actually you want to hook into your event loop instead i guess waitforgoodnews yield end end def call env whenthereisgoodnews do env async callback call  content type text and plain  good news everyone end throw async end ok now since this app could end up on reddit you better prepare yourself for some heavy traffic say you want to use the rack deflate middleware so you set it up in your config ru and add the link to reddit yourself the next day you get a call from your server admin why don t you at least compress your http response well what happened the problem is that by sending your response via env async callback call you talk directly to your web server i e thin  bypassing all potential middleware well how do you avoid that simple by just using middleware that plays well with async callback however most middleware does not play well with it in fact most middleware that ships with rack does not play well with it that s what i wrote this little library for if you load async rack it modifies all middleware that ships with rack so it will work just fine with you throwing around your async how does that work simple whenever necessary async rack will replace async callback with an appropriate proc object so it has the chance to do it s response modifications whenever you feel like answering the http request note this library only fixes the middleware that ships with rack not other rack middleware however you can use the included helper classes to easily make other libraries handle async callback this middleware now works well with throw async rack chunked rack commonlogger rack conditionalget rack contentlength rack contenttype rack deflater rack etag rack head rack logger rack runtime rack sendfile rack showstatus no changes where necessary for rack cascade rack config rack directory rack file rack methodoverride rack mime rack nulllogger rack recursive rack reloader rack static rack urlmap rack lint might not check async responses rack showexceptions might not show exceptions for async responses rack lock might raise an exception there are three types of middleware example rack methodoverride such middleware already works fine with async callback also from our perspective middleware either creating a own response and not calling your app at all or calling your app without modifying neither request nor response falls into this category too such middleware can easily be identified by having app call env or something similar as last line or always prefixed with a return inside the call method example rack etag here it is a bit tricky essentially what you want is running call again on an async callback but replace app call env with the parameter passed to async callback well apparently this is the most common case inside rack so i created a mixin for that ok rack fancystuff does currently not work with async responses require rack and fancystuff class fixedfancystuff asyncrack asynccallback fancystuff include asyncrack asynccallback simplewrapper see below to get an idea what actually happens here example rack runtime let s assume there is some not so async middleware module rack class fancystuff def initialize app app app end def call env preparefancystuff env result app call env performfancystuff result end def preparefancystuff env  end def performfancystuff result  end end what happens here is the following we will subclass rack fancystuff and then set rack fancystuff fixedfancystuff asyncrack asynccallback makes sure we don t screw that up class fixedfancystuff asyncrack asynccallback fancystuff this method will handle async callback def asynccallback result pass it on to thin and ebb and other middleware super performfancystuff result end rack fancystuff fixedfancystuff true in general place a require async rack before setting up any middleware or you will end up with the synchronous version please keep in mind that it only fixes middleware that ships with rack read it works very well with sinatra with rails and merb not so much in your config ru require async rack require your app use rack somemiddleware run yourapp in your application file require async rack require sinatra get and do do some async stuff here in your config and environment rb  add inside the rails initializer run block config gem async rack in your gemfile  add gem async rack
757385, sunspotmongoid a sunspot wrapper for mongoid gem install sunspotmongoid class post include mongoid document field title include sunspot mongoid searchable do text title end for rails add a gem to gemfile as following gem sunspotmongoid add gems to gemfile as following gem sunspot gem sunspotrails and install sunspotmongoid as rails plugin rails plugin install git and and github com and jugyo and sunspotmongoid git copyright copyright c  jugyo see license for details
390179, install the gem gem install viewtastic load the gem in your environment rb file config gem viewtastic my presenters go into the app and presenters directory of the application so this is added to the loadpath in rails by default by viewtastic a presenter inherits from viewtastic base and should use the presents method to declare presented objects class commentpresenter viewtastic base presents comment this gives you several magic methods all attributes of comment with the prefix comment for instance commentbody  commentpost  commentcreatedat commentdomid is the same as calling domid comment in a view if you want to skip the prefix and just have the attribute name you can declare presents comment body createdat and you get presenter body and presenter createdat assuming you have a comment model and your controller has a helper method currentuser that returns the user currently logged in you could make the following presenter to help in presenting products class commentpresenter viewtastic base presents comment def domid commentdomid end def owner controller currentuser comments include comment end def links returning do and links and links linkto edit  edit comment if owner links linkto reply  new comment if controller currentuser end end eachwithpresenter is available on any array  and it is designed to reuse a single presenter instance and pass every element in the array as the presented object in your view maybe posts and show html erb post comments eachwithpresenter commentpresenter comment do and comment and li id comment domid comment body comment links and li end and ul copyright c  istvan hoka released under the mit license
1396518, a lightweight bbs author rei chloerei gmail com ruby    mongodb    and redis   and ruby on rails    gems dependencies see gemfile assume you have installed mongodb and redis git clone git and and github com and chloerei and campo git cd campo and bundle install cp config and campo example yml config and campo yml cp config and mongoid example yml config and mongoid yml edit config and campo yml edit config and mongoid yml make sure mongodb is running rake db seed rails s queue rake environment resque work this project is low degree of completion db schema is changing and not well migration support not suggest used in production environment but if you want there are some notes rake secret copy the output string and set secret token column in config and campo yml edit config and mongoid yml change production params cd and path and to and yoursource git pull backup mongo data first mongodump o and path and to and yourwanttodumpmongo run migration rake db migrate release under mit license
487458, pylibs is a collection of python packages for use in other projects
885580, an actors library for clojure modelled after erlang otp plaform external dependencies  jobim has two dependencies directory service zookeeper messaging system rabbitmq and zeromq rabbitmq or zeromq both can be used as the underlying messaging solution in order to use jobim zeromq java bindings must be installed including the native jni library basic usage  a path to a configuration file must be provided the path must include the name of the node the selected messaging mechanism and configuration options for rabbitmq zeromq and zookeeper this is a sample configuration file rabbitmq used node name remote test messaging type rabbitmq messaging options host     zookeeper options      timeout  this is a configuration file for zeromq node name remote test messaging type zeromq messaging options protocol and port tcp and and      zookeeper options localhost  timeout  the nodes function returns a map with all the node names and their identifiers the function resolve node name can be used to retrieve the indetifier of a node provided its name use jobim bootstrap node node config clj bdedbefa nodes osx eacadcfbccf  linux bdedbefa we can define an actor using any clojure function and the spawn function a sample echo actor defn ping  loop continue true msg receive cond match exit msg recur false msg exception msg throw exception str ping actor with pid self received exception from data msg do send from data recur true receive creation of the actor def pid spawn examples and ping clojure core and pid pid eacadcfbccf  the repl or any other thread can become an actor calling spawn in repl from the code being executed in the thread spawn in repl eacadcfbccf  send pid self  receive this couple of function can be used to send and receive messages to and from actors the pid of the actor must be provided by default any serializable java object can be send and retrieved send pid self java util date receive date fri sep     cest  used to execute a function call in a remote node they can be used to spawn remote actors and retrieve the pid using the blocking variant nodes osx eacadcfbccf  linux bdedbefa resolve node name linux bdedbefa rpc blocking call resolve node name linux clojure core and and      spawning a remote actor def pid rpc blocking call resolve node name linux jobim and spawn jobim examples actors and ping clojure core and pid pid bdedbefa  send pid self  receive an actor can be registered with a globally available name using the register name function all registered names can be retrieved with the registered names function to transform an actor name into a pid the resolve name function can be used def ping spawn examples and ping clojure core and ping ping eacadcfbccf  register name ping ping registered names ping eacadcfbccf  resolve name ping eacadcfbccf  send resolve name ping self  receive two actors can be linked using the link function from that moment onwards if one of the actors dies because of an exception or the node where it is being executed becomes unavailable due to a network partition the other actor will receive a special message containing a signal self eacadcfbccf  def pid spawn examples and ping clojure core and pid link pid eacadcfbccf  eacadcfbccf   eacadcfbccf  eacadcfbccf  the ping actor will throw an exception if receives a message containing the exception string send pid exception receive signal link broken from eacadcfbccf   cause class java lang exception ping actor received exception to avoid the limitation on the number of java threads that can be created in a single java vm an evented actor can be created not attached to a single thread functions react loop and react can be used as subtitues of loop and receive in the code of the evented actor the evented actor must be started with the spawn evented function this is an example of the evented actor equivalent to the previously shown echo actor defn ping evented  let name test evented react loop c  react msg cond match exit msg false exception msg throw exception ping actor received exception from data msg do send from str actor name says data c recur inc c to run the tests follow the next instructions edit the test node clj file inserting the right configuration edit test and jobim and test and jobim clj and select the right communication mechanism defonce messaging to test rabbitmq start the relevant services zookeeper and rabbitmq and zeromq start the test node that will execute the test node clj configuration java cp jobim    snapshot standalone jar djava library path and usr and local and lib jobim main test node clj jobim node started node name remote test messaging type rabbitmq messaging args host     zookeeper args      timeout  clojure core run the tests using lein test copyright c  antonio garrote distributed under the lgpl
1440773, mustang is ruby proxy library for awesome google v javascript engine javascript integration testing suite which contains more than  steps and running time more that  hours i think that s enough there is lot of different ways to handle headless testing but they all have lot of issues as well they are super slow selenium watir  or they are not working with ruby   johsnon  or they requires tricky external stuff culerity and celerity zombie our goal is to create fast javascript engine working fine on all popular ruby implementations   x   x ree rubinius  and make it core element of headless virtual browser for testing purposes of course integrated with capybara and cucubmer to the authors you can of course ask why we wrote library which seems to be very similar to therubyracer yeah it seems but there are a lot of differences here is short comparison of therubyracer and mustang similarities both are using similar integration with ruby s garbage collector actually mustang s code which handles that references is just improved version of therubyracer s code check the tt ext and v and vref cpp and tt both are reflecting js objects to ruby and vice versa mustang reflects all javascript objects and values properly properly means all values from within v are reflected to tt mustang v and tt objects once reflected ruby object and vice versa is always the same object in ruby all reflected v objects acts exacltly the same as ruby natives for example you can deal with mustang v array exactly the same as with native ruby arrays eg they are comparable with ruby objects etc functions are reflected more accurately ruby objects methods are represented properly classes are converted to v function templates so you can deal with them as with prototypes different approach to deal with contexts compiling js scripts and exceptions handling support for regexp reflections way more friendly ruby api a very thorough test suite over  tests passing on all ruby versions clean codebase less magic fully documented lower memory usage and the most important like i said before mustang is used as core element of our bigger idea so it have to exactly fit to our needs before you install mustang gem make sure you have scons installed sudo apt get install scons on debian sudo pacman s scons on archlinux brew install scons on mac using rubygems gem install mustang manually git clone git and and github com and nuhatch and mustang git cd mustang rake compile rake install for now it s only proof of concept it implements very simple evaluation of javascript code require mustang cxt mustang context new cxt eval hello and world hello world cxt eval var a  cxt eval a and   cxt puts method puts cxt eval puts a displays  on the screen cxt a  todo coming soon fork the project make your feature addition or bug fix add tests for it this is important so i don t break it in a future version unintentionally commit do not mess with rakefile version or history if you want to have your own version that is fine but bump version in a commit by itself i can ignore when i pull send me a pull request bonus points for topic branches copyright c  kriss nuhatch kowalik see license for details
841885, this smtp client helps you send email safely and easily using node js it supports tls and auth login so you can send through gmail it also implements sanity checks to safeguard against header injection attacks use npm to install npm install mail the mail class encapsulates connection settings and can be used as a safe high level mailer var mail require mail mail host smtp gmail com  username me gmail com  password password use the mailer to send messages mail message from sender example net  to recipient somewhere org  subject hello from node js body node speaks smtp send function err if err throw err console log sent create a new mailer that can be used to send messages common options and host server hostname and username user for server authentication and password password for server authentication other options and secure true  false  or crypto credentials default true and port server listens on this port default  or  and domain the domain of the sender default os hostname and mimetransport bit or bitmime default bitmime begin a mailtransaction the headers object may contain any any smtp headers when the message is formatted email addresses are validated header names are title cased and header values escaped to prevent injection a date header is automatically added an email address may be an array a single address or a string with command separated addresses individual addresses may be bare or in the format display name name example net add a body to a mail transaction long lines are automatically connect to the server transmit the message and quit the callback should be in the form function err message upon success err is null and message is set to the message object that was sent to the server node mail has been tested against qmail  and gmail  using node version v   a working subset of these rfcs are supported there is not currently direct support for multipart messages or attachments although node mail will send messages in this format if they re build manually copyright c   ben weaver lt ben orangesoda net gt all rights reserved redistribution and use in source and binary forms with or without modification are permitted provided that the following conditions are redistributions of source code must retain the above copyright notice this list of conditions and the following disclaimer redistributions in binary form must reproduce the above copyright notice this list of conditions and the following disclaimer in the documentation and and or other materials provided with the distribution neither the name of the organization nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission this software is provided by the copyright holders and contributors as is and any express or implied warranties including but not limited to the implied warranties of merchantability and fitness for a particular purpose are disclaimed in no event shall copyright holder be liable for any direct indirect incidental special exemplary or consequential damages including but not limited to procurement of substitute goods or services loss of use data or profits or business interruption however caused and on any theory of liability whether in contract strict liability or tort including negligence or otherwise arising in any way out of the use of this software even if advised of the possibility of such damage
1046667, a lightweight e commerce framework developed with the kohana php framework it s main goal is to provide an excellent starting base for you to develop e commerce applications with it s not designed to be a drop in e commerce application like magento or opencart vendo will give you a very good starting base for your e commerce application with sane schema a sane data model and easy to integrate payment classes  it will be easy to build applications with  the source code will make sense  it will be fast  it will be easy to write extensions for  development and support will be as open as possible your contributions are welcome and encouraged  it will be fully tested to ensure stability and prevent issue regression  create an issue in this project for your feature and request vendo has many parts  vendo core the core models and vendo base and exception classes  vendo acl acl classes  vendo billing billing and order models and payment gateway classes  vendo admin the admin application to manage the database for vendo  vendo application a sample e commerce application if you just want to demo the whole vendo application do  check out this repository with the recursive flag to catch all the submodules there are a few of them  install the schema run and minion db migrate from the root of the repository the schema files contains table creation for users and roles if you don t need this if you are bolting this onto an existing application  simply omit it the default admin user s login credentials are email admin example com password test  make sure the application and photos and directory is writable by the webserver if you d like to use vendo to develop your e commerce application you can omit the vendo application module and use the other four you still need the database you can use the vendo application as a starting point or for inspiration on how to build an application with vendo there is a demo  vendo application module which can base for your e commerce application if you are happy with the functionality of the stock controllers but not the views you should probably never use them as is  you can replace the view class and templates in your application to get a customized skin on top of it it is a demo application this is meant to be a guide for you to let you see what vendo can do you are not required and are not encouraged to use it test coverage is currently sparse in both areas if you contribute code please make sure that you use tdd or bdd depending on your contribution to run the phpunit tests simply run phpunit from the root of this repository all tests should pass please file an issue if they do not pass on your system to run the behat tests run behat c test and behat yml in the root of this repository if you are using the kohana template controller put this in an extended template controller public function after this template yourbodyvariable this request response return parent after then make a templates and layout mustache file in your application directory with only this in it body if you take this method you will need to output the category links cart link and the account admin links manually this method is untested so please provide feedback here s a list of tech used to build vendo
1956210, togooglespreadsheet makes it trivial to populate a google spreadsheet with an array of ruby objects name bob  age   name john  age  togooglespreadsheet employees results in you could also use this within rails like so account all togooglespreadsheet accounts gem install togooglespreadsheet you must provide your google docs credentials optionally you can supply a default spreadsheet to use googlespreadsheet config do and c and c email user company com c password seekrit optional see note below on how to obtain a spreadsheet key c defaultspreadsheet spreadsheetkey the spreadsheet key is found in the url when visiting the spreadsheet togooglespreadsheet is simply a method defined on enumerable thus any subclasses hereof should work with togooglespreadsheet as expected e g arrays enumerable togooglespreadsheet takes two arguments module enumerable def togooglespreadsheet worksheet spreadsheet googlespreadsheet config defaultspreadsheet session googlespreadsheet login googlespreadsheet config email googlespreadsheet config password spreadsheet session spreadsheetbykey spreadsheet ws spreadsheet findorcreateworksheetbyname worksheet ws setheadercolumns self first ws populate self ws save the first argument being the name of the worksheet within the spreadsheet e g accounts  if it doesn t already exist it will be created the second optional argument is the spreadsheet key see obtaining your spreadsheet key above  if it is not supplied the default spreadsheet defined by in the configuration will be used googlespreadsheet config do and c and c email user company com c password seekrit optional see note below on how to obtain a spreadsheet key c defaultspreadsheet spreadsheetkey name bob  age   name john  age  togooglespreadsheet employees date  and  and   signups   date  and  and   signups  togooglespreadsheet signups  otherspreadsheetkey account all togooglespreadsheet accounts assert array all and e and openstructhashactiverecord base any and type and e kindof type i e anything that is kindof hash  an openstruct or an activerecord model it is easy to add support for additional types at togooglespreadsheet is released under the mit license
2627704,  consular automates your development workflow setup setup installation  install the consular gem and init gem install consular consular init this will generate a global path directory for your scripts to live in at and config and consular and also a consularc in your home directory you can customize your consular further with consularc say for example that you didn t like the default global path consular configure do and c and c globalpath and a and path and i and like and better after that you ll need to install a core so you can run consular n your desired platform cores allow consular to operate on a variety of platforms they abstract the general behavior that consular needs to run the commands some of the cores that are available are feel free to contribute more cores so that consular can support your terminal of choice to integrate core support for your consular you can simply require it in your consularc like so require consular and osx or check the readme of each individual core development setup  to begin development on consular run bundler gem install bundler bundle install the test suite uses minitest to run the test run rake test or use watchr watchr spec watchr fork the project make your feature addition or bug fix add tests for it this is important so i don t break it in a future version unintentionally commit do not mess with rakefile version or history if you want to have your own version that is fine but bump version in a commit by itself i can ignore when i pull send me a pull request bonus points for topic branches copyright c  when the singularity occurs arthur chiu see license for details
547282, jquery scrollable table plugin  this jquery plugin converts a properly formatted table having thead and tbody elements tfoot optional  into a scrollable table the tablescroll jquery plugin is a simple markup manipulation plugin it will manipulate the table create a couple of new elements and wrap everything in a div
1648966, real time image processing framework for ios sonson jp sorry japanese only dependency quartz help library
1109265, what is this  this is a stand alone package for gltools according to the opengl superbible written by the author of gltools gltools began life in the third edition of this book over time it has grown and provides a lot of shortcuts and handy tools much like the opengl utility library glu used to gltools includes a d math library to manipulate matrices and vectors and relies on glew for full opengl   support of functions that generate and render some simple d objects and manage your view frustum camera and transformation matrices gltools is incredibly useful however it is a real pain to get set up under linux the makefiles provided with the companion source code for the book all rebuild gltools from scratch and statically link it to the executable for this distribution i removed the included copy of glew and wrote some cmake files to make it easier to use with your own programs note i only tested the build process under ubuntu   if there are any issues on other platforms patches are appreciated compilation and installation  list of packages needed for compilation on ubuntu build essential g and and cmake libx dev freeglut dev libglu mesa dev libxcb dev libxext dev libxxfvm dev libxi dev libxmu dev glew utils libglew  dev to compile and install gltools cd build cmake sudo make install sudo ldconfig by default headers will be in and usr and local and include and libraries will be in and usr and local and lib
430542, slideshow  extensible mid level class that manages transitions of elements that share the same space typically for slideshows tabs and galleries features  custom transitions autoplay reverse show next slide show previous slide show arbitrary slide transitions by slide durations by slide default transitions default durations on the fly transitions  transitions out of the box  crossfade fadethroughbackground pushleft pushright pushup pushdown blindleft blindright blindup blinddown slideleft slideright slideup slidedown blindleftfade blindrightfade blindupfade blinddownfade onshow onshowcomplete onplay onpause onreverse css transitions  new in   slideshow css has a method to override js animations with css animations still experimental how to use  slideshow naturally grabs all children elements of a parent as the slides html and div most transitions require absolutely positioned slides with top and left set to  slideshow doesn t do this for you keeping it more flexible for all types of transitions slideshow width px height px overflow hidden position relative and not required slideshow will set this for you and slideshow position absolute and required for most transitions and top  and ditto and left  and ditto and width  and usually required and height  and same and javascript var slideshow new slideshow slideshow  transition fadethroughbackground  delay  duration  autoplay true slideshow can get all of the information it needs from the data slideshow attribute in your html and allows you to have different transitions for each slide html and div javascript var slideshow new slideshow slideshow first include the slideshow css js file you ll then want to verify if the browser supports css transitions and transforms i typically use modernizr if modernizr csstransitions modernizr csstransforms slideshow usecss browsers that support transitions and transforms will use the new css transitions instead of javascript slideshow show next slideshow show previous slideshow show  and and shows the third slide slideshow play some elements in the order of the slides each function item index item addevent click  function slideshow show index  you can create whatever transitions you need with the slideshow definetransition function slideshow definetransition flash  function data data previous setstyle display  none data next setstyle opacity   new fx tween data next duration data duration property opacity start 
1569302, launch is an application deployment framework essentially a lean set currently it is tiny but very extensible launch is for use on projects that have a package json file in the root to manage their dependencies add launch as a devdependency to your package json  eg devdependencies launch  and then do cd and path and to and project npm install since launch is built on top of jake you will need that too it s best to install jake globally so that the binary is in your path so npm install jake g the last thing to do is create a jakefile in your project root for now just put the following var share  action require launch share action to test that launch and jake are installed correctly do jake t this should output a list the of namespaced launch tasks you should be familiar with jake the default set of tasks require a little bit of project metadata in your package json  put the following info launchconf remote host name  remotepath and path and to and apps run jake launch info to make sure you ve got this right now you re ready to create some of your own tasks for deployment here is an example jakefile that i currently use var share  and and shared info between the and and jakefile tasks and the launch tasks action require launch share action and and get the launch actions and and passing in the shared var run with jake deploylive depends on setenvlive and restart which are defined in this file and launch installdeps which is provided by launch the task itself is empty the important things are its dependencies being called in order desc deploy the current branch to the live environment task deploylive  setenvlive  launch symlink  restart  function sets the optional enviroment on the shared object to live  which is used by a launch task when operating with the remote filesystem this task depends on the launch task launch info to gather the remote info desc sets the environment to live task setenvlive  launch info  function share env live a custom task of mine to restart the the site and app i use upstart this shows how to execute an arbitrary remote command with launch s action s desc restarts the server given an env task restart  function if share env action error env is not set fail action remote share info remote sudo stop site and share info name and and share env and and sudo start site and share info name and and share env function exitcode if exitcode  action notice the site service restarted action notice check manually to verify that the site is running else action error failed to restart site fail  true that s it enjoy oh and here s the obligatory screenshot the mit license copyright c  ben gourley lt benleighgourley gmail com gt permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1177380, oauthservernode is developed together with to create an oauth server using oauthservernode you need to get a connector using the oauth and server connector function this function needs three parameters a config obj containing authorizeurl end user authorization endpoint the url the end user must be redirected to to be served the authentication form processloginurl the url the authentication form will post to tokenurl oauth token endpoint the url the client will use to check the authorizationcode given by user and get a token cryptkey string encryption key used to crypt information contained in the issued tokens this is a symmetric key and must be kept secret signkey string signature key used to sign hmac issued tokens this is a symmetric key and must be kept secret grant corresponding the grant issued to an oauth client through the end user and containing the following properties clientid the client id associated with the grant userid the user id associated with the grant code the grant code the code sent to client is grant id and grant code time when the grant was issued posix time redirecturi the redirecturi associated with the grant additionalinfo json object containing arbitrary data client corresponding to an oauth client and containing the following properties id the oauth client id name the oauth client name secret the secret shared with the oauth client redirecturi the redirecting url associated with the client an authentication object providing the following functions login function to render the login page to end user in browser processlogin to process the credentials given by user this function should use the oauth and server sendgrant function once user is authenticated the returned middleware will take care of requests addressed to the oauth server using the objects and functions it was given during initialization you may want to create a resource server then the oauth and common js provides a checktoken function which might be helpful in that this function will check the token in request parameter and give you associated info or deny access to client in case of bad token
673137, you re looking at the repository of golingo the  paid word game in the swedish app store this is the full source code basking naked in all its dirty glory dig in to the code and feel free to do what you like with it we ask you kindly to play nice but the code is yours to ab use not a single line of objective c written courtesy of titanium mobile only one image ingame the rest is css magic fluid gameplay thanks to css transitions and animations all logic using pure beautiful javascript multitouch draggables using iphone touch api logic encapsulated using low pro meaning split screen mode was easy pie jquery    for development speed and sanity of developer couchdb as highscore storage with storage logic in javascript predictable randomness means replayable games all courtesy of excellent seedrandom challenges aka we dare you make it run on android make it run on webos translate to more languages add multiplayer capabilities through bonjour nodejs pusherapp or similar copyright c  krawaller mit licensed apart from dsso den stora svenska ordlistan found in resources and db and swe sqlite  copyright c  g ran andersson cc by sa  
1404886, instadrop  automatically sync your instagram photos to dropbox a demo application of the instagram real time api installation on google app engine  follow instagramapi on twitter  updates and news about the instagram api join the mailing list  did you fork this app to create something cool  contributing  here are some ways you can contribute by using alpha beta and prerelease versions by reporting bugs by suggesting new features by writing or editing documentation by writing specifications by writing code no patch is too small fix typos add comments clean up inconsistent whitespace by refactoring code by reviewing patches submitting an issue  features before submitting a bug report or feature request check to make sure it hasn t already been submitted you can indicate support for an existing issuse by voting it up when submitting a details that may be necessary to reproduce the bug including your python version and operating system ideally a bug report should include a pull request with failing specs submitting a pull request   fork the project  create a topic branch  implement your feature or bug fix  add documentation for your feature or bug fix  commit and push your changes  submit a pull request copyright  copyright c  instagram burbn inc
439016, emacs clone to support real fullscreen on osx  this is my personal emacs clone consists of several patches to improve emacs in osx system currently there s two patches in this repo  fullscreen patch  shift modifier fix patch i ve been working these fixes to git branch feature and fullscreen and fix and shiftmodifierwithime but emacs official git repository is something weird so my branches doen t merge into latest emacs mainline fullscreen patch  this patch add ns toggle fullscreen function to toggle fullscreen mode todo this fullscreen mode doesn t use official fullscreenhook feature should fix this shift modifier fix  current version of emacs   or   pretest throws keydown event directly to emacs if it was a function key or had modifiers this break some input methods outside of emacs kotoeri atok etc this patch blocks keydown when it comes with shift modifier xxx this fixes are very ad hoc should consider clearner implementation
860202, efficiency   ops middleware  a collection of useful middleware for exposing information about deployed rack applications efficiency   uses this to track distributed transactions across its ruby based service oriented architecture adds a x served by header with the hostname of the server that processed the request adds a x transaction header with a unique id for the web request adds a x revision header with the running git revision adds an endpoint of and system and revision for easily checking the running revision this can be leveraged in a post deployment sanity check to ensure the application servers restarted properly add to your gemfile gem eopsmiddleware  require e and ops and middleware install the gem bundle install create a config and initializers and opsmiddleware rb with the following rails application middleware withoptions logger rails logger do and m and m use e ops middleware revisionmiddleware m use e ops middleware hostnamemiddleware m use e ops middleware transactionidmiddleware in config ru  add use e ops middleware revisionmiddleware use e ops middleware hostnamemiddleware use e ops middleware transactionidmiddleware the information exposed by the middleware can be viewed manually with curl and will also be logged to the provided logger or stdout additionally we ve found it useful to log this information when receiving responses from rest web services revisions can be queried directly by using the and system and revision endpoint fefbabeabdbbafeeffb the current revision will be passed as an http header for other requests http and    ok content type text and html charset utf  content length  x revision fefbabeabdbbafeeffb the current revision will also be logged upon application start grep revisionmiddleware log and production log e ops middleware revisionmiddleware running fefbabeabdbbafeeffb the hostname of the system that processed the request will be passed as an http header http and    ok content type text and html charset utf  content length  x served by fulton the hostname will also be logged upon application start grep hostnamemiddleware log and production log e ops middleware hostnamemiddleware running on fulton a transaction id will be logged for each incoming request grep transactionidmiddleware log and production log e ops middleware transactionidmiddleware transaction id d f d cea add the transaction id will also be passed as an http header http and    ok content type text and html charset utf  content length  x transaction d f d cea add for sponsoring development of this gem development  to run the tests bundle install rake the mit license copyright   efficiency   llc permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the  software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided  as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
695890, appcelerator titanium mobile javascript textmate bundle mit license how to install  install textmate um duh  rename the folder to ti mo tmbundle the name of the folder doesn t really matter just so long as it has the tmbundle extension  double click  install the json ruby gem sudo gem install json  enjoy how to use the completion list contains all of the titanium and ti api the tips are context sensitive place your caret anywhere inside of a function on the same line and it ll work even inside the arguments enable this by selecting the javascript titanium mobile language in the bottom bar of textmate as soon as you hit the after typing ti it ll bring up the as you type completion list thing note if you are at the last line and click then the code completion list won t appear you must leave a blank line at the end of your document
2712916, web and null is and dev and null for the web it silently agrees with and eats up any request being verb d to it and keeps statistics of it web and null is great to use as a diagnostics end socket of any distributed system you have that works against another system sitting at an http endpoint replace any service with it in order to have a real peek at what your other services are doing web and null is extremely useful and being used for getting stats data during stress testing a complex system via npm it is preferrable but not must to run globally sudo g sudo npm install webnull g webnull web and null v   i eat your http listening on port  flushing to webnull log every  seconds alternatively if you d like to clone and run and tweak clone this repository and run npm install you should then be able to run node webnull web and null v   i eat your http listening on port  flushing to webnull log every  seconds and now just experiment here is apachebench sample output human readable debug   req total  bytes total  reqs  bytes   req s  bytes avg sample output csv webnull log   here s how help looks like node webnull help usage webnull options options h help output usage information v version output the version number d debug show when flush happens c canned response file existing file name to read a response from o output file file name to output to i interval seconds flush interval p port number port to listen on fork implement add tests pull request get my everlasting thanks and a respectable place here
2663375, a jquery plugin for capturing tags within textareas facebook and twitter style ryan probasco ryan bitdrift org supports hash tags name tags and price tags out of the box inline autocomplete similar to jquery ui autocomplete plugin reate custom tag parsing rules experimental inline tag higlighting mode jquery fieldselection js must use included version script type text and javascript function mytextarea tagmate myform submit function var tags mytextarea gettags alert tags return false   and script form id myform textarea id mytextarea and textarea and form exprs mapping of tag keys to regular expression rules example w and default tagmate defaultexprs sources mapping of tag keys to autocomplete suggestions value can be an array or a function example label mr foo value foo capturetag callback fired when tags are captured example function tag alert got tag and tag replacetag callback fired when tag is replaced example function tag label alert replaced and tag and with and label menuclass css class to add to the menu default tagmate menu menuoptionclass css class to add to menu options default tagmate menu option menuoptionactiveclass css class to use when menu option is active default tagmate menu option active highlighttags experimental enable at your own risk highlights tags by placing a div behind the transparent textarea default false highlightclass css class to use for highlighted tags default tagmate highlight
2288805, though it has been made more pythonic where appropriate pyquery developed by olivier lauzanne in  it is maintained by david schoonover mailto dsc less ly feedback and bug you can use the pyquery class to load an xml document from a string a lxml document from a file or from an url from pyquery import pyquery as pq from lxml import etree import urllib d pq html and html d pq etree fromstring html and html d pq filename pathtohtmlfile now d is like the object in jquery d hello p d hello print p html hello world print p html print p text you know python rocks you can use some of the pseudo classes that are available in jquery but that are not standard in css such as first  last  even  odd  eq  lt  gt  checked  selected  and file d p first pyquery uses lxml for fast xml and html manipulation this is not a library to produce or interact with javascript code if that s what you need check out
2792760, this provides a set of conveniences for you to use more like backbone or spine but still fully leveraging knockoutjs add it to your rails application s gemfile gem knockout rails then bundle install reference knockout from your javascript as you normally do with rails   assets pipeline after you ve referenced the knockout you can create your first persistent model coffee class page extends ko model persistat page this is enough to save the model restfully to and pages and id url fields id  name  whatever this is optional and will be inferred if not used now you can create the model in your html note that we don t do a roundtrip to fetch the data as we already have it when rendering the view contentfor script do javascript jquery function and and create the viewmodel with prefilled data window page new page page tojson ko applybindings window page and and and bind everything of course you can manipulate the object as you wish coffee page name updated page page save saves it to the server using put and pages and  page name assign an invalid value that is validated on the server request page save returns the jquery deferred so you can chain into it when necessary request always xhr status the response is  with json name invalid name  should not be blank and now we have the errors set automatically page errors name invalid name should not be blank even more than that errors are already bound and shown in the html see the view below now let s see how we can show the validation errors on the page and bind everything together form page formtastic data bind submit save fieldset li input string label label for pagename name input pagename type text data bind value name span inline error data bind visible errors name text errors name if you are using the model you can also take advantage of the client side validation framework the client side validation works similarly to the server side validation this means there is only one place to check for errors no matter where those are defined for example page errors name returns the error message for the name field for both client and server side validations the piece of code below should explain client side validation including some of the options coffee class page extends ko model persistat page validates acceptance agreetoterms value is truthy presence name  body non empty non blank stringish value email author valid email blanks allowed presence password confirmation passwordconfirmation  confirms password blanks allowed numericality numericality rating numericality rating  min  max  inclusion and exclusion inclusion subdomain  values mine  yours exclusion subdomain  values www  www format code  match and d and and regex validation blanks allowed length name  min  max  stringish value should be with the range custom message presence name  message give me a name yo conditional validation access model using this presence name  only persisted  except id  custom inline validation custom name  page if page name and and indexof funky  then should be funky else null it is recommended to avoid custom inline validations and create your own validators instead and maybe submit it as a pull request coffee ko validations validators funky model field options options is an optional set of options passed to the validator word options word and and funky if model field indexof word  should be word else null so that you can use it like so coffee validates funky name  word yakk here s how you would check whether the model is valid or not assuming presence validation on name field coffee page new page name page isvalid false page errors name can t be blank page name home page isvalid true page errors name null every validator has its own set of options but the following are applied to all of them including yours only truthy or falsy only apply the validation when the condition is truthy this points to the model so you can access it except is the opposite to only both only and except can be used but you should make sure those are not mutually exclusive and at the end of this exercise you can bind the errors using data bind text page error name or any other technique coffee class page extends ko model persistat page subscribe to sayhi event upon sayhi  name alert name and name page page new name home page trigger sayhi  hi the callbacks are just convenience wrappers over the predefined events some of them are coffee class page extends ko model persistat page beforesave age birthdate new date class page extends ko model persistat page on beforesave  age birthdate new date this gem also includes useful bindings that you may find useful in your application for example you can use autosave binding by requiring knockout and bindings and autosave or if you want to include all of the bindings available then require knockout and bindings and all the list of currently available bindings autosave automatically persists the model whenever any of its attributes change apply it to a form element examples autosave page  autosave model page when page isenabled unless viewmodel donotsave note it will not save when a model is not valid inplace converts the input elements into inplace editing with edit and done buttons apply it on input elements similarly to the value binding animate runs the animation when dependent attributes change example animate width quotaused height quotaused  duration  autocomplete supports jquery ui autocomplete example autocomplete source arrayorobservableoranyobjectordeferred select observabletosetthevalueto label nameofthefieldtodisplay the source can support jquery deferred meaning that you can simply return the result of a jquery ajax please see the specs for more detailed instruction on how to use the specific binding look at the history md file for current todo list and other details assuming you already cloned the repo in cd d into it bundle install bundle exec rspec spec and cd spec and dummy bundle exec rails s now you can go to spec and javascripts and start writing your specs and then modify stuff in lib and assets and javascripts to pass those pull requests are very welcome but please include the specs it s extremely easy to write those
1897641, the advancecomp recompression utilities is a suit of commands for optimizing the compression ratio for a number of zlib based file formats such as png  mng  and gz this is a fork of the advancecomp recompression utilities that has been modified by adding the advpngidat recompression tool that can recompress apples iphone optimized png proprietary format this fork of the advancecomp tools does not modify any of the original tools but adds an additional tool ndash advpngidat the advpngidat tool has a couple of options which you can view via help  but there is really only one option that is used in practice z this specifies that the original png file should be recompressed using the highest compression and maximum effort setting for example shell advpngidat z i file and i png    i file and i png the original png file is replaced with the recompressed version the png file is left unmodified if advpngidat was unable to make the png smaller you can also wild card batch process png files too shell advpngidat z images and png    images and cornerreading x png    images and default png    images and default x png    images and dottedline png bigger     images and dottedline x png helpful hint the advancecomp distribution also includes the advdef tool this tool performs the same recompression optimization on gz files and it is used exactly the same way as advpngidat ndash code advdef z i file and i gz and code the advpngidat tool was created by taking the repng cc repng cc and copying it to repngidat cc repngidat cc the png optimization code from repng cc repng cc was then completely removed and code that only recompresses a png s idat chunk was added the advpngidat tool performs only a single type of optimization recompression of the idat chunk in a png file the contents of the decompressed idat chunk are not examined nor modified in anyway it is simply recompressed using the z rfc  and zlib compression engine the other png chunks in the png file are passed through unmodified rfc  and zlib allows for two types of streams normal this stream type includes a header trailer and adler  checksum of the data raw this stream type does not include a header trailer or a adler  checksum the iphone optimized png format requires the idat chunk to be compressed using the raw stream format the advpngidat tool works by recompressing the idat chunk using the z rfc  and zlib compression engine which can usually achieve an additional  to  additional compression relative to zlib and gzip  maximum compression setting it s sort of like gzip that goes to gzip  the iphone optimized png format includes an additional non standard png chunk type cgbi the presence or absence of this chunk type is used to determine whether or not the idat chunk is a raw or normal rfc  and zlib stream the advpngidat tool works on either iphone optimized png files or png standard conforming png files the presence or absence of a cgbi chunk is used to determine whether or not the idat chunk should be read and re written as a raw or normal rfc  and zlib stream some numbers obtained with shell wc images and png and tail  based on the png files in resources and images at the time of this writing this represents a savings of  bytes or kb there is an additional option that you can use with pngcrush brute this option tries a very large number of permutations of the various compression knobs which means it can take a lot longer here s the results with brute enabled using a combination of both brute and advpngidat saves  bytes or  mb relative to the default xcode compresspngfiles compresspngfiles optimization zlib is a lz based compression scheme and like all lz based compressors it uses a code em length and em  em distance and em and code pair in the compressed byte stream that is used by the decompressed to copy code em length and em and code number of bytes from a position that is a code em distance and em and code number of bytes back from the bytes that have already been decompressed in practice there are usually a number of possible matches for any given code em length and em  em distance and em and code pair since the number of combinations raises very quickly there is no practical way to find the combination that results in the smallest number of compressed bytes a number of heuristics are used by lz based compressors and the compression ratio achieved by a particular implementation is highly dependent on the code em length and em  em distance and em and code search algorithm used the advancecomp recompression tools use the search and match implementation from the  zip and lzma compression engine which has been specifically designed to maximize the compression ratio the  zip and lzma matcher is typically able to get an additional  to  compression than zlib at its highest setting i e  gzip  of course it also takes a lot longer to perform the compression therefore it makes sense to spend the extra effort only when the files in question are of the compress once decompress many times variety as a general rule decompression speed of lz based compressors is completely independent of the quality and implementation of the compressor in fact it usually takes less time to decompress a highly compressed lz byte stream i e  advancecomp recompressed files than it does to decompress a lz byte stream that was created by a compressor that was optimized for compression speed i e  gzip  this is because a highly compressed lz stream invariably contains less code em length and em  em distance and em and code pairs that need to be processed while the code em length and em and code  or the number of bytes copied tends to be greater and copying bytes is typically something that is highly optimized i e  memcpy
2784591, pebl is a python library and command line application for learning the structure of a bayesian network given prior knowledge and observations pebl includes the following features can learn with observational and interventional data handles missing values and hidden variables using exact and heuristic methods provides several learning algorithms makes creating new ones simple has facilities for transparent parallel execution using several cluster and cloud resources calculates edge marginals and consensus networks presents results in a variety of formats
2080760, the entire browser side code is under public and app js to start the server you ll need node js and a mongodb server run cd thewall and npm install node server js that s all have fun
1556970, why go through the tedium of creating both a closure and a noconflict method when all you want to do is create your own javascript library with javascript library boilerplate project  you can hit the ground running and create your own javascript library in no time more complete instructions are available at the project page project for more information on the included blazingly fast  kb qsa css selector library visit the project page project copyright c  cowboy ben alman dual licensed under the mit and gpl licenses
1626587, introduction  blumine an easy to use project management software this software is licensed under the mit license see license txt for more information
2451983, air mobile extensions  these libraries provides different air  native extension adapters for the android platform use cases extending the air api with additional hardware features of android device using services which can t be accessed via the air api itself available native extensions sensors ambientlight sensor android barometer sensor android gravity sensor android gyroscope sensor android magnetometer sensor android orientation sensor android proximity sensor android os features battery status android toast messages android vibrator hardware android and ios notifications android dependencies compiled against android   api level   some need android    api level  compiled against ios   sdk air   sdk download download the prefered extension from the extensionandroid  interface directory of the extension i ve also added the source files from native code in case you want to change the implementation for yourself installation copy the swc file from the and extension folder into your library folder and add it to your project classpath copy the ane file from the and extension folder into your project folder add the content of the descriptorextensions xml into your application descriptor xml file add all necessary permissions into your application descriptor xml file api usage after adding the swc file to your project path you ve access to the containing classes the implementation of the different services is straight forwarded and orients oneself by the adobe air api of the geolocation and accelerometer class in case you want to check whether a service is available or not you should use the static method issupported before initializing the instance if vibrator issupported var vibrator vibrator new vibrator vibrator vibrate  if proximity issupported proximity new proximity proximity setrequestedupdateinterval  proximity addeventlistener proximityevent update handleproximityupdate you can dispose all services via proximity dispose packaging make sure you ve added the ane files during the packaging process of your apk file e g via ant change log  v   added vibrator service ios v   added notification support android v   added toast messages android added gravity sensor android v   added pressure and barometer sensor android added magnetometer sensor android v   added battery status android v   added gyroscope sensor android added cancel method for the vibrator class v   added getmaximumrange  getpower and getresolution implementation for the proximity orientation and ambientlight sensors v   modified project structure android v   fix now each sensor can be initiated multiple times e g to use different intervals to retrieved sensor updates modified renamed all service classes into  e g proximityservice proximity v   added ambient light sensor android added orientation sensor android added proximity sensor android added vibrator service android add additional documentation of each service add unit tests add equivalent ios implementations
251644, an application that is built for use on the phonegap platform www phonegap com developed by filip maj nitobi mit license is fine thanks to yahoo and beermapping com for providing open access to data
1750060, this is just an early experiment with node js and socket io you can play with a live example at chat joshmarshall org there isn t a datastore and persistence layer yet that may be coming but it s a goofy little project so don t hold your breath requirements  npm if you install packages using it socket io npm install socket io express npm install express ejs npm install ejs just a node app so node app js nodeenv production node app js etc  work like normal configuration  the default configuration options are in config js but i recommend creating development js or production js files in the main root instead of jacking with config js unless you want to make changes to every installation these will be automatically used based on the contents of nodeenv
1148330, a realtime web server that doesn t suck or at least won t suck when it s finished how it works  the user s browser loads your page   which instantiates a connection to chloe using javascript it can then send data over that connection   which will be relayed to your app via a post from chloe  when you have data that you want to send back to the browser send a post to chloe   which will relay it back to the connected browser   send data over websockets and and and v and and  and index html and and  post and send data for browser and and and browser and and your app and and chloe and and and and and and and and and  data from the browser and and and  data from your app and and and and and and and and and installation  mac binary  tar xzvf chloe    osx tgz cd chloe    and bin and chloe start ubuntu binary  tar xzvf chloe    ubuntu tgz cd chloe    and bin and chloe start from source  get you some erlang on a mac brew install erlang brew install rebar clone this repo cd chloe run these commands gem install rake rake bootstrap rake server get sinatra and run the demo app in another terminal window gem install sinatra rake demo demo js sets up a chloe variable that is already connected to the server do the following in the console chloe send hi mom relish the awesome to stop chloe enter q back in erlang to stop the demo app use ctrl and c instantiate a chloe object var chloe new chloe host localhost  port  define a function for handling incoming messages chloe onmessage function message console log i got a message and message connect to chloe and send a message chloe connect function chloe send ohai subscribe to a channel note that we do this within the connect callback because subscribing to a channel requires sending a message to chloe chloe connect function chloe subscribe pumpkin  function message console log someone was eating pumpkins and message  server side api  sending a message to chloe which will then be sent to all connected browsers sending a message to a specific channel in chloe configuring chloe  chloe has a single configuration file chloe    and etc and app config allowed options for the chloe application are port the port on which chloe runs default  logdir where the chloe log files will go default transport types  chloe currently supports websockets xhr and jsonp as possible transports if your browser does not support websockets we ll intelligently fallback to jsonp or xhr our primary test browser is chrome if you re using any other browser please let us know if you run into issues this sucker is pretty alpha right now there s a number of undocumented features but everything that is documented seems to work as with all alpha open source software ymmv pull requests gladly accepted
1461411, snowball js implements the popular snowball word stemming algorithm in javascript originally ported to javascript by oleg mazko for github to add support for node and npm npm install snowball var snowball require snowball var stemmer new snowball english stemmer setcurrent abbreviations stemmer stem console log stemmer getcurrent abbrebi to make porting from java sources easier each stemmer could be validated by regex limitbackward and limit and cursor and bra and ket and setcurrent and getcurrent and ingrouping and ingroupingb and outgrouping and outgroupingb and inrange and inrangeb and outrange and outrangeb and eqs and eqsb and findamong and findamongb and replaces and slicecheck and slicefrom and slicedel and insert and sliceto and eqvb snowball min js library was compressed by google closure compiler java jar compiler jar js snowball js jsoutputfile snowball min js inrange inrangeb outrange outrangeb functions removed from sbp never used to decrease snowball js library size among constructor validation removed setcurrent function sc function  match this setcurrent this sc  mathes snowballprogram only sbp setcurrent sbp sc  mathes getcurrent function gc function  match this getcurrent this gc  mathes snowballprogram only sbp getcurrent sbp gc  mathes ingrouping function ig function  match this ingrouping this ig  mathes sbp ingrouping sbp ig  mathes ingroupingb function igb function  match this ingroupingb this igb  mathes sbp ingroupingb sbp igb  mathes outgrouping function og function  match this outgrouping this og  mathes sbp outgrouping sbp og  mathes outgroupingb function ogb function  match this outgroupingb this ogb  mathes sbp outgroupingb sbp ogb  mathes eqs function es function  match this eqs this es  mathes sbp eqs sbp es  mathes eqsb function esb function  match this eqsb this esb  mathes sbp eqsb sbp esb  mathes findamong function fa function  match this findamong this fa  mathes sbp findamong sbp fa  mathes findamongb function fab function  match this findamongb this fab  mathes sbp findamongb sbp fab  mathes replaces function rs function  match this replaces this rs  mathes sbp replaces sbp rs  mathes slicecheck function sch function  match this slicecheck this sch  mathes sbp slicecheck sbp sch  mathes slicefrom function sf function  match this slicefrom this sf  mathes sbp slicefrom sbp sf  mathes slicedel function sd function  match this slicedel this sd  mathes sbp slicedel sbp sd  mathes insert function i function  match this insert this i  mathes sbp insert sbp i  mathes sliceto function st function  match this sliceto this st  mathes sbp sliceto sbp st  mathes eqvb function evb function  match this eqvb this evb  mathes sbp eqvb sbp evb  mathes refactoring all code with loop labels replaced by more readable equivalent unused variables v v vn removed from all functions sometimes anonymous functions using as function parameter turkish to decrease snowball js library size amongvar av  mathes bra  b   match this bra this b  mathes sbp bra sbp b  mathes ket  k   match this ket this k  mathes sbp ket sbp k  mathes limit  l   match this limit this l  mathes sbp limit sbp l  mathes cursor  c   match this cursor this c  mathes sbp cursor sbp c  mathes limitbackward  lb   match this limitbackward this lb  mathes sbp limitbackward sbp lb  mathes jsunit   testrunner pentium iii  mhz  mb ram results  running on mozilla and   windows u windows nt   ru rv     gecko and  firefox and    status done   seconds runs  errors  failures   running on opera and   windows nt   u ru presto and    version and   status done   seconds runs  errors  failures   running on mozilla and   compatible msie   windows nt   sv net c net e fdm status done   seconds runs  errors  failures   first version porting from java code with minimum changes reflection for finnish stemmer is replaced by using callback function as function parameter jsunit   testrunner pentium iii  mhz  mb ram results running on mozilla and   windows u windows nt   ru rv     gecko and  firefox and    status done   seconds runs  errors  failures   running on opera and   windows nt   u ru presto and    version and   status done   seconds runs  errors  failures   running on mozilla and   compatible msie   windows nt   sv net c net e fdm status done   seconds runs  errors  failures 
2765427,  turn your pictures into ascii art       iiiii iiiiiii iiiiiii iiiiil iiiiiil i iiiiiiiiiii iiiiii iiiii iiiiiiiiii iiiiiiiii iiiiil iiiiil iiiiiiiiiiiii iiiiil iiiiit iiiiiiiiiiil iiiiiiiiiil iiiiil iiiiiil iiiiiiiiiiiii iiiiil iiiiiil iiiiiiliiiiil iiiiiiiiiiiif iiiiil iiiiiil iiiiiiiiiiiil iiiiil iiiiiil liiiilttliiiil iiiilllliiill iiiiil iiiiill iiiiilllllllt iiiiil iiiiiiil iiiil lilil iiiil iiiill iiiiil iiiiilt iiiiil iiiiil iillililt tiilili tlltf iilil iiiill iillil iiililt iillil iillil iillllllt lillliiiil iilil lllllf iillll iillllt iillliiiil iillil iilllllll llllllliill iilll iillll illlllf illllllllt iillll illl llll lllllllllll lllll llllll illlllf illllllllt illlll illll llll llllllllll llllt lllllt illlllf lllllllllt llllll illllillllf tttllllllt llllt liiilf lllllt tlllllf lllllllllt llllll illlllllllt lllllt llllt illllt lllllt tlllllf llllltttf lllllt llllllllllt iiiiit lllllt lllll illllt lllllt flllllf lllllt lllllt llllllllllt llllllllillllt llllll illllt lllllt flllllf lllllt lllllt lllllttllllt lllllllllllllf llllllllllltf lllllt flllltf lllllt lllllt illllt tllllf tllllllllllt lllllllllllt lllllt tlllltf lllllt lllllt illltf tllltt ttlllllllltt tllllllllltf lllllt illlltt lllllt lllllt lllltc tlllt fttllllltt tllllllltf lllllt illlltt lllllt lllllt ttttt ttttt ftttttf fttttttg tttttf ttttttf tttttf tttttt cccc cc gcccccccc cccccccccccccccc cccc cc cccccccc cccccccccccccccc cccccgccc cccccccc cccccccccccccccc ccccccccc cccccccc cccccccccccccccc and code and pre
983587, a very basic fastcgi parser for low level parsing of the fastcgi protocol can be used to build fastcgi applications which are called from an existing web server nginx and lighttpd and apache etc or to interact with fastcgi applications currently using creatonix s bufferextras module for binary packing this will be replaced by a more efficient c and and addon or i might make the binary packing and unpacking pluggable fastcgi server js localhost socket and tmp and nginx sock  check local disable location js fastcgipass unix and tmp and nginx sock fastcgiparam scriptfilename and scripts fastcgiscriptname fastcgi parser parser encoding utf and ascii and binary default is utf this determines the encoding used when reading the body of an stdin and stdout and stderr record utf or ascii mean no onbody callback will be fired and the record in onrecord will have a body property set to the correctly encoded string binary will mean no body property is set on the record returned in the onrecord callback and chunks of the body will be emitted in the onbody callback as they arrive parser reset function resets the parser so it can be executed on a new stream you should use this aftaer an error or when re using an already existing parser on a new stream parser init function completely reinitialises the parser calls parser reset as well as setting encoding back to default utf and clearing all callback handlers parser execute function buffer parses the buffer calls callback fastcgi constants version  record fcgibegin  fcgiabort  fcgiend  fcgiparams  fcgistdin  fcgistdout  fcgistderr  fcgidata  fcgigetvalues  fcgigetvaluesresult  fcgiunknowntype  keepalive off  on  parser state header  body  padding  general fcgiheaderlen  fcgimaxbody math pow  errors bufferoverflow err  description buffer overflow maxbodyexceeded err  description a body greater than maximum body size was read and written flags fcgikeepconn  role fcgiresponder  fcgiauthorizer  fcgifilter  protocol status fcgirequestcomplete  fcgicantmpxconn  fcgioverloaded  fcgiunknownrole  values fcgimaxconns fcgimaxconns  fcgimaxreqs fcgimaxreqs  fcgimpxsconns fcgimpxsconns
2295252, this pure javascript picture gallery provides you with a ready to use gallery made of two components a gallery of thumbnails in which the user can quickly check pictures and a scrollable gallery of pictures opened when the user touch one of the thumbnails it works on both ios and android this javascript library is still in beta feel free to report any issues fork it pull some request or make it fit your own needs it is as simple as copy the javascript file along with the images and directory somewhere in your project and include the javascript file javascript ti include picturegallery js once included the file will create a new namespace named picturegallery here is a minimal example javascript ti include picturegallery js var images path pathe and to and image  and and and to be changed var picturegallery picturegallery createwindow images images title holiday pictures picturegallery open this will create a ready to use gallery using built in default values createwindow returns a titanium window we plan to include another function which will return a view usable in other windows the images property takes an array of dictionaries each dictionary contains three properties with path being the only one mandatory caption obviously holds the caption while the thumbpath property holds the optional thumbnail image if thumbpath is missing the library will stretch down the image given by path javascript var images path images and images jpg  thumbpath images and imagethumb jpg  caption my beautiful picture path images and images jpg  thumbpath images and imagethumb jpg  caption my other beautiful picture var picturegallery picturegallery createwindow images images you can custom the thumbnail gallery by passing a dictionary to the thumbgallery property this dictionary supports the following properties numberofcolumn number generic number of column will be overwrited by the two properties below use this property to quickly set the same number of columns for both orientations numberofcolumnportrait number number of column in portrait mode overwrites numberofcolumn if specified numberofcolumnlandscape number number of column in landscape mode overwrites numberofcolumn if specified forcerealpixelsize number forces the thumbsize property to be read as a true pixel value rather than a density pixel value false by default thumbsize number size of the thumbnail will be used for the width and the height of the thumb thumbpadding number the padding between two thumbnails density pixel  will be ignored if thumbsize is set thumbbordercolor string border color of thumbnails thumbborderwidth number border width of thumbnails thumbborderradius number border radius of thumbnails thumbbackgroundcolor string background color of thumbnails backgroundcolor string background color for the thumbnail gallery you should be aware of this extreme case let s imagine you set the thumbsize to  the thumbpadding to  and numberofcolumn to  on a screen that is only  pixels of width you would overflow the screen the library will then try to reduce as much as possible the padding to fit the thumbnail gallery inside the screen if it is still to large it will try to scale the thumbnails themselves normally the gallery will always be inside the screen boundaries javascript var picturegallery picturegallery createwindow images images title holiday pictures  thumbgallery numberofcolumnportrait  numberofcolumnlandscape  thumbsize  thumbbordercolor   thumbborderwidth  thumbbackgroundcolor fff  backgroundcolor ddd each time you click on a thumbnail you will open the scrollable gallery the scrollable gallery works much like a native gallery both on android and ios you can scroll left to see the next picture and scroll right to see the last one alternatively you can use arrows if displayed to slide from a picture to another a single tap will hide the user interface to only let the picture visible you can custom as well the scrollable gallery by passing a dictionary to the scrollablegallery property this dictionary supports the following properties labelcolor string color of the caption labelfont dictionary font used by the caption similar to the font objects titanium uses barcolor string iphone only color of the navigation bar displayarrows boolean wether or not display left and right arrow for navigation false by default displaycaption boolean wether or not display the caption inofkey string the key for translating the word of into any language like x of n  using titanium built in in mechanism javascript var picturegallery picturegallery createwindow images images title holiday pictures  scrollablegallery labelcolor  labelfont fontsize  fontweight bold  barcolor   displayarrows true displaycaption true on iphone the library will create its own navigationgroup  to display a navigation bar on the top if you want to integrate the component with your own navigationgroup or tabgroup  you can specify either the current tab or the navigation group to the windowgroup property on android the back button should work just fine be sure however to open the picturegallery window as a heavyweight one javascript var picturegallery picturegallery createwindow images images title holiday pictures  windowgroup navigationgroup if ti platform osname android picturegallery open navbarhidden true else if ti platform osname iphone navigationgroup open picturegallery licensed under the terms of the apache public license please see the license included with this distribution for details
507903, esmre efficient string matching regular expressions  esmre is a python module that can be used to speed up the execution of a large collection of regular expressions it works by building a index of compulsory substrings from a collection of regular expressions which it uses to quickly exclude those expressions which trivially do not match each input here is some example code that uses esmre import esmre index esmre index index enter r major general w  savoy opera index enter r bway w and haye b  sea shanty index query i am the very model of a modern major general savoy opera index query way hay up she rises sea shanty the esmre module builds on the simpler string matching facilities of the esm module which wraps a c implementation some of the algorithms described in aho s and corasick s paper on efficient string matching aho a v and corasick m j efficient string matching an aid to bibliographic search comm acm   june     some minor modifications have been made to the algorithms in the paper and one algorithm is missing for now  but there is enough to implement a quick string matching index here is some example code that uses esm directly import esm index esm index index enter he index enter she index enter his index enter hers index fix index query this here is history    his     he     his index query those are his sheep    his     she     he you can see more usage examples in the tests
312674, rubikon is a simple to use yet powerful ruby framework for building console based applications rubikon aims to provide an easy to write and easy to read domain specific language dsl to speed up development of command line applications with rubikon it s a breeze to implement applications with only few options as well as more complex programs like rubygems homebrew or even git you can install rubikon using rubygems this is the easiest way of installing and recommended for most users gem install rubikon if you want to use the development code you should clone the git repository git clone git and and github com and koraktor and rubikon git cd rubikon rake install creating a rubikon application is as simple as creating a ruby class require rubygems require rubikon class myapplication rubikon application base if you save this code in a file called myapp rb you can run it using ruby myapp rb or you could even add a shebang and usr and bin and env ruby to the top of the file and make it executable you would then be able to run it even more easily by typing and myapp rb now go on and define what your application should do when the user runs it this is done using default class myapplication rubikon application base default do puts hello world end if you run this application it will just print hello world you can also add command line options to your application using command class myapplication rubikon application base command hello do puts hello world end this way your application would do nothing when called without options but it would print hello world when called using ruby myapp rb hello a command is code that is executed when the application is called with the command s name as the first argument just like rubygem s install or git s commit another part of rubikon s dsl are flags and options both are parameter types that change the behaviour of the application while a flag is a parameter without arguments an option may take one or more additional arguments typical examples for flags are debug or verbose or short d and v rubygem s version is an example for an option that requires additional arguments flags and options are easily added to your application s commands using rubikon s dsl flag more a flag option name an option  who command hello a command do puts hello who please see the wiki  for more information on the dsl or the samples directory for more in detail sample applications warning rubikon is still in an early development stage if you want to use it be aware that you will might run into problems and or restrictions see the contribute section if you want to help to make rubikon better a simple to use dsl automatic checks for option arguments built in methods to capture user input built in methods to display progress bars and throbbers built in support for configuration files built in support for colored output automatic generation of application and command help screens user defined validation of option arguments improved error handling general optimizations improved tests linux macos x or windows ruby    or newer see the compatibility page  in rubikon s wiki rubikon is a open source project therefore you are free to help improving it there are several ways of contributing to rubikon s development build apps using it and spread the word report problems and request features using the issue tracker  write patches yourself to fix bugs and implement new functionality create a rubikon fork on github  and start hacking extra points for using githubs pull requests and feature branches rubikon is the german name of the river rubicone in italy it had a historical relevance in ancient rome when julius caesar crossed that river with his army and thereby declared war to the roman senate the phrase to cross the rubicon originates from this event you may also see rubikon as a portmanteau word consisting of ruby and console this code is free software you can redistribute it and and or modify it under the terms of the new bsd license a copy of this license can be found in the license file sebastian staudt koraktor at gmail com dotan j nahum jondotan at gmail com rubikon s homepage  github project page  github issue tracker 
2504755, regexonnsstring is a category on nsstring that gives you access to nsregularexpression without having to declare a separate object and wade through the documentation on the different parameters that  and of the time you re never going to need anyway there are unit tests in the iphone and osx examples but there aren t example apps yet hopefully if you look at the category interface and the unit tests the usage should be obvious if not i failed and you should yell at me
160531, interact with the command line by accepting input options parameters and output text this library was originally written in  and was alright now it has been totally rewritten based on the fuelphp cli library i wrote which was based on this madness codeigniter   x and and output hello world to the cli this cli write hello world and and waits for any key press this cli prompt and and takes any input color this cli prompt what is your favorite color and and takes any input but offers default color this cli prompt what is your favorite color  white and and will only accept the options in the array ready this cli prompt are you ready  array y  n this cli write loading this cli wait  true
1508721, a simple pong implementation that runs on ios the following stuff is used to create this pong implementation for ios xcode  x objective c cocosd freetime in an hotel in rotterdam all real logic and non scaffolding code can be found in three classes main entry point bootstraps all the game objects and is the layer where the game is drawn on it also holds and manages the game score the paddle game object contains logic to move itself on touch the ball game object it contains logic to respawn boxd works with several fundamental objects we briefly define these objects here and more details are given later in this document a physics world is a collection of bodies fixtures and constraints that interact together boxd supports the creation of multiple worlds but this is usually not necessary or desirable a d geometrical object such as a circle or polygon a chunk of matter that is so strong that the distance between any two bits of matter on the chunk is completely constant they are hard like a diamond in the following discussion we use body interchangeably with rigid body a fixture binds a shape to a body and adds material properties such as density friction and restitution a constraint is a physical connection that removes degrees of freedom from bodies in d a body has  degrees of freedom two translation coordinates and one rotation coordinate if we take a body and pin it to the wall like a pendulum we have constrained the body to the wall at this point the body can only rotate about the pin so the constraint has removed  degrees of freedom a special constraint designed to prevent penetration of rigid bodies and to simulate friction and restitution you do not create contact constraints they are created automatically by boxd this is a constraint used to hold two or more bodies together boxd supports several joint types revolute prismatic distance and more some joints may have limits and motors a joint limit restricts the range of motion of a joint for example the human elbow only allows a certain range of angles a joint motor drives the motion of the connected bodies according to the joint s degrees of freedom for example you can use a motor to drive the rotation of an elbow i created this for the devnology code fest  using xcode objc and the cocosd boxd framework
2412581, the goal of this project is to be a source of comparison for the many different templating libraries available for node js by implementing templates in the most similar manner possible we can get fairly accurate benchmarks between compile and render steps of various template libraries alphabetical order node index js options node index js type render time  comparisons  the type of test to run available types are compile  render or all no parameter given defaults to all how long in milliseconds to run the tests for higher numbers can present more accurate results defaults  how many times to run each test defaults to  if you d like to contribute another library to this project that d be really awesome just to be fair there are a few ground rules  after cloning the repository run make to install all dependencies and commit hooks your commits will automatically be required to pass jslint  do not checkout or push to the gh pages branch doing so on github will create duplicate pages and hurt findability on search engines  all libraries must be available via the npm package install  add the library and specific version number no fuzzy versions allowed to package json  implement the template as closely as possible to all others provided shortcuts and optimizations to do the same thing are encouraged especially if they make the library compile and render steps faster  add the new template engine to the features table of index html  do not add new benchmarks to the index html file implementation will be reviewed and a full benchmark run will be done  if you did all of that you are really awesome
1214529, drty a django port for node js  drty currently includes the following urls and routing middleware views basic forms basic models using mysql backend sessions and auth contrib django templating support thanks to anders hellerup madsen and simon willisons of djangode it s a work in progress so there is much yet to be done installation is easy npm install drty included in the source tree is an example and folder that contains a simple blogging platform written using drty to run the example open up mysql as administrator root  and type the following create database demo grant all on demo to demo localhost identified by demo then go to the examples and directory and run node manage js syncdb node manage js runserver
320146, log to a central mongodb from rails apps  if using bundler add the following to your gemfile then refresh your dependencies by executing bundle install gem centrallogger  if you re just using gem gem install centrallogger  add the following line to your applicationcontroller include centrallogger filter  if using rails  skip this step otherwise add the following to config and environment rb require centrallogger centrallogger initializer initializedeprecatedlogger config  add mongo settings to database yml for each environment in which you want to use the central logger the central logger will also look for a separate centrallogger yml or mongoid yml if you are using mongoid before looking in database yml in the centrallogger yml and mongoid yml case the settings should be defined without the mongo subkey database yml development adapter mysql database myappdevelopment user root mongo database myapp required the only required setting capsize  megabytes default mb for production mb otherwise host localhost default localhost port  default  replicaset true default false adds safe inserts and retries for connectionfailure during voting centrallogger yml development database myapp capsize  megabytes host localhost port  replicaset true with that in place a new mongodb document record will be created for each request and by default will record the following information runtime ip address request time controller action params application name and all messages sent to the logger the structure of the mongo document looks like this  action actionname applicationname applicationname rails root  controller controllername ip ipaddress messages info  debug  error  warn  fatal  params  path path requesttime dateofrequest runtime elapsedexecutiontimeinmilliseconds url fullurl  beyond that if you want to add extra information to the base of the document let s say something like userguid on every request that it s available  you can just call the rails logger addmetadata method on your logger like so for example from a beforefilter make sure we re using the centrallogger in this environment if rails logger respondto addmetadata rails logger addmetadata userguid userguid end and now for a couple quick examples on getting ahold of this log data first here s how to get a handle on the mongodb from within a rails console db rails logger mongoconnection lt mongo db xfac slaveok nil name myapp gt collection db rails logger mongocollectionname lt mongo collection xbee name developmentlog gt once you ve got the collection you can find all requests for a specific user with guid cursor collection find userguid  lt mongo cursor xae gt cursor count find all requests that took more that one second to complete collection find runtime gt  count find all order show requests with a particular order id id orderid collection find controller order  action show  params id orderid find all requests with an exception that contains routingerror in the message or stack trace collection find messages error and routingerror and find all requests with a requestdate greater than  and  and     gmt collection find requesttime gt time utc       copyright c  phil burrows released under the mit license
2783842, jquery plugin for creating image galleries that scale to fit their container link to the script after jquery apply it to a dom element on the document ready event document ready function var gallery new thumbnailgallery gallery you can configure the settings as follows example has the default config values assigned document ready function var gallery new thumbnailgallery gallery  thumbimages  and img and thumbs and thumb  smallimages  and img and small and image  largeimages  and img and large and image  count  thumbimagetype jpg  imagetype jpg  breakpoint  shadowstrength   parameters are thumbimages path to the thumbnails smallimages path to the small size images largeimages path to the large size images count number of images and thumbnails thumbimagetype file extension for thumbnail images all should be the same imagetype file extension for gallery images all should be the same breakpoint width at which the small and large image sizes are swapped shadowstrength strength of the shadow on the non selected thumbs   jquery responsive thumbnail gallery plugin created by john polacek
564455, node s is a simple web application for creating and manipulating buckets and files on amazon web services s with slight modifications you can also use it to proxy file uploads directly to aws this basis for this little app was in part inspired by the above link should hopefully provide some insight on how this app might be useful nodejs    tested on    just edit config jsq and place your own configuration values into each of the possible environment variables var dev ports   s key somekeyfordevelopment  secret somesecretfordevelopment  reviewer bastard samurai com  uploaddirectory and tmp and and and relative to the app root var prod ports   s key somekeyforproduction  secret somesecretforproduction  reviewer bastard samurai com  uploaddirectory and tmp and if you need to create additional environment variable options then remember to modify the config init function accordingly the port value is an array so you can define multiple ports to listen on when the application starts it will create a new app instance per port to fire up the application on each of the designated port options node app js env env option defaults to dev and upload parses and loads the uploaded file in memory before putting to s and streamupload parses and streams to s and savethenstreamupload stores in memory writes to disk and then streams the file to s and streamsavestreamupload streams the file to disk and then streas the file to s chunked encoding isn t supported by s i experience the following error when trying to stream large files mb to s not exactly sure what the problem is typeerror cannot call method flush of undefined at node js   future improvements uploading to s assumes the filedata is binary if you find this app useful please tweak it to your hearts content if you feel like sharing your modifications please do
2327271, to handle in memory cache works in node and browser to install it on node npm install microcache to install the browser version download it and include it like that to instanciate a cache do the following you can have as many instances you want var microcache new microcache to get a cached asset which is in the cache each cached element has a unique key to identify it microcache get foo to set a element value in the cache microcache set foo  bar to know if a given asset is currently in the cache microcache contains foo to return all the elements currently in the cache microcache values to get an element from the cache if it isnt already present store it then return it microcache getset key value if second parameter is a function it is called only if the key isnt contained in the cache thus the value isn t instanciated without need microcache getset key function return value q what about plain var microcache isnt this wrapper overengineering a i was thinking so too at first but the syntax of a getset without wrapper was too ugly for my taste var a cache key cache key and and value from floriancargoet
1485658,
1595449, the yahoofinance framework is an ios objective c framework for yahoo finance retrieve stock details such as quotes volumes etc currency conversion for all major world currencies add asihttprequest to your project see project specific details add json framework to your project see project specific details add the folder bsyahoofinance to your project include bsyahoofinance h to use the features in yahoofinance the external components are submodules to the project to get it running do the following  clone yahoofinance  change directory to where you cloned yahoofinance cd yahoofinance  run the following commands git submodule init git submodule update now you have the required components and the sample project will run as expected
2493563, microphysics js is a micro library implementing d physics
1844658, the aim of this repository is to gather the results of the analysis being done worldwide of the ehec e coli that has caused the outbreak in germany
1074770, facebook integration for your django website  installation  simply add djangofacebook to your installedapps and configure the following settings facebookappid facebookapikey facebooksecretkey optionally set default permissions to request e g email  useraboutme facebookperms and for local debugging use one of the debug middlewares and set facebookdebugtoken facebookdebuguid facebookdebugcookie facebookdebugsignedreq templates  a few helpers for using the javascript sdk can be enabled by adding this to your base template in the head section load facebook facebookinit block facebookcode endblock endfacebook and this should be added just before your and html tag facebookload the facebookload template tag inserts the code required to asynchronously load the facebook javascript sdk the facebookinit tag calls fb init with your configured application settings it is best to put your facebook related javascript into the facebookcode region so that it can be called by the asynchronous handler you may find the facebookperms tag useful which takes the setting in facebookperms and prints the extended permissions out in a comma separated list fb login button show faces false width  max rows  perms facebookperms and fb login button a helpful debugging page to view the status of your facebook login can be enabled by adding this to your url configuration r facebookdebug and  directtotemplate template facebookdebug html  once this is in place you are ready to start with the facebook javascript sdk this module also provides all of the tools necessary for working with facebook on the backend middleware  this provides seamless access to the facebook graph via request object if a user accesses your site with a valid cookie javascript sdk  or a valid signedrequest parameter facebook canvas app  then your views will have access to request facebook graph and you can begin querying the graph immediately for example to get the users friends def friends request if request facebook friends request facebook graph getconnections me  friends to use the middleware simply add this to your middlewareclasses djangofacebook middleware facebookmiddleware facebookdebugcookiemiddleware allows you to set a cookie in your settings file and use this to simulate facebook logins offline facebookdebugtokenmiddleware allows you to set a uid and accesstoken to force facebook graph availability facebookdebugcanvasmiddleware allows you to set a signedrequest to mimic a page being loaded as a canvas inside facebook authentication  this provides seamless integration with the django user system if a user accesses your site with a valid facebook cookie a user account is automatically created or retrieved based on the facebook uid to use the backend add this to your authenticationbackends djangofacebook auth facebookbackend to automatically populate your user and profile models with facebook data use djangofacebook auth facebookprofilebackend don t forget to include the default backend if you want to use standard logins for users as well django contrib auth backends modelbackend decorators  facebookrequired is a decorator which ensures the user is currently logged in with facebook and has access to the facebook graph it is a replacement for loginrequired if you are not using the facebook authentication backend canvasrequired is a decorater to ensure the view is being loaded with a valid signedrequest via facebook canvas if signedrequest is not found the decorator will return a http  if signedrequest is found but the user has not authorised the decorator will redirect the user to authorise
104092, spaz for webos is a full rewrite of the spaz codebase it s based on spazcore a component library for web runtime applications if you don t want to go through these steps you ll need to use end user test builds and won t be able to run from source
1563173, this repo contains the contents of the www folder that you should use as part of your xcode project to create the phonegap contacts application you will need to create your own xcode project and configure it as per the tutorial you will also need to download the sencha touch sdk and copy or symlink its resources into the lib and touch folder within www
1487701, the planetarium  the planetarium demourl is a css experiment that was created for the launch of firefox  it s been featured as a demo in the mozilla s web o wonder wowurl gallery
54402, textile editor helper v   textile editor helper is a plugin for ruby on rails to add a textile toolbar above textareas dependency  to use textile editor helper you must be using either the prototype or jquery javascript libraries if using prototype the textile editor helper starts up on the dom loaded custom event if using jquery it uses the document ready method to use textile editor helper  directions to get the helper up and running for your install first you ll need to run rake textileeditorhelper install to use the textile editor helper with a specific text area you can choose between the following options f textileeditor description textileeditor user website textileeditortag description  description just like writing a text area tag at the end of your form put in the following code textileeditorinitialize important if you re a jquery guy we ve got what you need textileeditorinitialize framework jquery then just save your view and check it out simple vs extended  teh has a built in mode to show only a sub selection of available tags called simple currently the simple tags are bold underline italic strikethrough to create a text area that will only use the simple tags create your text area with the following code textileeditor object  field  simple to modify textile editor helper  most of the options that you might want to modify e g access keystroke or whether a tag is available in simple are found in textileeditorconfig js pretty straightforward more info on textile  more info on slate  textile editor helper is released under the mit license the project is now unofficially maintained by nicol s hock inspired by 
19796, twilight color theme for gnu emacs inspired by textmate
1105683, what is gretty  gretty is a simple web framework for both building web servers and clients built on top of netty it supports nio style http server asynchronous http client it also supports both websocket server and client it s designed to be light weight and run as a standalone embedded solution but you can use it with pure groovy scala or even java tutorials
373078, warning this thing is obsolete don t use it this thing uses an old hacky way of doing authentication that facebook has deprecated do yourself a favor and use oauth and facebook s open graph api it s sooooo much better django facebookconnect  copyright  ryan mark django facebookconnect extends the builtin django auth system to let your visitors use thier facebook account to log into your site it works with existing user accounts and django registration although django registration isn t required your visitors can still use their django username and password or they can log in with their facebook account and link it to their existing django user account if they don t have an existing user account they can login with facebook and a dummy django uuser will get setup for them seamlessly installation  i m dumping the code for the first rev into source control just pull it out with svn and put the facebookconnect directory somewhere in your python path either in your application with your other apps or in your python site packages directory django facebookconnect only requires the stock django auth app but it also plays nice with django registration if you would like to give your users the option to log in without facebook add facebookconnect and django auth to your installedapps installedapps django contrib auth  django contrib sessions  facebookconnect  both pyfacebook and django facebookconnect have middleware that needs to be used middleware is a funny thing and is sensitive to the order in which it is executed this order works middlewareclasses django contrib sessions middleware sessionmiddleware  facebook djangofb facebookmiddleware  django middleware common commonmiddleware  django contrib auth middleware authenticationmiddleware  facebookconnect middleware facebookconnectmiddleware  if you have other middleware you may have to experiment with where in the list you should put your middleware if you change the order of the stuff above it will break add the facebook to your authentication backends if you dont have an authenticationbackends directive in your settings just use this one authenticationbackends facebookconnect models facebookbackend  django contrib auth backends modelbackend  one more thing you may want to know about is the dummy facebook data if for whatever reason the code can t retrieve facebook profile information for a user it will use dummy data facebook connect drops requests from time to time so instead of killing the application it will just show something you can set the dummyfacebookinfo directive in the settings file to change the default stuff here is what the default stuff looks like dummyfacebookinfo uid  name private  firstname private  affiliations none status none proxiedemail none facebook api  facebookapikey  facebooksecretkey  facebookinternal true the third setting is for pyfacebook i don t know what it does completely but it does cause pyfacebook to hold on to expired facebook sessions when it s false so you have to use caching with facebook connect especially if you plan to display profile info from your facebook connect users caching is used no matter what but if you don t configure it django will just cache to memory for the execution and not for the long term or something it s probably bad cache facebook info for x seconds default is  minutes facebookcachetimeout  django s cache framework rocks by the way using facebook connect  once you ve got everything installed all user objects will have a facebookprofile attribute that is if the user has logged in with facebook the facebookprofile object has all sorts of nifty methods and properties there are templates that you can override the setup screen is presented to a new facebook user when they first log in a user can then choose to link their facebook account to an existing account or not to get these views add the following to your project s url py urlpatterns patterns   r facebook and  include facebookconnect urls  there is a template tag library called facebooktags which has a bunch of shortcuts for displaying facebook profile information for a user put load facebooktags at the very top immediately after any extends statement put facebookjs in the html head section and put initializefacebookconnect at the bottom of your base html file before the closing body tag it will install the facebook javascript and contains some javascript functions for publishing data to a facebook feed put showconnectbutton wherever you want a connect with facebook button django has a builtin loginredirecturl setting that django facebookconnect uses when a user logs in with facebook by default a user will be redirected to and accounts and profile if you want this to be something different set loginredirecturl in your settings file there is also a management command called installfacebooktemplates this command loads special facebook templates from a directive in your settings file called facebooktemplates and stores the reference ids in the db you can get at those templates through the facebooktemplate model see the settings example py file for more details on how to define facebook templates
2086119, tmux extra  installation  included files tmux conf tmux configuration file symlink to your home directory like ln s and home and brandur and tmux extra and tmux conf and home and brandur and tmx a tmux launcher script mostly useful for getting sessions that share the same set of windows but can move between them independently symlink to a directory in your path like ln s and home and brandur and tmux extra and tmx and home and brandur and bin and launch tmux via the launcher with tmx session name where the session name is an arbitrary string representing a session that you might want to reconnect to later e g tmx mutelight send comments and suggestions to brandur mutelight org
387968, npm install sesh id menokschy  data history and  user guest  path and  persistent true lifetime  expiration  var http require http  session require and lib and core session and and let s create a basic http server http createserver function request response and and before we process any part of the request let s use the session middle ware session request response function request response and and now we can access request session and and after the session middleware has executed let s finish processing the request response writehead  content type text and plain response write request session n and json stringify request session  true response end  listen  and server started and console log hello world running on port  var http require http  session require and lib and core magicsession and and special magic now all requests have sessions and and let s create a basic http server http createserver function request response and and now we can access request session and and let s finish processing the request response writehead  content type text and plain response write request session n and json stringify request session  true response end listen  and server started and console log hello world running on port  one of the best things about having a persistent session object per user is having the ability to create user logins the actual way you want to implement authentication is up to but here is a basic pattern to follow please remember this method of authentication is just an example var http require http  session require and lib and core magicsession and and let s create a basic http server http createserver function request response and and please note this is just an example of how to hook auth into session js its not ideal at all and and super basic logout if request url and logout request session data user guest response writehead  content type text and plain response write you ve been logged out response end return and and let s hardcode a username and password variable into the url var urlparams require url parse request url true query and and if typeof urlparams name undefined and and if the name parameter has been sent lets log in as that user request session data user urlparams name and and request session data user always defaults to guest if request session data user guest response writehead  content type text and plain response write hello you are the guest user response end else response writehead  content type text and plain response write hello you are and request session data user response end listen  and server started and console log hello world running on port  once you have this running you can do the following hello you are the guest user hello you are marak hello you are marak you ve been logged out hello you are the guest user npm install response inimino inimino org marak squires
411907, packager is a php   and library to concatenate libraries split in multiple files in a single file it automatically calculates dependancies packager requires a yml header syntax in every file and a package yml manifest file as seen on the mootools project packager api  constructor  the constructor of this class accepts either a path to a package or a list of path to packages package yml must not be included in the path pkg new packager and users and kamicane and sites and mootools core and pkg new packager array and users and kamicane and sites and mootools core and  and users and kamicane and sites and mootools more and adding a manifest  parsemanifest  adds a manifest to this instance working with files  getallfiles  gets an list of all files getfiledependancies  gets an ordered list of every file that this file depends on getfilepath  gets the file path getfilesource  gets the file source getfiledescription  gets the file description getfileprovides  gets a list of the file provided components completefile  converts a single file to an ordered list of files completefiles  converts a list of files to an ordered list of files buildfromfiles  returns a string containing the source of the selected files and their dependancies writefromfiles  writes a file with the selected files and their dependancies working with components  componenttofile  gets the name of the file that provides this component componentstofiles  converts a list of components to a list of files buildfromcomponents  returns a string containing the source of the selected components and their dependancies writefromcomponents  writes a file with the selected components and their dependancies class usage  pkg new packager pathtomanifest pkg new packager and users and kamicane and sites and mootools core and pkg writefromcomponents and users and kamicane and sites and mootools js  array type  array packager command line script  the packager command line script is your one stop solution to build any of your packages at once works on unices and packager command and option argument argument and option argument argument command a packager command required and option options for commands optional register registers a package creates a packages yml file in your home folder unregister unregisters a package list list registered packages build builds a single file with the supplied packages and files and components and packager register and users and kamicane and mootools core  the package core has been registered and packager list  core and users and kamicane and mootools core and packager unregister core  the package core has been unregistered and packager build core and type core and fx art and art element which is the same as and packager build and components core and type core and fx art and art element which builds the passed in components and their dependancies using your registered packages and packager build and files core and core core and fx art and art this builds the passed in files and their dependancies using your registered packages and packager build art and builds every component from art and their dependancies using your registered packages and packager build somepackage and somecomponent and packages and users and kamicane and sites and some package builds the selected components using your registered packages and a temporary package that resides in and users and kamicane and sites and some package without having to register it first and packager build somepackage and somecomponent packages core builds the selected components using your registered packages minus the package names you pass to packages this lets you build your components without dependancies and packager build art and somecomponent and use only art builds the selected components using only art of your registered packages this lets you build your components without dependancies and packager build somepackage and somecomponent and use only and packages and users and kamicane and sites and some package builds the selected components using none of your registered packages plus the passed in package without registering it this lets you build your components without dependancies and packager build and components art and art and files art and art base you can mix components and files and packager build core and mootools js this is how you output to a file
1218680, this gem provides a clean a simple way to generate and maintain a collection guides or how to documents for your project installation  gem install guides first create a new working directory cd and tmp and guides new projectguides cd projectguides and guides preview from this point on it is up to you to customize the site and add additional guides once you are happy with the results you can generate the final site by running guides build adding a new guide  there are two steps required to add a new guide first you need to edit guides yml to add information about the new guide pay special attention to the url field you choose then you need to provide the guide s contents by creating a new file under and source and url textile guide authors and contributors  you can include an image field to provide an avatar for each of the contributors for example documentation team name john doe nick johndoe image credits and johndoe png description brief bio of j d as long as you place your avatar files under and assets and images and credits and  guides will find it and display it in the credits page contributing to guides  check out the latest master to make sure the feature hasn t been implemented or the bug hasn t been fixed yet check out the issue tracker to make sure someone already hasn t requested it and and or contributed it fork the project start a feature and bugfix branch commit and push until you are happy with your contribution make sure to add tests for it this is important so we don t break it in a future version unintentionally please try not to mess with the rakefile version or history if you want to have your own version or is otherwise necessary that is fine but please isolate to its own commit so we can cherry pick around it
369091, commonjs utils is a collection of various commonjs modules modules include this module returns a factory for creating custom error constructors the extend error export is a function errorconstructor name supererror creates a new error constructor for example myerror require commonjs utils and extend error myerror  error throw new myerror something went wrong this module allows for json style parsing with additional javascript constructs like undefined nan infinity and dates the following functions are exported parse str parse the provided json style object array or primitive literal string stringify value encodes the provided value as a json style object array or primitive literal provides conversion between javascript strings and base the base module exports encode str encode the provided string in base decode base decode a base string to a normal string more extensive information on commonjs utilities can be found here commonjs utils is part of the persevere project and therefore is licensed under the afl or bsd license the persevere project is administered under the dojo foundation and all contributions require a dojo cla
1256400, integration of the jqueryui widgets as angular widgets
1796257, this project was started because i needed an authenticating and routable proxy for redis the main feature is a high performance eventable pure ruby implementation of the complete redis wire protocol using the same interface as hiredis and reader best with ruby    works with    jruby and rubinius gem install ruby redis runs a server that looks and feels like the c redis server ruby redis require redis eventmachine run redis eventmachine connect       redis client subscribe and publish messages will call here redis onpubsub do and message and case message  when psubscribe end all commands implemented uniformly with methodmissing returns instance of redis command eventmachine deferrable pipelining is implicit redis set pi   redis get pi do and result and p result end redis blpop mylist   callback do and result and p result em stop end errback do and e and em stop raise e end require it before you connect require hiredis and reader require redis and synchrony redis synchrony be sure to pipeline commands when you can redis eventmachine connect       redis client synchronized requests will return result or raise exception sync redis synchrony repeat transaction until success reply check nil until reply redis watch mykey x sync get mykey toi redis multi redis set mykey  x and  redis badcmd redis get mykey and result and check result reply sync exec end redis close em stop p reply check ok  runtimeerror     string status reply runtimeerror error reply string bulk reply integer integer reply array multi bulk reply hash multi bulk reply to hgetall nilclass nil element or nil multi bulk trueclass  falseclass 
1623221, sql parser in javascript  this project provides a peg js grammar for sql syntax why i wanted to properly parse sql in javascript knocking down yet another thing in that long list of things that will be reimplemented in javascript see the and sql pegjs file or unlike previous hand coded attempts at sql parsing in javascript such parsing here is grammar peg based sql syntax  the sql syntax follows sqlite   documented syntax specifically from sqlite s art and syntax and bubble generator data tcl apache   this was made for you and me
1993564, php git server  this is an implementation of the simple git http protocol in php it allows you to serve git repositories from a simple php enabled server in situations where the git command is not available git is not required to be installed on the server there is no dependency on the git command thus it can be installed on a server where git is not available it serves most files directly from the files system and also generates the files and info and refs and and objects and info and packs  without the need for executing git update server info on the server
1472631, node index  this module is a implementation of a append only b and tree fully written in benchmark  and and create basic b and tree index that will be stored and and in memory all settings are default see below var index require index createindex and and store value in storage callback is optional index set key  value  function err and and your code here and and get value from storage index get key  function err value and and your code here and and remove value from storage index unset key  function err and and bulk op index bulk key  value    and and insert kv key and and remove kv  function err conflicts and and compaction index compact function err require index createindex order  and and maximum number of items in page and and tree s height depends on that storage require index storage memory and and place where all tree data will be stored createstorage  and and see more description below sort function a b return a null and and a b  a b   and and function that will be used to compare keys and and note that null is a system value and sort should always return negative and and result if first argument is null this software is licensed under the mit license copyright fedor indutny  permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1229099, complete node js implementation in gwt this implementation is targeted at node js v   and gwt    both of these versions are the latest stable versions at the time of this although the api covers all node js modules it has not been extensively tested yet it is very likely that errors exist all throughout the implementation please do not consider any of this complete until the first release is made supports gwt jre emulation custom linker to limit gwt bloat simple bootstrap to easily create applications does not require browser or browser emulation type safe callbacks and event handling proper junit emulation will come w and oophm debugger complete test cases larger jre emulation i e java io and java net better gin support test gwt exporter to see if it s possible to easily expose java based modules oophm debugger support script inclusion inside module xml most of the api is still untested no direct java debugging yet below explains how to build a simple hello world application with gwt node in order to build gwt node simply run ant build in the main directory this will build a jar file named gwt node jar in the build and folder to see the documentation run ant build docs this will place the javadoc in the build and docs and api folder the first thing every gwt node project needs just like every gwt project is a module xml file it needs to inherit the org gwtnode core module also the main entry point needs to be defined so assuming we choose to use the package examples for our module and examples helloworld for our code the examples and helloworld gwt xml file within may look like this xml version   encoding utf  module rename to helloworld and module all features of module xml files are supported with the exception of css and script inclusion now that the module xml file is present the entry point must be created extending from the org gwtnode core gwtnodebootstrap class in your entry point will make command line arguments available to you and give you the ability to provide an exit code using the gwtnodebootstrap is not required but recommended so the simple helloworld java class in the examples helloworld package will look like public class helloworld extends gwtnodebootstrap override public integer main string args process get stdout write hello world n return  the compiler present with gwt node is essentially just a wrapper around the gwt compiler the usage following the java invocation and classpath is as follows org gwtnode dev compiler supported gwt compiler args out dir module s the gwt compiler options that are not supported are gen localworkers war deploy and extra the out option is the directory in which to output the compilation result the compilation result is usually just one javascript file if you are compiling an individual module however if you compile multiple modules in this step or use public assets in your module definition this can include more files now we can compile our hello world application below is a sample ant target that will compile it and place it in the build folder this assumes gwt node jar gwt user jar and gwt dev jar are in the lib folder it also assumes the source is in the src folder target name compile java classname org gwtnode dev compiler fork true classpath and classpath and java and target note that this also sets the gwt compiler style to pretty this makes the code easier to read during debugging now that this is complete you can run the application by typing node build and helloworld js by default gwt uses a linker that loads the script via an iframe in a browser a k a std since we want to avoid using a browser a custom linker has been made that will ignore browser components this linker is the default linker used in the core module known as node also since we don t have a browser we cannot inherit com google gwt user user like most gwt modules do therefore we inherit only from com google gwt core core by default this means many gwt features cannot be used since they need something more than the core read the next section on how to use these features after installing jsdom and node htmlparser i recommend npm  you can now use several gwt features there are some settings you will need in your module in order for this to work at the top of your module along with the org gwtnode core inherits add an inherits for com google gwt user user in order to use this we need to use the single script linker the default iframe linker or even the cross site linker does not work with jsdom the single script linker only allows one permutation gwt will perform one permutation per browser it believes it is compiling for so assuming your module is helloworld gwt will compile this and produce two files clear cache gif and helloworld nocache js in order to initialize what looks like a browser the following js needs to be at the top of your js file require htmlparser document require jsdom jsdom window document createwindow document location window location navigator useragent jsdom if you are using ant the following will add this for you and remove the unnecessary files loadresource property old js and loadresource echo file build and helloworld js cdata require htmlparser document require jsdom jsdom window document createwindow document location window location navigator useragent jsdom here is a rundown of modules whether they are known to work with gwt node and jsnode and htmlparser http not working there is a same origin policy issue with jsdom here in working this provides date and number formatting inject not working this is the gin module and it is being looked into jsonp not working gwt appears to be appending this to the head element in another window and jsdom doesn t seem to provide a default head element logging not working just not dumping to the console for some reason user working most features such as the dom features are working not completely tested xml not working no browser based xml implementation in jsdom i e domparser many of these modules will function properly with just a little work there are several node js modules that can be used in conjunction with either emulation or deferred binding techniques to make this possible stay tuned creating wrappers for other modules is very easy to do simply create a class that extends javascriptobject and implements nodejsmodule then you can use jsni to talk js directly take a look at the other modules that are already implemented e g http to get an idea there are a few examples to demonstrate a few basic ideas in gwt node of the native gwt modules this is intended to show what does and doesn t work own directory
203692, json hpack is now jsonh check new repository  json hpack has been deprecated in favor or better practices to obtain good average compression over best performances for both client and server
487199,  uses the appropriate filter based on the file extension erb erb haml haml md markdown bluecloth sass sass  uses the filesystem unified datasource so metadata file or header is optional  rolls and archives articles to front page  generates tag pages  minimalist styling  uses sass  disqus integration know how to use terminal ruby haml sass and markdown from the command line gem install bundler git clone git and and github com and mgutz and nanocblog git yourblog cd yourblog bundle install compile the site cleans output and directory rm rf output works just as well rake clean compiles content and and copies static and to output and nanoc compile runs preview server and autocompile on page refresh nanoc aco edit these two files content and about md content and sticky md box content on front page delete articles to remove them from site then recompile and restart server to change the front page content and index haml to change the site layout layouts and default haml to style the site content and assets and style sass edit the markdown file created by running this command filename is written to console rake create article title hello world view your page after compiling or refresh in preview mode put static files into the static and folder instead of content and static and is copied to the output and folder on compile and preview edit these files config yaml atom xml erb use their service once registered simply uncomment and adjust disqusshortname in config yaml uncommenting this setting enables comments in articles copy output and to the public folder of your web server or if you use rsync configuration is in config yml rake deploy rsync hyphens in file names are converted to subdirectories in the output you decide how you want to organize your posts e g these files render to the same output file    post haml  and  and  and post html  and   post haml  and  and  and post html  and  and  post haml  and  and  and post html files may use rails naming conventions in which the first extension is retained for the output file and the second determines the template processor sitemap xml erb generate sitemap xml using erb processor if a single extension is used then the files are assumed to be css and html sass css html
6541, puppet an automated administrative engine for your linux and unix systems performs administrative tasks such as adding users installing packages and updating server configurations based on a centralized specification documentation and detailed installation instructions can be found online at the installation  generally you need the following things installed a supported ruby version ruby       and    are fully supported with a handful of known issues under    ruby    is supported on a best effort basis for agent use only other versions of ruby are used at your own risk and ruby       and    are not recommended for compatibility reasons the ruby openssl library for some reason this often isn t included in the main ruby distributions you can test for it by running ruby ropenssl e puts yep if that errors out you re missing the library if your distribution doesn t come with the necessary library e g  on debian and ubuntu you need to install libopenssl ruby  then you ll probably have to compile ruby yourself since it s part of the standard library and not available separately you could probably just compile and install that one library though see license file
1287430, text anarchism nanarchism is a political philosophy which considers the state undesirable unnecessary and harmful and instead promotes a stateless society or anarchy it seeks to diminish  id  annotations to  from  id politicalphilosophy  label political philosophy  to  from  id state polity  label state  to  from  id anarchy  label anarchy  annotations are stored in an ordered list a single annotation has the following form to  from  id socialist  label socialist from start positon of the string to end position of the string id wikipedia and dbpedia article name label the label of the link in the text what part of the text was linked the extractor can be run from the terminal or on a hadoop mapreduce as this is only an extention of the orgininal wikiextractor the usage is more or less the same python annotatedwikiextractor py help annotated wikipedia extractor extracts and cleans text from wikipedia database dump and stores output in a number of files of similar size in a given directory each file contains several documents in json format one document per line with additional annotations for the links in the article annotatedwikiextractor py options options k keep anchors do not drop annotations for anchor links e g anarchism gender c compress compress output files using bzip algorithm b  bytes put specified bytes per output file k by default o  output place output files in specified directory current directory by default help display this help and exit usage display script usage to convert the whole wikipedia dump to plain text use the following command bzip dc enwiki  pages articles xml bz and python annotatedwikiextractor py o extracted and if you want the output files to be compressed use the c option bzip dc enwiki  pages articles xml bz and python annotatedwikiextractor py co extracted and the output will be written to the folder specified in the output parameter and will have the following format anarchism anaphora to run the extractor on a hadoop mapreduce cluster the hadoop streaming api can be used mapreduce jodaiber hadoop jar hadooppath and contrib and streaming and hadoop    streaming jar file and mapper py mapper and mapper py input and test and resources and wikien xml output out in this case the xml dump must be available in hdfs or locally as is the case above in its uncompressed form in the case of wikipedia xml dumps it is rather unhandy to process uncompressed xml the uncompressed english wikipedia dump for example can be up to gb in size compared to about gb in its original gzip compression to process compressed xml dumps a change to hadoop xxx core jar is necessary these changes are documented as issue should be applied with care for the use case of this project the change is sufficient to make the necessary change in hadoop    replace the file hadooppath and hadoop    core jar with the jar file provided in annotatedwikiextractor and mapreduce and hadoop and hadoop    core custom jar the extractor can now be run with a custom version of streamxmlrecordreader mapreduce jodaiber hadoop jar hadoop and hadoop    streaming custom jar file and mapper py mapper and mapper py input and test and resources and wikien xml gz output out
1286268, airplay for java  a java application that enables playing compatible videos on airplay devices device such as the appletv v this application has been tested on windows mac and linux using the java  jdk from oracle user interface to control of playback of video java  and apache ant are required to build this project compile using ant then run the resulting jar by running the startup bat file on windows double clicking on the apjplayer jar file or by using the following command in a terminal java jar apjplayer jar on startup the application will detect airplay devices on your network and display them in the user interface copy a url into the play video entry field and then click the play video link if you have a firewall you may need to make sure that it will allow mdns broadcasts copyright c  carson mcdonald permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1848284, sniffer is an unoriginally named packet sniffer with the unique ability of determining which application a packet is coming from or going to at the moment it is little more than a prototype to prove that the idea works internals  like many packet sniffers sniffer is split into two applications the gui and the capture tool the gui launches the capture tool as root when needed and communicates with it via a cfmessageport the capture tool uses libpcap to do the actual packet capturing when libpcap tells the capture tool about a packet it uses libproc to search through all of the running processes trying to find a process with a socket that matches since multiple processes can have access to the file descriptor for a socket we simply return the first one found this may limit the usefulness of the tool for your needs but works well in most cases remove hardcoded use of en from the capture tool add more endpoint matching tcp and ipv udp etc remove hex fiend binary from the repository provide a decent user interface export capture as pcap sniffer is released under the gplv license redistribution  even though it is perfectly legal under the license i urge you not to distribute binaries of sniffer the problem is that libproc is not abi compatible across mac os x releases or even architectures of the same release distributing binaries could result in versions of the application that simply crash when launched on any version of the os other than the one you built for
1678496, this project is currently low on my priorities list and likely won t see a lot of attention in the near future it works with socket io   but since socket io   was essentially a rewrite it will require a fair amount of work to continue moving it forward this is an implementation of the socket io server built on top of netty currently it only supports  of the socket io protocols websocket flashsocket and xhr polling i m currently waiting for the socket io   release to come out before making any big changes as the   release is looking like a big rewrite i will take that opportunity to add in the other supported transports as well
501798, garrett is an example application for mirah development on android garrett is named after garrett p serviss the hero of edison s conquest of mars a ridiculous late th century space opera novel by garrett p serviss from from jruby prefix the commands with jruby s gem install pindah then you should be able to build the apk with rake rake debug this places tt garrett debug apk and tt in the tt bin and and tt directory you can install it to a connected device or emulator with tt rake install and tt or distribute for http download or whatever released under the apache   license copyright c   phil hagelberg charles nutter
1086973, simplegeo framework is an objective c client library for the simplegeo api suitable for use in both mac os x and ios applications here s an example of adding simplegeo framework as a submodule git submodule add b framework ios git and and github com and simplegeo and simplegeo framework git resources and simplegeo framework you may also choose to simply download the ios framework branch and drag the simplegeo framework folder into your xcode project git clone b framework ios git and and github com and simplegeo and simplegeo framework git resources and simplegeo framework once simplegeo framework has been placed in a subdirectory beneath your app drag it into your xcode project it will show up as a linked framework add the following additional frameworks to your project by clicking on your target choosing the build phases tab and using the and button at the bottom of the linked libraries section foundation coregraphics cfnetwork systemconfiguration mobilecoreservices corelocation simplegeo if it s not already present once simplegeo framework has been placed in a subdirectory beneath your app drag it into your xcode project it will show up as a linked framework add the following additional frameworks to your project by clicking on your target choosing the build phases tab and using the and button at the bottom of the linked libraries section coreservices systemconfiguration simplegeo if it s not already present you may download and modify the simplegeo framework source code to meet custom needs if you make edits that may be appreciated by others please submit a github pull request simplegeo framework depends on the following codebases an included script can get you up and running quickly to download and update dependencies simply run and scripts and update dependencies the script does the following to generate a usable simplegeo framework for ios from the command line cd project and ios make the resulting framework will appear in project and ios and build and release iphoneos building from the command line will create an ber universal framework built for armv and armv devices as well as the ios simulator to generate a usable simplegeo framework for os x from the command line cd project and mac make the resulting framework will appear in project and build and release to generate html docs and install a handy xcode docset cd documentation make
2063432, xcode  introduced code snippets small re usable chunks of code that could be inserted using xcode s native auto completion system the problem is xcode does little to nothing to help you manage these snippets there isn t an easy way of sharing them or managing them xcodesnippets aims to make snippets a little bit more manageable and sharable through the concept of snippet bundles if you aren t familiar with rubygems fire up a terminal and run the following command sudo gem install xcodesnippets if you already have some snippets in and library and developer and xcode and userdata and codesnippets and you will want to bring these under xcodesnippets control before you do anything else fortunately xcodesnippets will do this for you not only that but it will rename each snippet file to use a more meaningful title the one you gave it within xcode to migrate your exiting snippets run xcodesnippets migrate a list of your existing snippets will be displayed and with your confirmation they will be copied into the default xcodesnippet bundle removed from the xcode snippets directory then re linked back to the xcodesnippet versions see how xcodesnippets works for more code snippets are distributed as property list files with a codesnippet extension if you have created any custom code snippets in xcode  you will find them in your home directory under and library and developer and xcode and userdata and codesnippets and the files are named using guids any codesnippet file created from within xcode  or manually if you are comfortable editing the files yourself they are just plists are installable using xcodesnippets to install a snippet run the following from the terminal xcodesnippets install path to snippet file to install a bundle run the following xcodesnippets install bundle path to snippet bundle for a full list of commands and options run xcodesnippets help xcodesnippets stores all of it s snippets inside snippet bundles snippet bundles are simply a directory and package with a snippetbundle extension when creating and sharing snippets you are encouraged to give them a suitable name that indicates what the snippet does rather than using the guid naming scheme that xcode uses xcodesnippets installs all of it s snippets into and library and developer and xcode and userdata and managedcodesnippets standalone snippets are stored in a default snippet bundle snippets are then symlinked from their installed location to the xcode code snippets directory with an appropriate guid ensuring that they appear in xcode you may need to close your current project or workspace before installed snippets appear installing snippets and bundles directly from a url activating snippets from outside the managed directory great for using your own snippets from their local source repos generating snippet bundles from a folder of snippets ready for distribution commands for listing installed bundles and their contents commands for activating and de activating individual bundles and snippets this project is licensed under the terms of the mit license copyright c  luke redpath permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1619336, this file last update june th  yokul is an experiment to see if a local html canvas based implementation of the google charts api can be useful or advantageous it s early in yokul s development but i think the answer is already yes yokul reads the same query string you d normally send to google charts it then creates the same chart that google would have except does it locally on the client s machine using an html canvas easy to learn if you already know the google chart api then you know yokul too bandwidth a typical google chart can be anywhere from k to k in size for just one chart this chart image is also difficult to cache as charts are dynamic in nature yokul itself aims to be smaller than one chart is very cachable and once loaded can spit out countless charts on the client granted this bandwidth is between your user and google and not your own servers so you may not care faster early testing suggest loading a lot of charts think sparklines will be faster with yokul than with google charts no get or post limitations have a complex chart that requires you to send a post to google with yokul that s never an issue yokul will happily ingest query strings of virtually any length better debugging experience give yokul a place to dump debug and info and error info and it will happily do so makes it easier to see what s going on with your charts and is easier than debugging google charts fewer limitations google charts has restrictions such as a chart at most can be x pixels yokul doesn t care about that if you want a chart the size of new york the only limiting factor is your user s machine real time updates internally yokul is using an html canvas and draws the entire chart in a matter of milliseconds doing real time updates to data animation changing the chart type or size etc will be very easy this is one area that yokul will really shine once we get there privacy yokul is open source and completely runs on the client s machine no sending data off to a third party offline yokul does not require an internet connection it runs happily on a user s machine instead yokul can be used in offline apps mobile apps etc added complexity your app depends on yet another javascript library yokul is simple to set up but nowhere near as simple as just making a request to google charts higher browser requirements your user needs a modern browser to use yokul google charts are just images as far as the browser is concerned compatibility yokul at least initially is not looking to be  compatible with google charts for example maps qr codes and dynamic labels are probably not going to be supported see compatibility section below not a trivial drop in replacement see the section below on why yokul cannot be a truly drop in replacement for google charts your app will need to set up its chart images differently to use yokul not pixel perfect pixel perfection is not one of yokul s goals if you need your charts to be  pixel for pixel the same as google s then yokul may not be for you yokul for sure will provide a fully equivalent and equally featured chart it just might make your title s a pixel bigger or the labels might not quite be the same gray etc etc playing catch up if and when google changes the chart api yokul will be forced to play catch up if you need truly cutting edge google charting then it be better to stick with the real deal as of this writing yokul is very young and nowhere near ready for primetime so far only vertical bar charts are supported bvg bvs bvo in google chart terminology  and only a subset of features at that the overall goal is to support all normal chart types in their entirety all bar line pie scatter etc type charts yokul has no intention of supporting qr codes maps radar charts etc however who knows that may change in the future when a browser encounters an image that has its src attribute specified it immediately fires off a connection to go and grab that source i know of no way to prevent this if you do please contact me therefore you can t simply reference yokul and have all your charts magically become local instead you must get rid of the src attribute and provide the query string in another fashion such as an html data attribute yes this is a significant limitation but not significant enough to stop yokul in its tracks in my humble opinion change all of your google image src attributes to data src attributes call yokul convertallimages here are my plans for yokul development get vertical bar charts  implemented about ohhhhh  of the way there as of this writing from there extend support for pie line and scatter charts implement a small reflection api that lets yokul tell you what chart types and parameters it has implemented so far offer the ability to only pull in the pieces of yokul you need to minimize the script even more for example leave out pie charts if you have no need for them demos documentation all that good stuff soon yokul is currently licensed under the bsd license it s intended to be used anywhere commercial or open source apps if you don t like this license for whatever reason feel free to contact me
847268, var sys require sys  fs require fs  compiler require and src and scsscompiler fs readfile dirname and and blog scss  function err scssfile compiler compile scssfile tostring  function err css if err sys puts sys inspect err else sys puts css   the compile function takes a string and returns another string with the file s css css selectors nested rules variables fixed mixins css selectors variable and mixin names parameterized mixins functions full css selector implementation for starting and continuing the haml and sass project i d also like to thank the rest of the people awesomeness copyright c  brian mavity permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions except as contained in this notice the name s of the above copyright holders shall not be used in advertising or otherwise to promote the sale use or other dealings in this software without prior written authorization the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
918130, express csrf cross site request forgery protection for express node js framework  express csrf is a simple helper for enabling cross site request forgery protection in express applications it provides a csrf token to views using dynamichelpers which is also saved in the session with a middleware check the csrf token in the request body is checked against the one in the session to make sure that they match recommended installation is with npm to add express csrf to your project do npm install express csrf you can also install express csrf as a git submodule var express require express  csrf require express csrf app express createserver app dynamichelpers csrf csrf token app use express cookieparser app use express bodyparser app use express session app use csrf check app listen  in your view form input type hidden name csrf value csrf and form linus g thiel lt linus hanssonlarsson se gt the mit license copyright c  hansson amp larsson lt info hanssonlarsson se gt permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1604938, doctrine activerecord with twig  this is an experiment for building activerecord functionality on top of doctrine using the twig templating engine whether it is called propel or not is irrelevant installation  clone the propel repository or if you use an old version of git pre    cd propel git submodule update init recursive you re good to go from the root of the project type php tests and demo and demo php this outputs the generated code for a base activerecord class based on a doctrine orm mapping classmetadatainfo instance working activerecord builder no handling of relations for now generated entities are empty classes extending generated base entities extending nothing getter setter generation metadata loader access to the entitymanager from within an entity fromarray and toarray isnew ismodified etc activeentity methods save  delete basic behavior support ability to alter the data structure ability to modify the generated code pretty much everywhere timestampable behavior example template customization via partials no command line utility for now you need to build classes by hand using the builders example build and and register autoloaders etc use propel builder orm baseactiverecord use doctrine orm mapping classmetadatainfo metadata new classmetadatainfo bookstore book metadata mapfield array fieldname id  type integer  id true metadata mapfield array fieldname name  type string metadata mapfield array fieldname status  type string  default published and and more metadata description builder new baseactiverecord metadata echo builder getcode this generates the following code namespace bookstore base use doctrine orm mapping classmetadata use propel activeentity base class providing activerecord features to book do not modify this class it will be overwritten each time you regenerate activerecord class book extends activeentity var integer protected id var string protected name var string protected status published var doctrine tests orm tools entitygeneratorauthor protected author var doctrine common collections arraycollection protected comments class constructor initializes to many associations public function construct this comments new doctrine common collections arraycollection get the id return integer public function getid return this id set the id param integer id public function setid id this id id get the name return string public function getname return this name set the name param string name public function setname name this name name get the status return string public function getstatus return this status set the status param string status public function setstatus status this status status get the related author return doctrine tests orm tools entitygeneratorauthor public function getauthor return this author set the related author param doctrine tests orm tools entitygeneratorauthor author public function setauthor author this author author get the collection of related comments return doctrine common collections arraycollection public function getcomments return this comments set the collection of related comments param doctrine common collections arraycollection comments public function setcomments comments this comments comments add a comment to the collection of related comments param doctrine tests orm tools entitygeneratorcomment comment public function addcomment comment this comments add comment remove a comment from the collection of related comments param doctrine tests orm tools entitygeneratorcomment comment public function removecomment comment this comments removeelement comment set a property of the entity by name passed in as a string param string name the property name param mixed value the value throws invalidargumentexception if the property does not exists public function setbyname name value if name id return this setid value  if name name return this setname value  if name status return this setstatus value  throw new invalidargumentexception sprintf the property s does not exists  name retrieve a property from the entity by name passed in as a string param string name the property name return mixed the value throws invalidargumentexception if the property does not exists public function getbyname name if name id return this getid  if name name return this getname  if name status return this getstatus  throw new invalidargumentexception sprintf the property s does not exists  name load the metadata for a doctrine orm mapping driver staticphpdriver param classmetadata metadata the metadata class static public function loadmetadata classmetadata metadata metadata setidgeneratortype classmetadata generatortypeauto metadata setchangetrackingpolicy classmetadata changetrackingdeferredexplicit metadata setcustomrepositoryclass bookstore bookrepository metadata setprimarytable array name book metadata mapfield array fieldname id  type integer  id true columnname id   metadata mapfield array fieldname name  type string  columnname name   metadata mapfield array fieldname status  type string  default published  columnname status   metadata maponetoone array fieldname author  targetentity doctrine tests orm tools entitygeneratorauthor  mappedby book  cascade array  fetch classmetadata fetchlazy joincolumns array array name authorid  referencedcolumnname id  unique true   metadata mapmanytomany array fieldname comments  targetentity doctrine tests orm tools entitygeneratorcomment  cascade array  fetch classmetadata fetchlazy jointable array name bookcomment  joincolumns array array name bookid  referencedcolumnname id   inversejoincolumns array array name commentid  referencedcolumnname id     metadata setlifecyclecallbacks array postload array loading  preremove array willberemoved   populates the entity from an associative array this is particularly useful when populating an object from one of the request arrays e g post this method goes through the column names checking to see whether a matching key exists in populated array if so the set columnname method is called for that column param array array public function fromarray array if isset array id and and arraykeyexists id  array this setid array id  if isset array name and and arraykeyexists name  array this setname array name  if isset array status and and arraykeyexists status  array this setstatus array status  exports the entity to an associative array return array public function toarray return array id this getid  name this getname  status this getstatus   extending activeentity is optional but gives the same api as propel save  delete  isnew  etc
547136, and dimension retrieval inspired by a blog post from for a variety of useful and useless purposes when scripting in osx it might be handy to know which of the spaces virtual desktops you re currently on you may also wish to programmatically switch spaces from the command line has one possible solution which uses the assistive devices support to rip the value from the menubar icon but this is really horribly hacky and pretty slow at least for me it takes at least a second and more like  or  typically an alternative idea is presented on which uses some carbon api calls to fetch a window handle of the currently focused app which is presumably on your current space  and then poke around in its internal metadata dictionary to find its workspace id the latter is the method implemented here  download the compiled binary  double click to mount the image file  drag the spaces util onto the binaries folder  enter your password if prompted the binaries folder link points to your and usr and local and bin  which you may require administrator rights to write to  after copying eject the disk image which can now be deleted  if you do not want to install the program globally copy it to somewhere in your local path compile with and run with and spaces util options or copy it to somewhere in your path there is currently no install target in the makefile if you have copied the program to a directory in your path  you can invoke it with simply spaces util options otherwise you must navigate to the compile or copy directory or invoke it with a full path a animates space transition only when s is used q quiet mode prints a single number with the current space id qq prints no output at all only useful with r or s r encodes the space id in the process return value n returns the dimensions of the spaces configuration s num sets the current space to num any fetch configuring arguments are ignored when used in conjunction with s the program should terminate immediately printing a string to stdout which matches the regex and current space id d and and if you pass the r option the return value of the program is set to the current space number for ease of use in scripting for example in bash and spaces util r qq echo will print the space number apps if the space cannot be determined for any reason it will be returned as   if you call spaces util with the q option it will enter quiet mode and only print the space number matching and d and and the silent version qq will print nothing to stdout  and any error messages will be printed to stderr silent is generally only useful if you re switching spaces or planning to use the return value the n flag returns one of two strings depending on whether quiet mode is enabled if quiet is enabled it will print and dx d and  where each number is a single digit in the range   if quiet is not enabled the output is more verbose and spaces dimensions d rows d columns and in silent mode nothing is printed at all the return value is the current space number if using r  or  for success it is set to   for any failure spaces util now supports switching to other spaces via the s option specifying s num on its own will switch directly to that space without any transitional animation the a animate flag enables the usual slide transition effect quiet and silent mode can be used with with s option otherwise it will print a message and switched to d and and to stdout  or an error message to stderr if it fails the return value is not set to the space number when using the set feature it is either  for successful operation  or  generally represented as  on error attempting to set the space number beyond the number of spaces available will result in an error spaces are numbered from  top left  to n where n is rows columns of your spaces setup i have no idea what happens if spaces are disabled or if you manage to invoke it from the spaces expose screen or other weird edge cases submissions welcomed it uses a couple of undocumented or private api calls so there s no guarantee it ll work in future versions of osx it s survived fairly rigorous use on leopard     and the fetch functions apparently work on snow leopard too the setting functions there are as yet untested if you find it works and doesn t work please leave me a message or add something to the page so i can update this statement with better data currently there s no binary available if there s any interest i can build a universal binary and add it here somewhere message me if you can t build it yourself
531453, py videodownloader  python module and script for downloading video source files from the major online streaming sites youtube vimeo etc videos from various providers can be specified using the following command line usage videodownloader py p provider f fmt d dir videoid videoid options h help show this help message and exit e ext ext ext manually override video extension f format format format format of video to download run with no video ids for a provider specific list t title title title manually override video title p provider provider provider online provider from where to download the video available vimeo  youtube debug enable debugging output the following two commands will download a p video from vimeo and a p one from youtube videodownloader py p vimeo f hd  videodownloader py p youtube f  tgbnymzvqy to see a list of the formats supported by a provider run the command without any video ids videodownloader py p youtube videodownloader    by jake wharton jakewharton gmail com format description   x gp and amr mono gp  x gp and aac mono gp  x h  and aac stereo mp  x and x h  and aac stereo mp  x h  and aac stereo mp  x and x h  and aac stereo flv  x h  and aac stereo flv  x h  and mp mono flv  x h  and mp mono flv omitting a format will automatically download the best format available for that video from the provider developed by  jake wharton jakewharton gmail com git repository located at chexov for py youtube downloader  the inspiration and basis for this module and script check it out at arlo faria improvement of the token resolution and title parsing for youtube videos copyright  jake wharton licensed under the apache license version   the license you may not use this file except in compliance with the license you may obtain a copy of the license at unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license
1622773, the ticoffeeplugin simply scans your titanium project s resources folder at build time and looks for files with the coffee extension when it finds such files it runs the coffeescript compiler coffee c to produce a javascript file of the same name e g  win coffee would become win js requires python   because the hashlib module is used first of course you ll need the coffee command available on your system if you can t go out to a command line and terminal and successfully execute coffee  then be sure to setup coffeescript correctly also  if you re on os x and you used homebrew to install coffeescript and node js gui applications such as titanium developer and titanium studio which are precisely the apps that launch your titanium project s build process and thus this plugin might not be able to successfully execute coffee because and usr and local and bin is not in the path by default for gui apps and changes to and profile  and etc and paths  etc  are not useful for gui apps the easiest solution is to simply symlink coffee and node in and usr and bin  which is in the path sudo ln s and usr and local and bin and node and usr and bin and node sudo ln s and usr and local and bin and coffee and usr and bin and coffee in the folder which houses your titanium sdks on os x this would be and library and application support and titanium  create a plugins and ticoffeeplugin and   folder put the plugin py from this repository into that folder so on os x you would have this file and library and application support and titanium and plugins and ticoffeeplugin and   and plugin py next you need to tell your titanium project to run this plugin when the titanium build scripts build your project build time plugins for titanium projects are invoked if the plugin is registered in the project s tiapp xml file for the ticoffeeplugin you could do it like this and plugins the sample and folder contains a very simple app coffee as a proof of concept you can copy that file into a new project then run the project to see how it works to do that successfully you ll also need to update your tiapp xml following the example inside tiapp xml example your coffee files will also end up in the application package that gets delivered to the device and simulator and emulator unfortunately the titanium build plugins don t currently get notified when the packaging is about to occur they are just notified once before the build begins of course your coffee files are plain text and the packaging at least on android but i imagine on ios as well compresses them there might be implications when using the upcoming fastdev feature for android whereby only changed files are served up to the application being tested on device or in the emulator because the updating of a coffee file is not going to be useful unless the javascript also gets generated you would have to re build more often that you would if you were just updating javascript files the difference may not be too significant however we ll see once the fastdev feature is released you will not be able to take advantage of titanium studio s code assist features code completion etc if you re tying in coffeescript if you have a js runtime error the line number it gives you most likely will be considerably off from the line number in your coffee file the code is copyright  by william dawson and made available under the apache   license please see the license file that accompanies the source and the licensing declarations at the top of each source file this is a private project of mine and currently not supported by appcelerator if you have issues please file them in the github issues section of the repository and i will try to get to them in a timely fashion better yet fork and improve
188261, mootools filemanager  a filemanager for the web based on mootools that allows you to pre view upload and modify files and folders via your browser browse through files and folders on your server rename delete move drag drop  copy drag and hold ctrl and download files view detailed previews of images text files compressed files or audio content nice user interface upload files via fancyupload integrated feature option to automatically resize big images when uploading use it to select a file anywhere you need to specify one inside your application s backend use as a filemanager in tinymce or ckeditor provides your client with the most possible convenience create galleries using the gallery plugin history and state management backend php support for modalias and modvhostalias and otherwise nonlinear mapped filesystems auto adjusts directory views balancing performance and the amount of data shown unsuring optimum user experience sometimes illegal character error  mootools core   js line  when uploading multiple files how to use  open the demos and folder and have fun first you need to include the follwing scripts source and filemanager js source and uploader and fx progressbar js source and uploader and swiff uploader js source and uploader js source and gallery js if you want to create a gallery see example in the demos and index html language and language en js or the language s do you need then you need to modify the demos and manager php or demos and selectimage php to set up your upload folder etc see the demos and index html for examples but basically you need to do the following var myfilemanager new filemanager url path and to and the and manager php  assetbasepath and assets  myfilemanager show url string the base url to a file with an instance of the filemanager php class filemanager php  without querystring assetbasepath string the path to all images and swf files used by the filemanager directory string relative to the directory set in to the filemanager php class can be used to load a subfolder instead of the base folder language string defaults to en the language used for the filemanager selectable boolean defaults to false if true provides a button to select a file destroy boolean defaults to false whether to allow deletion of files or not rename boolean defaults to false whether to allow renaming of files or not download boolean defaults to false whether to allow downloading of files or not createfolders boolean defaults to false whether to allow creation of folders or not filter string if specified it reduces the shown and upload able filetypes to these mimetypes possible options are image jpg jpeg bmp gif png video avi flv fli movie mpe qt viv mkv vivo mov mpeg mpg wmv mp audio aif aifc aiff aif au mka kar mid midi mp mp mpga ra ram rm rpm snd wav tsi text txt rtf rtx html htm css as xml tpl application ai bin ccad class cpt dir dms drw doc dvi dwg eps exe gtar gz js latex lnk lnk oda odt ods odp odg odc odf odb odi odm ott ots otp otg pdf php pot pps ppt ppz pre ps rar set sh skd skm smi smil spl src stl swf tar tex texi texinfo tsp unv vcd vda xlc xll xlm xls xlw zip hideclose boolean defaults to false whether to hide the close button in the right corner hideonclick boolean defaults to false when true hides the filemanager when the area outside of it is clicked hideoverlay boolean defaults to false when true hides the background overlay hideqondelete boolean defaults to false when true hides the dialog asking are you sure when you have clicked on any delete file and directory button listpaginationsize integer defaults to  when non zero add pagination i e split the view of huge directories into pages of n items each this speeds up rendering and interaction listpaginationavgwaittime integer defaults to  when non zero enable adaptive pagination strive to on average not to spend more than this number of milliseconds on rendering a directory view this is a great help to adapt the view to match the power of your clients machines propagatedata object defaults to empty specify extra elements all of which will be sent with every request to the backend options if uploader is included upload boolean defaults to true uploadauthdata object defaults to empty extra data to be send with the get request of an upload as flash ignores authenticated clients resizeimages boolean defaults to true whether to show the option to resize big images or not oncomplete path file legalurl curdir url fired when a file gets selected via the select file button onmodify file fired when a file gets renamed and deleted or modified in another way onshow fired when the filemanager opens onhide event fired when filemanager closes onpreview src event fired when the user clicks an image in the preview ondetails json event fired when an item is picked form the files list supplies object e g width  height  onhidepreview event fired when the preview is hidden e g when uploading see assets and connector and filemanager php and assets and connector and fmgralias php for all available server side options note that you can configure these items by changing the related php define mtfmthumbnailjpegquality default  the jpeg quality for the largest thumbnails smaller ones are automatically done at increasingly higher quality to ensure they look good mtfmnumberofdirlevelsforcache default  the number of directory levels in the thumbnail cache set to  when you expect to handle huge image collections note that each directory level distributes the files evenly across  directories hence you may set this level count to  when you expect to handle more than k images in total as each image will have two thumbnails a px small one and a px large one as flash and therefore the uploader ignores authenticated clients you need to specify your own authentication and session initialization this is taken care of by filemanager itself so you don t need to bother except provide a tiny bit of custom code in the uploadisauthorizedcb callback function on the serverside manually initializing and starting your session based authentication more specifically flash does not pass along any cookies of itself hence the filemanager will place the cookies in the get uri query section for extraction by the server you may pass along additional key value elements to the server during upload by adding those items in the uploadauthdata options section these will all be passed along in the get url query section any key value elements included in the propagatedata options section are sent to the server as part of every request uri action and will show up in the get array where you can extract them fm now provides a server side callback hook for each request so you can apply your own business logic to determine if a given file or directory user context mix is indeed permitted to be viewed and detailed and thumbnailed and uploaded and created and deleted and moved and renamed and copied and downloaded these hooks can be configured as part of the server side options for the backend and filemanager instance for more info and a sample see the demos and manager php and demos and selectimage php files server side authorization hooks uploadisauthorizedcb downloadisauthorizedcb createisauthorizedcb destroyisauthorizedcb moveisauthorizedcb viewisauthorizedcb detailisauthorizedcb thumbnailisauthorizedcb
650820, showoffpad  ipad app to present showoff presentations from it will allow you to sync a showoff presentation that is online to your ipad then let you serve the presentation off the ipad itself it supports the external monitor dongle so you can plug a projector into the ipad directly you can swipe or tap the image to advance the slides it shows how far through the slides you are how much time has elapsed and notes for each slide it also has a drawing mode so you can draw directly onto the presenter display madden style boom  authoring edit saved presentations create new presentations publish api so other html based presos could use it get it on the app store
1169129, highchart library for codeigniter  what is highcharts  highcharts is a charting library written in pure javascript offering an easy way of adding interactive charts to your web site or web application highcharts currently supports line spline area areaspline column bar pie and scatter chart types about this library  note this library is still in early development stage any bug report and and or ideas and improvements are welcome complete documentation will be available soon features generate charts from active record result use template s from config file s share global options for your charts generate multiples charts in one shoot output embedable js and html json string or array magic set and unset and push methods for all first level highcharts options object magic methods  all first level highcharts options can be set and push and unset  so if the api is improved new methods will be available methods parameters should be arrays or object this highcharts setglobal array useutc false native methods  settitle title  subtitle setaxistitles xtitletext  ytitletext renderto divid without settype bar or area or setdimensions width  height setserie array options seriename setserieoptions array options seriename pushseriedata value  seriename pushcategorie value  axis x or y fromresult array options get bool getarray bool render clear bool take a look to the source code for more informations  implement choice of jquery or mootools for domready generate result form html table lib more shorcut methods highcharts infos  highcharts interactive javascript charts for your web pages
2504579, to install redis as service just compile project sources put it in the same folder with redis server and redis cli executables and then execute sc create name binpath binpath configpath start auto displayname redis name name of service instance ex redis instance binpath path to this project exe file ex c program files redis redisservice exe configpath path to redis configuration file ex e redis redis conf to uninstall service simply execute sc delete name where name name of already installed service instance for testing purposes you can run redis service in console mode like binpath configpath
260020, the project contains two targets the villainousstyle framework which can be included in your application the macdemo application which demonstrates how to use the framework including multiple stylesheets requirements  mac os x   and  bit only currently mostly because it hasn t been fully tested in  bit clone or download the repository and build the framework you can also build and run the test application stylesheets  vsstylesheet is an abstract superclass for a set of styles subclass it and add methods for each style you wish to add you will likely want to create a protocol for your styles to implement to ensure that your stylesheet implements all the necessary styles there is a global stylesheet which can be thought of as the active stylesheet call and vsstylesheet setglobalstylesheet to change the active theme which will fire a vsstylesheetchangednotification when that gets fired you ll want to tell your views to update their styles and redraw styles affect drawing and positioning most will affect the next vsstyle objects in the chain vssolidfillstyle fills the current shape with a solid color vslineargradientfillstyle fills the current shape with a gradient between two colors vsreflectivefillstyle fills the current shape with a glossy style gradient between two colors borders vssolidborderstyle draws a border around the current shape with a solid color vsbevelborderstyle draws a beveled edge border for a d effect around the current shape vsfourborderstyle draws a border around the current shape with four colors one for each edge shadows vsshadowstyle draws a shadow behind content with a given color blur and offset vsinnershadowstyle draws a shadow inside the content with a given color blur and offset positioning vsboxstyle adds a margin or padding to the content area vsinsetstyle adds edge insets to the content area content vstextstyle draws text inside the current shape see vsstyledelegate vsimagestyle draws an image inside the current shape see vsstyledelegate vscontentstyle calls a delegate method to draw arbitrary content see vsstyledelegate clipping vsmaskstyle clips the drawing area to an image mask vsshapestyle clips the drawing area with a vsshape object shapes affect the fills and borders but do not clip the content styles vsrectangleshape vsroundedrectangleshape vsroundedleftarrowshape a rounded rectangle with a left facing arrow vsroundedrightarrowshape a rounded rectangle with a right facing arrow future ideas  iphone static library cappuccino library file based stylesheets that can be read and written from vsstylesheet objects gui builder for styles more styles screenshots  licensed under the apache license version   the license you may not use this file except in compliance with the license you may obtain a copy of the license at unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license
1776253, the cssanimation object provides the events the browser vendors left out this allows you to bind event handlers to cssanimationkeyframe events and perform any additional code that needs to happen at each keyframe note this won t work as well on mobile webkit until webkitrequestanimationframe is implemented safari  chrome  firefox  ios see above caveat about mobile webkit a browser capable of rendering css animations create the css animation keyframes in css as you would normally for example with safari and chrome webkit keyframes boxrotate webkit transform translated    background dae webkit transform translated px px  rotate deg background daab webkit transform translated px px  rotate deg background bda webkit transform translated px   rotate deg background da  webkit transform translated    rotate deg background dae next trigger the animation on a specified dom element var elem document getelementbyid animateme and and trigger the animation named boxrotate with duration ms cssanimation trigger elem boxrotate   there is also a jquery plugin provided for convenience cssanimation jquery js animateme cssanimation boxrotate   you can then listen for cssanimationkeyframe events the same way you d listen for any other here s an example using jquery animateme bind cssanimationkeyframe  function event var text switch event originalevent keytext case  text down darr break case  text right rarr break case  text up uarr break case  text left larr break case  text click me break text html text you can change this if you want but you may begin to miss events if you really want to change this you can by passing in an option to either the native function or jquery plugin and and native cssanimation trigger elem boxrotate   base  and and raise events for keyframes at  increments and and jquery elem cssanimation boxrotate   base  and and raise events for keyframes at  increments the browser can optimize concurrent animations together into a single reflow and repaint cycle leading to higher fidelity animation for example js based animations synchronized with css transitions this enables us to work out when a keyframe ought to have occured and raise a suitable event contribution is welcomed but to make it easier to accept a pull request here are some guidelines please make all changes into the source files found under js and src you can then use the build tool php script found at and build and build to create the concatenated and minified files
1135583, nina  is a web microframework for the net platform inspired by sinatra it includes several aspects that go futher beyond sinatra such as an abstract pluggable and extensible infrastructure an important note is that nina is feature complete meaning that unlike open source projects that forge themselves online it was brewed for a while before opening up to public its api stable and well thought out nina will not be a moving target for you and you can count on it nina discussion group a simple to use dsl a simple programming model performance as a goal multiple pluggable view engines many scenarios covered by json and xml serialization support advanced cache control for a restful ecosystem automatic etagging and last modified controls nina is intentionally build against the net   runtime in order to afford a lower barrier of entry a port of nina for the   runtime will be available shortly razor support note i chose to use razorengine which is an open source abstraction of a razor view engine without using the full mvc stack in that implementation view data is exposed as model i chose to align other views and now each view has its view data accessible by model and viewdata members except razor to put some code into words get book xml  m c filters etag  return xml new model get etagged and crc and book xml  m c return xml new model etagged get etagged and md and book xml  m c return xml new model etagged digest md get etagged and text  m c return text thanks etagged get book and name  m c return view views and foo  new model created c request url tostring etagged  nina keeps rest easy as it was planned to be supporting all verbs through native get guest and name  mc text hello and m name post and  mc view views and blog  new blog put and id and comments  mc json getblogwithcomments delete and files and id  mc file confirmation inspired by sinatra nina has a compact and friendly dsl that you ll like from the start post and  mc var url urls save c request form url return text string format html body your url nina doesn t try to be everything it does try to give you scenario based programming nina lets you worry about your own code by giving you less decisions to make in order to be more friendly sometimes there is and should be only one way to do it high performance  under the hood nina is a highly optimized microframework with comprehensive features and a neat dsl to put it into numbers here is the typical string rendering benchmark nina and net  iis requests per second   and sec mean sinatra and ruby   thin requests per second   and sec mean although benchmark comparisons are evil biased and so forth it does give a good feel about running a lightweight framework on windows and iis get started  a tutorial is in progress as well as blog series explaining nina s underpinnings no pun intended for now there are several examples for using nina to quickly get started you can take tinyurl demo as a project per se and start hacking from there to see a full fledged real world application check out panda a nina powered web log backed with mongodb with slugs tagging and comments disqus the tinyurl example  here is a self contained complete nina application for a tiny url website nice isn t it check out nina demo tinyurl to play with it live and and tinyurl cs public class tinyurl nina application private static readonly urls urls new urls public tinyurl   post and  mc  var url urls save c request form url  get and tinyurl  m c redirect urls get m tinyurl  public class urls private readonly list string urls new list string public string save string s  urls add s return urls count  tostring  public string get string u  var i int parse u return urls i  contributors  dotan nahum jodnot  matt burton mattburton  future plans  currently nina is feature complete it should cover most of the scenarios building restful web applications however i do have several more extras on the way which are always initiate a testing roadmap that will not affect nina s performance add view engines add tooling support nuget contribute  nina is an open source project therefore you are free to help improving it there are several ways of contributing to nina s development build apps using nina and spread the word bug and features using the issue tracker  submit patches fixing bugs and implementing new functionality create a nina fork on github  and start hacking extra points for using githubs pull requests and feature branches this code is free software you can redistribute it and and or modify it under the terms of the apache license see license txt copyright  copyright c  dotan nahum dotan paracode com
1371187, please note that this repository depends on the following two submodules to compile properly from souce add a way to close a tab from the ui close all matching tabs support favicons not placed in the root directory of a server highlight matched words and phrases in custom ui in safari and chrome firefox version looking into this we ll see search page content as an asynchronous web worker process as well as title and url unlikely to happen anytime soon
980283, create your own photo and party booth using iphone ipad and a laptop user can see the live view on the ipad which is feed from the iphone s camera then user can touch the screen of the ipad to trigger the iphone to take photo the photo then will be uploaded to a designated ftp server so basically it s a wireless camera for ipad like camera for ipad app and hdcam for ipad app but using wifi instead of bluetooth i released this source code not only so that anyone who wants to know how to make this kind of app can learn from it but also so that i can learn from those who are kind enough to fix and make the code better hope it s useful
465900, empostgresql  an eventmachine aware driver for using postgresql with activerecord requirements  ruby   eventmachine    postgres pr    rails    tested with these version other versions might work ymmv you cannot have the pg gem installed activerecord prefers the pg gem but this code requires the postgres pr gem to be loaded i m not sure if there is a way to make them live together in harmony you ll need to ensure your code is running within an active fiber using the fiberpool defined in fiberpool rb if you are running rails in thin the following code is a good place to start to figure out how to do this list this gem in your config and environment rb config gem postgres pr  lib false config gem empostgresql  lib false and update your config and database yml to contain the proper adapter attribute adapter empostgresql  mike perham mperham at gmail com
2068529, a free console browser for online videos written in python with vim like keybindings if you are already familiar with vim the controls should be pretty intuitive there are two modes command mode and browse mode in command mode you can search for videos by typing s videosearch and hitting enter this will generate a list of videos and switch to browse mode in browse mode you can download the videos by hitting enter and play them with p to abort the download of a video select it and hit a note that this won t delete the partially downloaded file in fact you can resume the download if you hit enter again you can also open the youtube page by hitting o or directly stream the video with mplayer by hitting s ctrl n lists the next videos of your previous search and ctrl r clears the screen to search for the string something in the current video list type and something and hit n to get to the next or n to get to the previous item with the command videos or just v all downloaded videos will be listed a pattern can also be specified so v monty will list all videos containing the substring monty since local searches are case insensitive the commands v monty and v monty or and monty and and monty are equivalent downloaded videos can be deleted with the command delete warning no undo all downloaded videos are stored in and videotop and videos for streaming you might want to add something like this in your mplayer config and mplayer and config  the values depend on your internet connection default cache   mb cache cache min  play if  of the cache is loaded in memory table border  urwid  to provide an ncurses frontend gdata  and youtube dl  to search for and download youtube videos optional mplayer  to play the downloaded videos archlinux forums 
516229, create a library to support the twitter streaming api the reconnect strategy oauth authentication and error policies specified on their documentation basic get oauth support post doesn t work yet apache httpclient based back off strategy built in so in the case of unexpected errors the library will reconnect tcp errors start at  miliseconds and cap at  seconds http errors start at  seconds and cap at  seconds easy to implement your own parsing and processing of tweets  cd scala twitterstreamer  edit config and twitterstreamer conf and add your twitter username and password important  and sbt update  and sbt run  select one of the two sample clients  cd scala twitterstreamer  edit config and twitterstreamer conf and add your twitter username and password important  and sbt update  and sh example and runexample sh  watch the tweets on your screen create a client and run it import com streamer twitter  val twitterclient new basicstreamingclient username password processor twitterclient sample sample returns a random sample of all public statuses filter returns public statuses that match one or more filter predicates firehose returns all public statuses the firehose is not a generally available resource links returns all statuses containing http and https the links stream is not a generally available resource retweet returns all retweets the retweet stream is not a generally available resource sites stream returns all events for the users you specify to follow and that oauth ed to your application first you need to define what you want to do with the stream here s an example that just prints every line we get to stdout import com streamer twitter  import com streamer twitter oauth  import com streamer twitter config  import java io inputstream import java io inputstreamreader import java io bufferedreader class customprocessor extends streamprocessor override def process is inputstream unit val reader bufferedreader new bufferedreader new inputstreamreader is utf  var line reader readline while line null println line line reader readline  is close object testoauthstream def main args array string val processor new customprocessor val consumer consumer config readstring consumer key  config readstring consumer secret val token token config readstring access token  config readstring access secret val twitterclient new oauthstreamingclient consumer token processor twitterclient sitestream set  and and the ids we are going to track they should have oauth ed to us
2908625, php mp svg waveform generator generates svg waveform images for a given mp file by converting it to wav and processing amplitude points and plotting them as an svg xml file web server apache etc unless modified to run as a command line script copy to a location on your web server ensure that the lame command is accessible and executable from that directory for windows systems place the downloaded exe and dll as linked above into that same directory or modify the script ensure the directory support write persmissions or specify an alternate temporary output directory that does modify waveform css to change the display colours and properties of your svg waveform the stereo waveform option allows you to generate a single svg image with both left and right audio channels separately the detail of the waveform can be adjusted by modifying the detail constant at the top of the script the lower the number the less data points are skipped thus resulting in higher detail waveform the most time consuming factor of the script is the lame encoder which first converts the uploaded mp into a  bit mono  khz mp and finally to a wav audio file unfortunately this doesn t seem to be possible to perform this in one step with the lame encoder if this script is to be modified to generate waveforms on the fly for the same mp multiple times i recommend either storing a copy of the final wav file or modifying the script to keep a dataset of the amplitude points so that the waveform can be redrawn much more quickly please see the license file
1235421, ruby examples and rackapp rb  count  mean  ms min  ms max  ms stddev  ms request histogram buckets in ms value and and count  and and   and and   and and   and and   and and   total and and  gem install rack aggregate in your rack app and rackup file require rack and aggregate use rack aggregate in your gemfile gem rack aggregate  require rack and aggregate in development rb environment config middleware use rack aggregate configurable aggregate path custom sampling rate no need to log every request other output formats json the mit license copyright   ilya grigorik
837012, python hdfs client  use the hadoop distributed filesystem directly from python implemented as a file like object working with hdfs files feels similar to how you d expect quick start  from hdfs hfile import hfile hfile hfile hostname port path mode w hfile write data hfile close hfile hfile hostname port path data hfile read hfile close see example py for more help getting started java classpath  as libhdfs uses jni we must set the classpath environment variable for python hdfs to function properly the exact classpath will vary between installations but basically you need the hadoop conf directory and all hadoop jar s for example hadoopconf and etc and hadoop   and conf hadoophome and usr and lib and hadoop   export classpath hadoopconf find hadoophome name jar and tr n after exporting the classpath simply start your process using python hdfs as usual development status  the library is under active development and should not be used in production at this time the ctypes layer wrapping the native client works correctly as do critical methods like read and write areas under development include implementing more hfilesystem methods and general polish contributing  contributions are extremely welcome as are suggestions about how to structure package and test the library feel free to send me an email or pull request and i ll get back asap
1250893, sl runtime il shader translator  introduction  sl is a runtime il to glsl and hlsl translation engine written in pure c it takes the compiled il of a shader definition written in a managed language usually c  and generates glsl or hlsl shader code from it the shader code is automatically uploaded to the gpu and you can use the shader object as any other object in net shaders can have properties that map directly to uniform and varying variables in the glsl and hlsl code allowing you to easily interact with your gpu code from the cpu please note that sl is currently a very experimental library the syntax and usage may be subject to change at any time as we further research what design is the most sane for the project rationale  there are quite a few advantages to this approach developers can use existing development tools visual studio monodevelop sharpdevelop etc to develop shaders this means code completion syntax checking and so on shaders are validated at compile time any syntactical or semantical errors are caught by the c compiler rather than at runtime when interacting with the gpu no more storing shaders as huge strings in source code or storing them as resources they re compiled directly to il dependencies  sl currently depends on mono cecil icsharpcode nrefactory icsharpcode decompiler as well as additional dependencies for the bindings please report any issues on the github issue tracker known problems geometry shaders are currently not supported support for other net languages such as f is currently up in the air we haven t had time to test sl with f yet but we would definitely like to add support for it in the future perhaps using quotations hlsl support is currently at a bare minimum resource management is not very flexible it relies heavily on static state this currently limits how well sl can use multiple rendering contexts we will definitely fix this in the future
2219840, and express and browserify and fileify and backbone and socket io and html s pushstate i have tested this app to work with firefox    safari   chrome  mobile safari for ios   and ie standards mode no pushstate tho i have created this app as a demo to show that backbone can be used in full effect on the server together with jquery socket io and redis to render stateful server side views that continue to live in the browser the same mvc stack is packed using browserify to let the client take over and let javascript handle it from there no full page rendering is necessary afterwards href clicks are hijacked and mapped onto the instantiated backbone routers using pushstate to reflect the app state in the url the client has access to all scripts by means of require  including templates which where packaged with browserify and optionally minified and uglified with fileify if no javascript is available the html output from the server will still reflect the user session s state to test all of the backbone redis functionality i have adapted the todo app by jeremy ashkenas to a songlist app which has  views songlist which uses a songcollection doh and song which uses a songmodel and shows the song details the backbone model subscribe and backbone collection subscribe methods provide by backbone redis make it possible to have models and collections subscribe to changes from the server if you run the app in two browser sessions and make changes to the models by manipulating the view inputs you will see the changes propagate to the other connected client s this is of course entirely up to the developer i have put the model subscribe statements in the router s handler logic which used to be called controller  which i prefer since that is what it is  because this subscription will affect that model in the entire application not just one view where that model is used therefore i don t think it should go anywhere in any view code the initial page needs to be rendered server side and doesn t load that quickly but once it s rendered the server responds very fast because node js is a non blocking server it needs to serve it s payload asap but to build a full html page and get async data from redis costs some time but i think any web application growing in complexity has these issues and with the help of some best practices like caching and latency reduction these could be addressed similarly no benchmarks were run but with these response times in my browser my love for node keeps growing i ve devised a simple foreign key solution for the key value store all data is indexed according to an array of model indexprops and model extkeys this way it s possible to set model and collection extkey to fetch models and collections by one external key only that works fine for my setup but i foresee a need for many to many relationships i will add that later since this is a demo and even tho i think i did quite a clean job there are many rooms for improvement but it shows that it s possible to have a high code reusage when it comes to asynchronous web programming i don t want to register this stack with npm as it is the product of several npm packages glued together each of these are valid npm packages by themselves to be used as building blocks while my stack is the end product  a working application using these building blocks as opposed to be built upon them actually i surely hope that the panel behind the npm registration process filters out stacks like mine as i don t think the npm registry should become convoluted with complex modules comprising multiple modules already in the registry i do see the fact that it would be convenient to just be able to npm install this but i also think it a good idea to get a grip on the underpinnings and follow the inevitable learning curve that goes with it so i advise to look at the package json file to see which modules it needs and to install them manually all that remains is to get redis installed and listening to the port in index js which is  which was used in the backbone redis i forked if my memory is correct i had to do some modifications to make some required modules work as expected in a commonjs environment backbone redis was heavily modified to enable foreign keys and make it work on the server side as well on some occasions i simply had to fix a bug please look into the nodemodules folder for the adapted and fixed modules the most important from the top of my head are backbone added a require jquery to set when in commonjs mode because of browserify fileify modified to expose an extra method that gives back the compiled file registry when registering a folder with files templates in my case jquery fixed the header part around jquery to not delete webkits own xmlhttprequest which breaks the app in webkit browsers backbone redis built by beau sorenson but adapted by me to fix a lot of issues which could not be tested with the regular todo app originally shipped with backbone all of my changes are already submitted to the original authors and i hope these will be included in some form in their modules hopefully this setup can be used as an example to create a web application that complies with the write once run anywhere paradigm many to many relations solution for the keystore implement bricks js once it s up to speed with express
2213575, vows is not wonderful vows bdd aims to make long vows integration tests more readable with a given when then fluent syntax if you re interested in a more generalied fluent interface for vows checkout here s a slightly contrived example of a vows integration test written in coffeescript vows describe creating a user addbatch to create a user given the server has started topic server ready callback and the db is populated topic setupfixtures callback and another setup function is required topic anothersetup callback when visiting the form at and user and new topic ctx this server ready return then should allow entry of a username errbrowserstatus assert ok browser queryselector input name username should allow entry of first and last name errbs assert ok b queryselector input name firstname assert ok b queryselector input name lastname should allow entry of a password errbs assert ok b queryselector input name password should allow confirmation of a password errbs assert ok b queryselector input name passwordconfirm and submitting the form topic browserstatus browser fill username  test fill firstname  justin fill lastname  reidy fill password  foobar fill password  foobar pressbutton sign up  callback should create a new user errbrowserstatus assert ok findnewuser export module here s the same integration test with vows bdd feature creating a user scenario create a user via form given the server is running  server ready callback and the db is popuplated  setupfixtures callback and another setup function is called  anothersetup callback when i visit the form at user and new  then i should see a username field  errbrowserstatus assert ok browser queryselector input name username and i should see entries for first and last name  errbrowserstatus assert ok browser queryselector input name firstname assert ok browser queryselector input name lastname and i should see a password entry  errbrowserstatus assert ok browser queryselector input name password and i should see a password confirmation  errbrowserstatus assert ok browser queryselector input name passwordconfirm when i submit the form  browserstatus browser fill username  test fill firstname  justin fill lastname  reidy fill password  foobar fill password  foobar pressbutton sign up  callback then a new user should be created  errbrowserstatus assert ok findnewuser complete finish module the mit license copyright c  razor sharp design lt jmreidy rzrsharp net gt permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1433891, this gives python users access to socket io a node js library this library provides simple and efficient bidirectional communication between browsers and servers over a message oriented socket transport is normalized over various technologies including websockets flash sockets and ajax polling this bridge is designed to be self contained so socketio py is the only file you need a server is created by subclassing socketio socket and overriding the onconnect  onmessage  and and or ondisconnect methods import socketio as io class server io server def onconnect self client print client connected self broadcast str client and connected print there are now  len self clients  clients def onmessage self client message print client sent  message client send message def ondisconnect self client print client disconnected self broadcast str client and disconnected print there are now  len self clients  clients server listen  the client in the browser just uses the same interface that regular socket io clients use script type text and javascript function log html var socket new io socket localhost  port  socket on connect  function log connect socket on message  function data log message and data socket on disconnect  function log disconnect socket connect and script
1655173, while i have not looked especially far and wide i haven t found a book publishing toolchain that i like which both has a nice workflow and does not rely on a ton of heavyweight dependencies since i have a real need for outputting nice documents in pdf epub and mobi format i am going to experiment with building a tool that fits my personal tastes and workflow my initial goal is just to mess around with parsing a tiny subset of markdown into ruby objects once i ve got that far i ll work on a proof of concept pdf make it that far without discovering some obviously better tool or deciding that this is going to be a huge time sink i ll re visit this document and put together a proper release plan bookie targets ruby    exclusively and will not run on ruby   pdf can be generated out of the box after installing the bookie gem for epub it s necessary to have the gnu zip command line utility present preinstalled on os x and many linux distros but you may need msys on windows not sure for mobi you need to install kindlegen manually a long term goal for this project would be to eliminate most or all of these non ruby dependencies but i want to get a working toolchain together first i m happy to accept contributions to this project but probably won t have a formal process for doing so until i ve gone beyond the proof of concept phase please do catch up with me if you have questions suggestions or ideas though i am seacreature on freenode and twitter and my email address is gregory t brown gmail com bookie is free software available under the gnu general public license v please see the gplv file for details and feel free to contact me if you have any questions
2440519, mongoid mapreduce provides simple aggregation functions to your models using mongodb map and reduce short answer very there are two map and reduce formulae aggregates provide a map key and a list of fields to be aggregated via addition array list provide an array field the values will be individually aggregated via addition first add mongoid mapreduce to your gemfile gem mongoid mapreduce next include the module in any models for collections you ll be wanting to map and reduce on class employee include mongoid document include mongoid mapreduce field name field division field awards type integer field age type integer field male type integer field rooms type array you can now use the mapreduce method on your model to aggregate data using your choice of aggregation formula employee create name alan  division software  age  awards  male  rooms  employee create name bob  division software  age  awards  male  rooms  employee create name chris  division hardware  age  awards  male  rooms  employee create name darcy  division sales  age  awards  male  rooms  divs employee mapreduce division fields age awards divs length  divs find software age  divs hardware awards  divs first awards  divs last age  divs keys hardware  software  sales divs haskey sales true divs tohash software  hardware  sales rooms employee mapreduce rooms formula arrayvalues rooms length  rooms find  count  rooms counts   rooms counts             you can also add mongoid criteria before the operation divs employee where male  mapreduce division fields age awards divs length  divs haskey sales false you choose to supply fields as arguments or in a block employee where age gt  mapreduce division fields age awards employee where age gt  mapreduce division do field age field awards fields can be of any type supported by mongoid serialization and field type is specified in block configuration divs employee mapreduce division do field age type integer field awards type float divs find software age  divs find software awards   additional meta fields are included in the results note keyname and keyvalue are discarded when converting to hash divs employee mapreduce division fields age awards divs find software keyname division divs find software keyvalue software divs find software division software keyname keyvalue divs find software count  employee mapreduce division countfield num find software num  if you find the project useful but it doesn t meet all of your needs feel free to fork it and send a pull request mit license go wild
1505149, a complete remote agent and remote call center solution built with javascript this solution uses assuming you just cloned this app from git and you have changed into the app directory in your terminal you want to push it to your couchdb with the couchapp command line tool like this if you don t have a password on your couchdb admin party you can do it like this but it s a bad idea set a password if you get sick of typing the url you should setup a couchapprc file in the root of your directory remember not to check this into version control as it will have passwords in it the couchapprc file should have contents like this env public  default  now that you have the couchapprc file set up you can push your app to the couchdb as simply as couchapp push this pushes to the default as specified to push to the public you d run couchapp push public of course you can continue to add more deployment targets as you see fit and give them whatever names you like
1532058, stache is no longer being actively maintained  but don t worry hogan js is and it s a part of tj s consolidate use that instead o
1563040, sencha touch theming contest april   this project is the application to be used in the sencha touch theming contest by default it uses the standard sencha touch theme but it also includes a sample custom theme which can be easily switched in other resources that will help you include entries to the competition should comprise a single css file only no changes are allowed to the javascript of the application we recommend that images are included inline in the generated css as they are in the example  simply so that the judges can easily test them without having to extract directories of additional resources however you may also wish to submit your scss source too to show us how elegant your sass is creating a custom theme  use the contents of the code theming and code folder for creating your custom theme for the roookies application to create your custom theme for the roookies app  add a code style and code query string to the app s url to reference a custom css file  add an additional code font and code parameter if you need to reference a google font by name  to compile your own theme ensure you have compass   beta  or later installed sudo gem install compass v   beta  compass v compass   beta   make changes to the code roookies scss and code file or a copy of your own  run compass to compile the css compass compile roookies scss  refresh the application to see the changes you will need to submit the resulting css file to enter the theming competition however feel free to submit the sass scss file too if you want to show us how clever you ve been installing sencha touch  by default the roookies app links to online versions of the javascript and css files and uses the query string of the app to switch css however you may also want to download the sencha touch sdk and link to those files locally this means you will be able to work on the app offline and you get the benefits of the documentation and examples present in the sdk you can alter the code lt link gt and code and code lt script gt and code tags in the code index html and code of the application itself point to the correct locations for the local javascript and css resources if you wish if you link to your css files explicitly like this you should remove the code lt script gt and code block that writes them in based on the query string you should then be able to test that the application works by opening the code index html and code file in a webkit desktop browser to try your local copy of the application on a mobile simulator or real handset  you will have to deploy this directory onto a local or external web server submitting your entry  to submit an entry you ll need to provide at least an external link to your resulting css file you can try out your css on our live application by altering the code style and code parameter of the url for example good luck
2094341, it s bittorent file system it allows you to watch video or pictures listen to music and so on directly from torrent network the file you request is put on top of download queue so you shouldn t mess with priorities and such just mount this nifty filesystem wherever you like and use any player to get the content it may get a while to fill the player s cache so be patient if your connection is fast enough you ll expirience a smooth playback there s no man page yet i don t know whether it will be at all for now you can use the following switches f torrent  path to the torrent file this or m is required m magnet uri  magnet link of the torrent this or f is required s save and to and dir  path to download dir required p port  tcp for torrent and udp for dht port to listen to r path and to and resume dat  use the resume file for faster incomplete download resuming d  and   default chunk priority  means nothing would be downloaded except files you try to read  default means the download would be like normal but requested files will have the highest priority piece par n  download n pieces in parallel log  enable logging provide a python logging configuration on and etc and btfs and logging conf log conf path and to and conf  use another logging configuration file and after all switches put the path to the mount point for example and btfs py f and mytorrent torrent s and downloads and btfs and btfs py m magnet xt urn btih cfcbfee s and downloads and btfs then just go to and btfs and look for files the topmost directory will have the torrent name i believe some day i ll add multiple torrents support so it s a good reason to separate them in advance you can unmount it just like any other fuse filesystem using fusermount u and btfs p s if you can t enjoy bugs for some reason feel free to file a ticket using github issue tracker i ll try to fight them
2511481, watchtower helps you track how much time you spend on all of your projects at the project directory and file level did you ever want to keep track of how much time you really spend on all of your projects sure you can try to remember to keep running estimates of your time in the hope that you can aggregate those estimates later into some meaningful data but sometimes you forget or an error creeps into your estimate and those errors add up quickly you can try some tracking software that depends on you to start and stop timers but what happens if you forget to start or stop one of those what you need is a passive system that will take care of all of this for you so you can focus on the actual work which is where watchtower comes into play watchtower runs in the background and keeps track of the time spent editing each file with one of the supported editors listed below since watchtower keeps track of the time spent on each file and it knows which project each file belongs to you can view details and statistics on each project right down to the file level tracks the supported editors listed below and records the time spent on all files as specified via the customized configuration file git and codepath are supported a watchtower home page where you can see how much time you ve spent on all watched projects as well as a total summary the default display includes all projects worked on during the current month but the page includes a date picker for easy selection you can select a project to view the project s detail page a project detail page that displays a detailed report of the time spent on the project each directory within the project and each file the default display includes all files worked on during the current month but the page includes a date picker for easy selection textmate vim gvim and macvim are also supported mac os x  install the watchtower gem bash gem install watchtower  followed by bash watchtower install watchtower loadbootloader  review the self explanatory configuration file located at  and watchtower and config yml and make any necessary changes watchtower installbootloader watchtower reloadbootloader to update the path to the watchtower binary in the boot loader the installation process creates a launcher on login that starts watchtower you can view your watchtower home page via the web interface watchtower open if for some reason you think that the elapsed time of any of your projects is wrong c f recalculate the elapsed time of all projects and all their files by but please keep in mind that this can take a long time to process for more information on available commands you can take a look at the watchtower command line wiki please feel free to fork and send pull requests but please follow the following guidelines prefix each commit message with the filename or the module followed by a colon and a space for example readme fix a typo or server and project fix a typo include tests do not change the version we will take care of that you can also take a look at the todo in mind for the project for bugs and feature request please use github issues for other requests you may use email contact technogate fr mailto contact technogate fr please see the copyright c  technogate lt support technogate fr gt permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1244915, if you are using xcode  move all of the files within the xcode directory to developers and platforms and iphoneos platform and developer and library and xcode and project templates and application for xcode  drag all of the files within the xcode directory to and library and developer and xcode and templates
1557748,  teagrams is an experimental app for the ipad  using sencha touch and the instagram api it makes a request to the instagram api for all photos posted with the tag tea and the populates the images along with the user s name whom took it
568689, buedafab a collection of fabric utilities used at bueda  buedafab is a collection of methods for deploying python apps using fabric at bueda we need to deploy django web py and tornado applications to our servers in the amazon ec cloud a frequent topic of conversation in the python web application community seems to be a lack of a default pattern for deploying applications to production servers our approach may not work for you but we would love to compare methods and see if both can t be improved read the contributing section of this readme if you ve got something to add buedafab only need be in your pythonpath a typical installation method is to clone a copy of the repository somewhere git clone git github com bueda and ops and projects then edit your bashrc or zshrc file so your shell adds this directory to your pythonpath every time you open a new terminal echo export pythonpath pythonpath home and projects and ops and bashrc in the future it could be packaged up and installed with pip if you will be using the aws features of buedafab add your aws access key id and secret access key to your shell environment echo export awsaccesskeyid your access key id and bashrc echo export awssecretaccesskey your secret key and bashrc prettyprint boto only if you are using the amazon web services commands pinder only if you are using campfire notification hoppy only if you are using hoptoad notification you can install all of these with pip using the pip requirements txt file pip install r pip requirements txt if you already have fabric the same can be accomplished with fab setup the recommended method is to install buedafab s dependencies in each of your in any project that you will be using buedafab activate that project s virtualenv using here and install the ops repo s pip requirements web and workon web web web and pip install r and projects and ops and pip requirements txt an alternative is to install them system wide but depending the way fabric is installed you may encounter problems with python imports to use any of the utilities your project must have a fabfile py and buedafab must be in your pythonpath some of the utilities are ready to go fabric commands the only requirement is that you import them at the top of your fabfile py for example the rollback method in buedafab and tasks py is s a complete fabric command the method will roll back an app deployment to the previous version to use it in your project import it at the top of the fabfile py from buedafab tasks import rollback and on the command line run it like any other fabric task fab rollback most of the utilities rollback included depend on certain keys being set in the fabric env check the documentation of the method you d like to use to see what keys it will be expecting and set them to the correct value at the top of your project s fabfile py for example the rollback method expects the path key to point to the deploy target on the server env path and var and webapps and myapp the default values for many keys are defined in beudafab and defaults py and can be overridden as needed by re defining them at the top of your fabfile py the defaults should be sufficient if you re using our deploy directory layout methodology as defined in the next section here are the commands we use most often run the test suite for this project there are currently test runners defined for django tornado and general just set env testrunner to the appropriate method or write your own run pylint on the project including the packages in apps and  lib and and vendor and  and using the pylintrc file in the project s root some of the commands require an app environment buedafab defines four different environments localhost development staging and production these are defined in buedafab and environments py and can be overridden or extended these commands don t do anything on their own but are meant to prefix other commands such as deploy this app to the environment environment using the git backed deploy strategy defined at the end of this readme some example use cases deploy a new tagged release from head to all production machines will prompt for the tag to use and web fab production deploy tag a specific commit as a new release then deploy to all production machines and web fab production deploy commit bc deploy head to the development machine without making a tagged release and web fab development deploy deploy a specific commit to the development machine without making a tagged and web fab development deploy commit bc deploy a tag that already exists to all production machines and web fab production deploy release v   a shortcut to bootstrap or update a virtualenv with the dependencies for this project installs the pip requirements files listed in env piprequirements and env piprequirementsdev and initializes and updates any git submodules it also supports the concept of private packages i e python packages that are not available on pypi but require some local compilation and thus don t work well as git submodules it can either download a tar file of the package from s or clone a git repository build and install the package the private package methods could use a little work it s probably a better idea to clone a git submodule and just run python setup py build lastly you can provide arbitrary python functions that will run at the end of setup env extrasetuptasks we use this to download data files to developer machines e g lucene indices assuming your remote server has an init script for this application s process at and etc and init d and unit s  this command simple bounces the web server roll back the deployed version to the previously deployed version i e swap the current symlink from the a to the b directory see below for the methodology this uses if your django project uses the this command will toggle that on and off it finds the maintenancemode variable in your settings py on the remote server toggles its value and restarts the web server after a few iterations bueda settled on a certain method for organizing deployed code here s what we ve come up with all projects are versioned with git in a remote repository accessible to all developers it need not be github and you need not have a special deploy key on the remote server you will need ssh agent installed and running if you are using git submodules in your app developers should only be able to deploy from a remote repository to make sure that deployed code no matter if it s to a development staging or production environment is always available to other developers if a developer deploys from a local repository and forgets to push their commits it can wreak havoc if that developer becomes unavailable additionally deployment should always be a manually initiated push operation not an automated pull one a developer or operations person should always be at the helm of a deployment no matter how automated the actual process is this person should ideally be able to triage and resolve a bad deploy manually if the need arises finally servers shouldn t require any special authentication to deploy since we ve always got a live person leading the deploy they can use their own personal ssh authentication keys to clone or update a remote repository we maintain four application environments across at least two servers at bueda solo development staging and production we use github and our commit and deploy workflow goes something like this  create your own fork of the master repo on github  clone your fork and make changes locally test at localhost  with built in django server  commit changes into a feature branch and push to your fork  send a pull request on github to the repo s owner  when someone sends a pull request evaluate the difference and if it s good merge it into the development branch of the main repo  deploy to development server and web fab development deploy  test again on live development server make sure everything works including database access since that is the primary difference  if all is good merge the development branch into the master branch and web git checkout master git merge development master  deploy to to staging with fabric to test the live production environment minus the public url and web fab staging deploy  again if everyone looks good tag and push to production with fabric and web fab production deploy  if somehow after all of your diligent testing the update broke production rollback to the last version and web fab production rollback beyond developing and testing locally developers should have an easy way to get their code onto a remote server somewhat similar to the production environment this is our development environment it is backed by a completely isolated database with no live user data on a separate physical server well as separate as a virtual machine can get any developer can deploy here anytime to make collaborating with a distributed team as easy as possible the development environment is usually running the head of the development branch from git the staging environment is one big step closer to production this environment is usually running the head of the master branch this environment is on a separate physical server from production but uses the production database finally the production environment exists on its own server or cluster of load balanced servers and only ever runs a tagged commit from the master branch in git this way anyone can tell which version is in production by looking in their git repository for the latest tag all apps are deployed to and var and webapps and appname the actual path is arbitrary this is just our convention we bind this path to the ec instances ephemeral storage on and mnt to avoid filling up the root drive the path to an application named five would be and var and webapps and five within the deploy directory continuing with our example of and var and webapps and five there is a releases subdirectory this in turn contains two more subdirectories a and b each of these contains a clone of the project s git repository why not put a and b at right at and var and webapps and five there are some cases where you need to store logs or data files along side an app and it s good not to mix those with releases there is also a current symlink that points to either a or b wherever current points that s what s running in production the final directory structure looks like and var and webapps and app and releases and a and b and current a our internet spelunking found four prevailing ways to organize deploy directories every time you deploy a new directory is created on the remote server with the current timestamp the repository is either re cloned from the remote pushed from the local repo or archived and uploaded from the deploying machine a current symlink points to the deployed release to rollback find the timestamp before current each commit sha or tag or output from git describe gets a separate folder the repository is either re cloned from the remote pushed from the local repo or archived and uploaded from the deploying machine a current symlink points to the deployed release and previous to the last for rollback purposes in both this scenario and the timestamp strategy if the deploys are archived and uploaded it is a good idea to keep the original app version tar gz in a packages and directory alongside releases use one deploy target folder per application and rely on git to update and checkout the version you wish to deploy no need for symlinks the one folder is always the deployed version there is no specific way to rollback since there is no record of the previous version except the git log this method is similar to the single deploy directory approach in that it uses git to update to the latest version but it keeps two directories an a and a b the names are arbitrary and uses symlinks to bounce back and forth between them on alternate deploys this method doesn t require a git reset hard and gives you a bit of a buffer between the currently deployed version and the one that s about to go live especially considering that this gets you separate virtualenvs and a thus a buffer against funky egg installs or pypi outages it is the method we have settled on and what buedafab uses both the a and b directories have separate virtualenvs as a subdirectory named env the web server must be careful to either add this directory to the pythonpath or use the python executable at env and bin and python buedafab relies on pip s requirements file support to define package dependencies in a project see buedafab and deploy and packages py for more details at one point in time we wiped and rebuilt a virtualenv for the application from scratch each deploy this is clearly the safest solution as it will always get the correct versions of each package the time spent however was not worth the added safety to us our applications have dependencies that typically take   minutes to install from scratch by sharing the virtualenv from the previous deploy and using the update flag to bump package versions as necessary we save a lot of time the only tricky point at the moment is if your pip requirements files have paths to scm repositories perhaps due to operator error but we have found pip to be unreliable when it comes to checking out specific tags or commit ids from scm it can often get in a bad state e g a detached head in a git repository that pip can t seem to handle that requires the src and directory inside the virtualenv to be wiped the fabfile example py file in this repository has an example fabfile py for a project that uses a wide range of the methods from buedfab and sets a few extra env keys document crontab support and add the scripts directory to the boilerplate repository we stopped using this in favor of celery scheduled tasks but someone else may still want it and the code works fine if you have improvements or bug fixes fork the repository on github file an issue for the bug fix and feature request in github create a topic branch push your modifications to that branch send a pull request
780405, em dir watcher sane cross platform file system change monitoring for event machine  compatible with ruby   and supported platforms mac os x employs fsevents api via ruby cocoa to support ruby   forks a separate watcher process and communicates with it via pipes ruby   should use threads instead but this hasn t been implemented yet linux employs inotify via rb inotify gem this backend is nicest of all because inotify uses file descriptors and thus can be monitored from within event machine reactor windows employs directory change notifications api via win changenotify to support ruby   forks a separate watcher process and communicates with it via sockets we d love to communicate via pipes but couldn t figure a way to do it in a event machine friendly way also we d love to use threads on ruby   but not there yet there is no fallback polling backend at the moment please contribute it if you need one why not fssm or directory watcher  fssm rescans the entire directory tree on each change so it has about   sec lag on average sized projects em dir watcher only rescans the changed subdirectories on all systems  and avoids rescanning subtrees on the systems that support non subtree notifications mac linux we d love to see our tree class used in fssm  this should be an easy change also fssm does not know anything about event machine so has to be run in a separate process and thread even on the systems that are reactor friendly i e linux em dir watcher uses em watch to listen to inotify events on linux directorywatcher s event machine edition uses em watchfile  which runs out of max open file limit pretty quickly also it employs polling to catch added or removed files and has to walk the entire directory tree every time em dir watcher uses native backends to watch for file system changes just like fssm  and finds added or removed files just as quickly as modified ones besides both fssm and directorywatcher do not support exclusions and thus will walk update and keep the entire tree in memory including the subfolders you don t need em dir watcher never walks excluded subfolders so you can exclude the stuff you don t need to watch to further improve the performance installation  sudo gem install em dir watcher sudo gem install rb inotify em dir watcher gem install win changenotify win event em dir watcher require rubygems require em dir watcher em run dw emdirwatcher watch do and paths and paths each do and path and if file exists path puts modified path else puts deleted path end end end puts eventmachine running run examples and monitor rb to see it in action emdirwatcher watch  emdirwatcher watch accepts a path and an options hash emdirwatcher watch file expandpath and myproject  includeonly html  css  js  exclude  vendor and plugins  graceperiod   it returns an object that has a single stop method dw emdirwatcher watch file expandpath and myproject dw stop inclusions and exclusions  if the list of inclusions is nil the default  all files are included otherwise it has to be an array and specifies a list of patterns to monitor each pattern is either a name glob a path glob or a path regexp more on this later the list of exclusions defaults to an empty array and specifies the list of patterns to exclude each pattern is either a name glob a path glob or a path regexp if a path matches both an inclusion and an exclusion filter it is excluded patterns are inspired by git s gitignore conventions each pattern can be one of the following a string that does not contain a slash is treated as a shell style glob and is matched against file base names for example you can use html to match html files in any directory or to match temporary files in any directory a string that contains a slash is treated as a shell style glob and is matched against file paths relative to the monitored directory for example you can use lib and rake to match all files in lib and rake directory or and vendor to match a vendor directory a regexp is matched against file relative paths for example you can use and a z and to match all files and directories that contain upper case characters in their name grace period  use graceperiod   to combine the changes together if they occur in quick succession this for example may be used to avoid starting a build while some files are still being updated from a repository the default grace period is   which means that changes are reported immediately when they occur required software sudo gem install jeweler shoulda to run the tests use rake test this is expected to work on all platforms and shouldn t give any failures except that on a mac spurious test failures occur in about   of  test runs and we are unable to get rid of them you can use and testloop script to run the tests multiple times in a row to check for unreliable behaviors to give a more context on mac test failures two constants that have an effect on them are startupdelay in lib and em dir watcher and platform and mac rb and unitdelay in tests and testmonitor rb we ve settled on a sweet spot of   and    which gives a    failure rate increasing them to   and   still results in the same failure rate decreasing them to   and   results in  failed test runs you can use rake rcov to check code coverage info currently tree rb and monitor rb have  test coverage mac rb has  coverage linux rb should have about  coverage and windows rb should have about  coverage the last two were not measured help wanted aka todo  if you find yourself using this gem consider implementing one of the following functions ruby   friendly thread based mac backend ruby   friendly thread based windows backend ffi based mac backend  there is no need to employ ruby cocoa monster just to invoke a handful of functions a nearly working version is in lib and em dir watcher and platform and mac and ffifseventswatcher rb  just needs some final touches polling based fallback backend for the folks on funny operating systems from freebsd to solaris to hp ux use mac os x s fsevents native grace period implementation copyright   andrey tarantsov mikhail gusarov distributed under the mit license see license for details
564766, created with high performance flexible logging in mind bunyan is not intended to be used as a drop in replacement for the default however there is planned support for a flexible middleware component to drop in to your rails app gem install bunyan configure  the only configuration options required are the database and collection name for rails apps put the following config block in an initializer config and initializers and bunyan rb bunyan logger configure do required options database bunyanlogger collection developmentlog optional host some remote host defaults to localhost port  defaults to  disabled true other connection option specify a valid ruby driver connection object single and pair if you do so host and port are ignored connection connection gemfile gem bsonext    set the version to whatever the current version of bson the mongo gem is using you can access the bunyan logger anywhere is your app via bunyan logger the logger class is implemented as a singleton and you can call any instance method on the logger class this is implemented with some methodmissing magic which is explained in a bit more detail below middleware  to make use of bunyan in your web apps you need some way to capture request data i have added an example middleware which is extremely extremely ugly which you can find at examples and middleware rb there are plans for a standard middleware api but it has not yet been implemented if you have interest in helping and collaborating on this feature please get in touch with me until the middleware api is complete please use this example middleware at your own risk internals  bunyan makes heavy usage of method missing both at the class and instance level at the class level this is purely for convenience to pass missing class methods to the singleton instance which precludes us from needing to use logger instance directly at the instance level method missing is used to provide a very thin layer around mongodb via the mongo driver the net effect of this is that there is no reason to muck around with calling methods directly on bunyan logger instance because all methods that don t already exist at the class level will be sent to bunyan logger instance bunyan logger count bunyan logger instance count true also you can call any instance methods bunyan logger that you would otherwise call on a mongo collection object ability to specify auth creds for making a mongo connection del fail silently if no mongo server running and del ability to limit bunyan to only run in certain environments add middleware client for easy drop in to rails and rack apps del add ability to connect to a remote mongo server and del del ability to configure size of capped collection and del
1684076, make a game maga  maga is a lightweight framework for developing multiplayer physics based games warning api unstable this is an early release of the library i will be juggling things around as i dig deeper so expect things to change suggestions and contributing is welcome installing  npm install maga to run the examples  npm explore maga or cd maga if you cloned node examples and circles server js  localhost node examples and cars server js  localhost node examples and hax server js  localhost introduction  maga is a framework to assist in game development syncing physics state across the network among multiple clients using a built in timestep based authority scheme with client prediction it runs in any commonjs enviroment so you can use it in both node js and the browser you get to use the same code in your server backend simulation and the browser s simulation every instance is both a sender and a receiver it runs its own simulation of the entire game while compensating for the roundtrip lag by advancing frame steps every client runs to catch the fastest one see the hax example for both server and client usage how to get started  you start by creating a new game object like this var maga require maga var game new maga game in this game we can create rooms like this var room game createroom room watch object and and objectid function serialized watches an object for changes and returns a serialized string you can then send over the network room parse serialized function state parses a serialized state and returns a state object room applystate state to apply an incoming state object to the room automatically handles client prediction room on state  function state fires whenever a message is parsed with room parse room loop fn the room s main loop calls fn on each iteration this is the room object room addobject object add an object to the game room removeobject object and and objectid remove an object from the game room stringify object and and objectid returns a stringified representation of the object with id this automatically accounts for changes so if the inputs don t change it returns nothing you create your objects yourself and inherit from maga object here is from the example circles game source var circle function maga object apply this arguments this register and and values used to render draw object render x   y   and and input values that determine behavior  input tx   ty   and and values that change  dynamic vx   vy   ox   oy   and and values that don t change  static f    util inherits circle maga object your objects require to have these methods update create render and destroy the update method advances the physics state by  frame the render method is called with an object argument containing the render properties you can use them to draw wherever you like a canvas the dom it s up to you the create method is used to create the dom and canvas object the destroy method to remove the object how to handle players  luckily maga comes with a playermanager middleware included you can use it to do simple player management for a jump start here s an example and and maga var maga require maga  playermanager require middleware and playermanager  circles require circles and and new game var game new maga game circles  room game createroom  players playermanager room circles the players object then has these methods players set state this parses an incoming state should be used in the room parse callback just before room applystate state players get gets current state player players create id create a new player using our object constructor players remove object and and id remove a player me players createmyself id create our character players foreach function player id iterate players in the room how to require in the browser  use this and then you can do this in your express server app exposerequire app expose config config app expose inherits util inherits  util app exposemodule dirname and and and maga  maga app exposemodule dirname and and circles  circles app get and exposed js  function req res res setheader content type  application and javascript res send app exposed  in index html script var util require util  maga require maga  circles require circles  config require config and script resources and credits 
41722, this is a fork of the original bossman gem the form enables searchmonkey usage to make this work it parses the xml response coming from yahoo boss since the json response doesn t include the searchmonkey rdf you can now do something like boss bossman search web yelp restaurant  count  filter hate  view searchmonkeyrdf  format xml tickets can be submitted by via github issues require bossman bossman applicationid your application id boss bossman search web prospect park  count  filter hate puts matches boss results each and result and puts result title result url matches boss bossman search news brooklyn new york  age h puts boss results first title puts  puts boss results first abstract brooklyn park helps homeless  when people lose their homes they often turn to shelters as a last resort now the city of broo boss bossman search images brooklyn dumbo  dimensions large boss results map and result and result url boss bossman search spelling diabretes boss suggestion diabetes links bossman search seinlink www wnyc com links results map and result and result url pages bossman search seinlink www webmd com pages results map and result and result url search responsecode http response code search nextpage rest url to next page of search results search count number of search results contained in response search start search result from which output starts search totalhits de duplicated total number of results search yielded search deephits total number of results search yielded search results clickurl tracking url of result must be used in user facing anchor tags by boss tou search results url url of result search results title title of item search results abstract description of item search results dispurl display url of result search results size size of result in bytes search results date date result was indexed search results language language of news story search results date last publication date of news story search results time last publication time of news story search results source source of news story search results sourceurl url of source publication search results filename filename of image search results size size of image search results format format of image search results height height of full size image search results date last modification date of image yyyy and mm and dd search results mimetype mime type of image search results refererclickurl link to page where image was found search results refererurl link to page where image was found search results width width of full size image search results thumbnailurl url of thumbnail image search results thumbnailheight height of thumbnail image search results thumbnailwidth width of thumbnail image search suggestion returns spelling suggestion from boss result sets can be dumped as json xml and yaml by use of tojson toxml toyaml respectively search toxml dumps xml of the result set search tojson dumps json of the result set search toyaml dumps yaml of the result set search results toxml dumps xml of one search result search results tojson dumps json of one search result search results toyaml dumps yaml of one search result jp populuxe gem install bossman fakeweb    rspec    active support   the mit license copyright c   john pignata permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
811194, python allows you to signal the end of a code block with indentation ruby suffers from an extremely verbose and tedious block terminator end much like lisps end up with dozens of close parens ruby files that use modules and classes heavily end up with a plethora of ends that just aren t necessary write a ruby file but skip all the ends line up your code blocks like in python then just call it yourfile rbe  require seamless  and require yourfile seamless does the rest should this ever see widespread use i don t know but it s pretty fun module hello module world class runner def initialize user user user def run puts hello user much cleaner sure a bit contrived but no more ends fork the project make your feature addition or bug fix add tests for it this is important so i don t break it in a future version unintentionally commit do not mess with rakefile version or history if you want to have your own version that is fine but bump version in a commit by itself i can ignore when i pull send me a pull request bonus points for topic branches copyright c  michael edgar see license for details
889640, i put this together to give a quick example of using amqp to interact with a java based program to run this example first start up the node server under and node node app js you can also run randompricerunner which will publish a random price every  milliseconds and will update in realtime in the view explore the code and have fun i use gradle to build the java classes for the presentation i ran gradle eclipse and ran the main classes from eclipse oh yeah you should probably have rabbitmq up and running but ideally this should work with any amqp broker
1178508, the default configuration files for vim used at f and tuned to play nice with macvim macvim but works with most nix environments setup using homesick homesick for that symlinkn goodness f and peops double check but you most likely already have the basic requirements installed on your machine macvim macvim is not a requirement as the majority of the files work in most nix environments including terminal it s recommended to use homebrew s homebrew package of macvim macvim  as it compiles macvim and vim at  bit with ruby python perl installs the command line link mvim  plus a bunch of other goodness homesick homesick is required for easy management of dot files with the repository the discount discount executable is recommended for converting markdown files to html for previewing the ctags ctags executable is helpful for taglist jumping between files and omni completion to install the files and default configuration run the following homesick clone git github com factorylabs and vimfiles git cd and homesick and repos and vimfiles bash install sh homesick symlink vimfiles f this will install the default configuration files and directories submodules and create symbolic links for bundles and snippets most of the heavy lifting is done by the install script install sh at this point you should have a default setup ready to rock you re going to want to tune it a bit to your environment so go forth and pimp your ride the install sh script created a vimrc local file this stores local configurations based on the user s needs it is loaded after the vimrc file anything created in vimrc local overrides settings set in vimrc this file is ignored and not checked back into the repository it s recommended you keep a backup of this somewhere you ll want to tune a few settings right off the bat open the vimrc local file in vim type evl a mnemonic is edit vimrc local  uncomment g yankringhistorydir and optionally change it s path otherwise yankring will save it s history in a file in your home directory optional point g markdownpreviewuserstyles to the directory where your user specific style sheets for the markdown previewer reside if your an f and peop you can clone the repository for f and markdown themes fmd themes and gain templates and style sheets to keep you out of ms word set the default browser by changing g refreshrunningbrowserdefault use chrome  safari  or firefox give yourself a signature with g snipsauthor by including your name for various snipmate snipmate snippets optionally uncomment one of the colorschemes  there are  included as described below the default is colorblind it s recommended to uncomment the entire conditional under user gui specific settings we roll with the custom font meslogm meslogm at px you ll need to download and install it otherwise roll with monaco or something if you want to go blind if you want to set a transparency you ll need to enable use experimental renderer in macvim s preferences advanced settings the primary reason for uncommenting this conditional is you ll find certain plug ins need to be disabled or have certain settings applied to work across macvim and various nix environments you can apply custom key bindings in vimrc local  configure plug ins or override default settings submodule plug ins generate doc and tag files associated with help documents every time vim is launched this creates conflicts associated with pulling updating or committing changes back to the main repository it s necessary to clean these out before running any pulls or commits there are two shell scripts included to help in this process clean sh clean sh and update sh update sh to update from the latest changes in the f and repository run the following  quit out of vim bash clean sh git stash or git add any updates from your environment spit out by the clean sh call to git status git pull rebase commit your changes back up to the repository to pull upstream changes for all of the submodules run the following  quit out of vim bash update sh git stash or git add any updates from your environment spit out by the clean sh call to git status git pull rebase commit your changes back up to the repository f and will run this script once a week to keep the submodules as up to date as possible plug ins are managed using pathogen pathogen all submodule plug ins are stored in the bundlestorage directory and are not available to vim until they are symlinked to the bundle directory the bundle directory is ignored by the repository allowing custom configurations on a per install basis to activate a plug in run ln s and path and to and vimfiles and bundlestorage and bundle name and path and to and vimfiles and bundle and bundle name you ll need to restart vim for the changes to take effect new plug ins need to be added to the bundlestorage directory and should be treated as submodules to add a new one run git submodule add remoterepository home and vim and bundlestorage and bundle name git submodule init git submodule update ln s and path and to and vimfiles and bundlestorage and bundle name and path and to and vimfiles and bundle and bundle name test it out and if it s a keeper add it to the repository add it to the list below with a quick description and tell the world about it s greatness vim scripts vim scripts has an enormous amount of repositories for all sorts of plug ins however if the original author has their own github repository try to clone from there instead  delete the relevant line from the gitmodules file delete the relevant section from git and config run git rm cached pathtosubmodule no trailing slash remove the directory from bundlestorage remove the symbolic link from bundle remove any descriptions from the readme md file the install script install sh created initial symbolic links for the plug ins listed below these are primarily file type oriented plus a few must haves you can disable any of these by removing the symbolic link but it would be a lot cooler if you didn t these are the additional plug ins included but are not required they are not linked to the bundle directory out of the box if adding any of these make sure to read the docs on their usage and what variables and settings may be required in vimrc local recommended by default all of the snippet files stored within snippetsstorage are symlinked into the snippets directory these cover most of the languages used at f and to see the available snippets for a given file type hit f  a snippet is triggered using tab certain file types like javascript have hundreds of snippets based on the native language and various libraries this can become unmanageable pretty quickly the solution is to breakout specific libraries into their own files for example javascript jasmine snippets where it needs to be named as language library snippets since snippets are saved in the snippetsstorage directory you can be selective about what gets a symbolic link within the snippets directory if you are working in a project that includes jquery you would only have symbolic links created for javascript snippets  javascript jasmine snippets  and javascript jquery snippets another project that uses node js node  you could delete the symbolic link to javascript jquery snippets and add in javascript node snippets instead this will give you a more manageable list of snippets to work with by default all snippets are included at installation you ll want to tune these based on your needs to learn more about snipmate snipmate and creating snippets type h snipmate the configuration uses syntastic syntastic quite heavily most of it is out of the box buffers are checked after each save the javascript syntax checker runs jshint jshint instead of jsl which is included with syntastic syntastic the executable to jshint jshint runs on node js node and needs to be installed via npm npm also install the custom configuration json file into your home directory instructions for doing this are located at the jshint config jshint config repository this installation will make it global to your machine if you need a specific configuration on a per project basis just drop a jshintrc file in your project directory and tweak the settings there is also an objective c checker included this uses the gcc and requires the cwd to have the xcodeproj file in it to learn more about syntastic syntastic and syntax checkers type h syntastic themes included with this configuration  colorblind black background super vibrant colors snowblind white background vibrant colors cataracts grey background with muted colors bloodshot similar to colorblind but with muted colors in the extras directory are terminal themes to match the vim color themes and library and application support and simbl and plugins and the color themes have been designed with similarities in the syntax settings jumping between multiple languages should be easy on the mind and the eyes be adventurous and mix it up once in a while within vim type h fcheat to view key and leader bindings for the f and configuration the control key is in an awkward position and the caps lock key is basically useless it s right there in the home row so you might as well put it to good use  open up system preferences select keyboard select modifier keys from the drop down select control under the caps lock setting in the select keyboard drop down you ll want to set it for both internal and external keyboards  launch macvim macvim from terminal by typing mvim and hitting enter right click the logo in your dock and select options show in finder create an alias of macvim app and drop it in the and applications and directory this will allow it to be found by spotlight optionally choose to keep the icon in your dock options keep in dock fire up your bashrc  zshrc or wherever your aliases are and add the following alias vim and usr and local and cellar and macvim and v   and macvim app and contents and macos and vim your path may be different depending on the latest version from homebrew homebrew once you point the alias to macvim s macvim vim executable you should be able to run plug ins and crap that depend on ruby python and so on while you won t get all the niceties of the gui app you ll at least have a similar install for your terminal as what s in macvim macvim in order to keep your personal submodules available to forks but allow commits back to the upstream master repository from within the submodule  create the repository for your bundle within git then from the vimfiles directory add the submodule as you would any other submodule within your newly created submodule create a remote reference to the upstream master repository make changes to the submodule and push updates back to the remote upstream master then whenever you pull updates to all of your submodules you as well as everyone else should get the changes here is an example cd and homesick and repos and vimfiles and git submodule add git and and github com and username and submodule name vim git home and vim and bundlestorage and submodule name vim cd home and vim and bundlestorage and submodule name vim and git remote add push git github com username and submodule name vim git git submodule init git submodule update ln s and path and to and vimfiles and bundlestorage and submodule name vim and path and to and vimfiles and bundle and submodule name vim then whenever you make changes to the submodule cd and homesick and repos and vimfiles and home and vim and bundlestorage and submodule name vim and git push push master this allows you to make changes directly in your submodule see the effects and push the changes back without maintaining multiple repositories and linking them back and forth defunkt defunkt has a good article about working with submodules defunkt subs all licensing for the bundles and plug ins should be found in their respective repositories anything written by f and is of course open source through mit while contributions are welcome you re probably better off forking and tuning it to your own machine copyright c  by factory design labs permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
87683, this is a python script and command line tool with no dependencies that allows parsing data from apache log files at this time it supports generating supports for uri pageviews for each uri time datetime with highest request and second statuscode hits for each http status code referral uris of referring sites agent hits for each user agent subscriptions the number of feed subscribers per uri this is done by parsing user agents for their subscriber count here are some example uses python parser py access log subscriptions python parser py access log uri quantity  python parser py access log agent cutoff  there is help available at the command line as well python parser py help these are the feeds that have been tested against the feed subscription system zhuaxia com  subscribers aiderss and   aiderss com  subscribers this script draws inspiration and code from
97709, define realistic testplans and run them against your webapps get it in one of the following ways gem install stella sudo gem install stella git clone git and and github com and solutious and stella git note if you get errors about libxml or libxslt on ubuntu you need to install the following sudo apt get install libxml dev sudo apt get install libxslt dev harm aarts for the great test case and feedback kalin harvey for keeping me on track dave l the best intern money can t buy peter mccurdy for the feedback and bug fixes see license txt
1702509, macfuse is a software package for macos that lets non privileged users create their own file systems without having to write a single line of kernel code this is achieved by running file system code in user space while the macfuse kernel extension provides only a bridge to the actual kernel interfaces about macfuse  the latest version of macfuse supports macos   to macos  the software package provides multiple apis for developing full featured user space file systems libfuse dylib provides a superset of the standard unix fuse api macfuse framework is a high level objective c wrapper for the libfuse c api developers can create numerous types of file systems using the provided apis e g on disk file systems layering file systems network and distributed file system and many more three popular use cases are accessing files in the cloud accessing files on non native unsupported by macos file systems and transparent encryption and decryption of files macfuse file systems are regular applications as opposed to kernel extensions this means developers have as much flexibility and choice in programming tools debuggers and libraries as they have when developing regular application for macos please see license txt source code  this repository contains the source code of libfuse dylib and macfuse framework the other components e g the macfuse kernel extension are closed source
1966552, skookum digital works example project showing how to clear the interface using a page peel video here blog post here
1017134, the only mongrel rack handler you ll ever need  get your config for mongrel setup see example directory  add it to your gemfile gem rack mongrel      require nil  you also need some sort of json parsing library installed like yajl or json gem i yajl ruby or gem i json json jruby will work too  run mongrel  run your rails application rackmongreluuid my uuid rails s mongrel  profit the mongrel rack handler defaults the receive socket to tcp and and      and the send socket to tcp and and      to use different values set the rackmongrelrecv and rackmongrelsend environment variables for example export rackmongrelrecv mongrel handler sendspec value export rackmongrelsend mongrel handler recvspec value export rackmongreluuid mongrel handler sendident value rails server mongrel if for example your mongrel handler configuration contains recvspec tcp and and      sendspec tcp and and       sendident ffdda d b f effca  then you will need to start your rails application using export rackmongrelrecv tcp and and      export rackmongrelsend tcp and and      export rackmongreluuid ffdda d b f effca rails server mongrel fork the project make your feature addition or bug fix add tests for it this is important so i don t break it in a future version unintentionally commit do not mess with rakefile version or history if you want to have your own version that is fine but bump version in a commit by itself i can ignore when i pull send me a pull request bonus points for topic branches copyright c   daniel huckstep see license for details
2426553, methodlocator is a ruby gem that allows you to easily determine the method lookup path of a particular object and class and module as well as find all places represented as unboundmethod instances where a callable method is defined on an object this is very useful in an environment such as rails where you are unsure where a method may be defined or overridden note that by default ruby tends to hide singleton classes when you invoke module ancestors the new object methodlookuppath does not hide these singleton classes and will return them so that you get a true representation of how ruby performs lookups for methods this library will make more sense if you understand ruby s object model and method lookup path methodlocator is available as a ruby gem gem install methodlocator require methodlocator module m def foo puts foo from m module m def foo puts foo from m module m def blah puts blah from m module m def self hello puts hello from m def foo puts foo from a def self blah puts blah from a class b a include m include m def foo puts foo from b def self blah puts blah from b b extend m b b new def b foo puts foo from b s singleton class puts all method owners of b foo b methodsfor foo each and m and puts m name  owner m owner puts all method owners of b blah b methodsfor blah each and m and puts m name  owner m owner puts all method owners of b new b methodsfor new each and m and puts m name  owner m owner puts all method owners of m hello m methodsfor hello each and m and puts m name  owner m owner puts method lookup path for b p b methodlookuppath puts method lookup path for b p b methodlookuppath puts method lookup path for m p m methodlookuppath all method owners of b foo foo owner class b xfccd foo owner b foo owner m foo owner m foo owner a all method owners of b blah blah owner class b blah owner m blah owner class a all method owners of b new new owner class all method owners of m hello hello owner class m method lookup path for b class b xfccd  b m m a object methodlocator kernel basicobject method lookup path for b class b  m class a  class object  class basicobject  class module object methodlocator kernel basicobject method lookup path for m class m  module object methodlocator kernel basicobject fork the project make your feature addition or bug fix add tests for it this is important so i don t break it in a future version unintentionally commit do not mess with rakefile version or history if you want to have your own version that is fine but bump version in a commit by itself i can ignore when i pull send me a pull request bonus points for topic branches ryan lecompte copyright c  ryan lecompte see license for further details
1797167, sublime text  plugins  this is just a handy place to store some plugins i wrote for sublime text  feel free to use edit extend or improve as you see fit it d be nice to have credit if you post your updated version online but it s not required treat all of this as mit licensed note i m using this particular repo not only as an online storage space for some scripts that i use but also as a sort of personal portfolio as such i don t have a section for issues and i do not accept pull requests blame py is a git blame plugin it takes selected lines as arguments and outputs the data into the console installation  select text or click desired line s  then activate i ve added this to my user key bindings   b on a mac keys super and alt and b  command blame and this in user and default  your os context sublime menu which allows context menu access command blame  caption blame googleit py  googleit py is a google looker upper it takes the scope of the file and appends it to a google search of either the word under the cursor or the selected text installation  select text or click desired word then activate i ve added this to my user key bindings   and on a mac keys ctrl and alt and forwardslash  command googleit and this in user and default  your os context sublime menu which allows context menu access command googleit  caption googleit pepcheck py  installation  take a look through the code and add or remove options that fit your needs in the stock example i have the following set up repeat show all occurrences of the same error verbose print status messages or debug with vv repeat show all occurrences of the same error ignore errors skip errors and warnings e g ew show source show source code for each error statistics count errors and warnings count print total number of errors and warnings to standard error and set exit code to  if total is not null play around with the options until you get what you want this plugin is dependent on pep which you must install yourself you can install upgrade uninstall pep py with these commands sudo pip install pep sudo pip install upgrade pep sudo pip uninstall pep or if you don t have pip sudo easyinstall pep there s also a package for debian and ubuntu but it s not always the latest version sudo apt get install pep i ve added this to my user key bindings    on a mac keys super and shift and   command pepcheck and this in user and default  your os context sublime menu which allows context menu access command pepcheck  caption pep check settingsrefresh py  settingsrefresh py is a ridiculously simple plugin it saves your settings which in effect refreshes your changes if any were made i use this for tweaking my color scheme and then immediately seeing the changes installation  after editing and adding and deleting a setting or theme or color scheme activate to refresh the changes i ve added this to my user key bindings   r on a mac keys super and ctrl and r  command settingsrefresh generateuuid py  installation  activate to generate a uuid i ve added this to my user key bindings   u on a mac keys super and shift and u  command generateuuid localvalidate py  using the mac os x application validator s a c separate installation required see below  localvalidate py will locally validate the current xhtml and html file handy if you have no internet access as well as saving some traffic to wc s often overloaded servers installation  after installation your browser may prompt you to select the default handler for x validator sac select validator s a c activate to locally validate the current xhtml and html file i ve added this to my user key bindings   v on a mac keys ctrl and alt and v  command localvalidate speaktome py  this will allow you to select text in a sublime text  file and have it read back to you macs only installation  select some text and activate by keypress if you do not select anything the file s content in its entirety will be read i ve added this to my user key bindings   s on a mac keys ctrl and alt and s  command speaktome
1600598, borderbox for compass  use box sizing border box with impunity borderbox outputs equivalent css for ie  installation  from the command line gem install compass borderbox  add to a project require borderbox and then import the mixins to your base sass and scss file import borderbox  sets box sizing compliant values as well as legacy values for ie  include borderbox px px  include borderbox px px px px  px solid black include borderbox px px px  px px compiles to moz box sizing border box webkit box sizing border box ms box sizing border box box sizing border box padding px  width px width px moz box sizing border box webkit box sizing border box ms box sizing border box box sizing border box padding px px  border px solid black width px width px height px height px moz box sizing border box webkit box sizing border box ms box sizing border box box sizing border box padding px border width px  px px width px width px global variables  global border box false default set to true if you prefer declaring a global box sizing prop note you should do this otherwise you must constantly check to see if box sizing is enabled for a property override in your base sass and scss file global border box true then add a global css rule include box sizing border box afterwards your compiled code will be much more compact include borderbox px px px px  px solid black compiles to padding px px  border px solid black width px width px height px height px
1258793,  mongo live is a chrome extension for real time monitoring of mongodb you can install the extension from the chrome web store thie product is not affiliated with mongodb this product uses and includes the following open source projects thanks to the members of gen who provided feedback and suggestions  licensed under the apache license version   the license you may not use this file except in compliance with the license you may obtain a copy of the license at unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license
1908740, to instantiate the vagrant environment on amazon aws using ec this document assumes note this plugin is pre alpha  see below for the caveats to use this plugin first install vagrant then install the plugin gem it should be picked up automatically by vagrant you can then use the vagrant aws commands specify your amazon aws credentials in a fog file create and fog with default awsaccesskeyid your access key awssecretaccesskey your secret key if you already have an amazon key pair created when you signed up or someother time  you can specify the key name and the path the associated private key alternately if no key name is specified vagrant aws will automatically create and register a key pair for you with the name vagrant mac address if you want to use your pre existing key you can specify the key name and path on a per environment basis i e  in each vagrantfile or in a single vagrantfile in your and vagrant directory in the latter case create and vagrant and vagrantfile with vagrant config run do and config and config aws keyname key name config aws privatekeypath path and to and key with the above in place you should be ready instantiate your vagrant environment on amazon aws see below for additional information on configuration caveats etc vagrant aws defines a new configuration class for use in your vagrantfile an example usage showing the defaults would be vagrant config run do and config and config aws region us east  config aws availabilityzone nil let aws choose config aws image ami ec ebs backed ubuntu    bit config aws username ubuntu config aws securitygroups default config aws flavor t micro alternately you can work with image boxes using the vagrant aws box commands these are similar to vagrant s native boxes and have a similar api but wrap aws ami ids the major difference is that box creation and removal can optionally reregister and deregister amis with aws note that ami creation is only supported for ebs backed instances vagrant aws is pre alpha and currently supports creation suspension resumption and descruction of the vagrant environment along with basic box operations provisioning should be supported for shell chef server and chef solo but has only been tested with chef solo and on an ubuntu guest only a subset of vagrant features are supported currently port forwarding and shared directories are not implemented nor is host networking although that is less relevant for aws vagrant aws in general has only been tested with ruby    on osx   with chef solo
1954655, browserjet headless webkit with a node js interface  browserjet gives you access to headless webkit which is often useful for site scraping testing page screenshots saving pdfs and more installing  to install the node js module simply use npm install browserjet currently supported is linux  and   browserjet provides and easy to use api to load manipulate and save a page as a png you can use javascript var browserjet require browserjet  browser browserjet createbrowser run function document body style backgroundcolor  save nodejs png end function err if err throw err  fetch the given page and pass ok to callback after completely loaded javascript if err throw err console log page loaded also see examples and loadspeed js for another example set the browsers content to the given html and run callback when completely loaded javascript browser sethtml html body hello world and body and html return the browsers html run the supplied javascript synchronously in the context of the currently loaded page and pass the last result to the callback javascript browser run document getelementsbytagname p length  function err count console log there are and count and paragraphs in the currently loaded page an advanced command to run the given javascript asynchronously in the context of the currently loaded page browserjet callback is exposed on the page and returns its parameter to the callback javascript browser runasync function and and this code runs in the context of the loaded page settimeout function browserjet callback document title    function err title console log title after s the title of the currently loaded page is printed also see examples and qunit js for another example of runasync saves the current page supported file extensions are image formats png gif svg tiff and pdf javascript browser save page pdf browser save and tmp and page png  the browserjet tests use expresso which you can install with npm install g expresso then in the module directory you can just run expresso
1226895, git paid the programmer s time tracker  git paid is a console time tracking program that stores work logs in git currently it assumes begin and end commits are accurate in time and uses this to generate an invoice in the future user supplied billable hours will be supported gpbegin b client name gpend b client name m shaved the yak gpbegin b client name gpend b client name t   m faked the time gpinvoice b client name invoice thu jan     utc  from client name branch of and home and vagrant and gitpaid work log began thu  jan     and  shaved the yak ended thu  jan     and  billed time   began thu  jan     and  faked the time ended thu  jan     and  billed time adjusted   summary total billed time  
1364289, intended as a viewgroup that mimics the uiscrollview vertical paging functionality of ios supports each child inherits the width and height of the verticalpager swipe to page up and down or invoke scrollup and scrolldown methods to accomplish the same onscrolllistener will report scroll and scroll finished events use to implement a current page number and position view for example much of the code for this class was adapted from the workspace class from the official launcher app aosp
1742407, description  lidenbrock is an add on to core data it is a solution to easily synchronize your core data models with some external json resources this project was made as effort to build a link between coredata and external data storage however it lacks of a lot of key features like an http client i realize how far this project is from some existing great libraries unfortunately i have not enough time to work on it seriously and won t update it anymore
1232140, tinypie tree based interpreter compiler and vm for tinypie language  tinypie is a tree based interpreter for a simple programming language with a python like syntax end with an interpreter grafted onto the end instead of a code generator tinypie also includes bytecode assembler and register based virtual machine goals of the project   self education  to serve as an example for people interested in crafting their own interpreter in python for a simple programming language or dsl installation   using buildout git clone git and and github com and rspivak and tinypie git cd tinypie python bootstrap py bin and buildout run the interpreter bin and tinypie factorial tp  using pip or easyinstall no need for sudo if using virtualenv sudo pip install tinypie or run alternatively easyinstall sudo easyinstall tinypie run the interpreter tinypie factorial tp main interpreter features  implemented in python regexp based lexer ll k recursive descent parser parser constructs homogeneous abstract syntax tree ast static and lexical scope support interpreter builds complete scope tree during ast construction interpeter manages global memory space and function space stack interpreter implements external ast visitor forward references support high level overview and and and and source code and symbol table and scope tree and and and and and and and and and and and x and and and globalscope and and and and and and and and and and regexp based lexer and and and and and and and and and and and and and and and and and and functionsymbol and and functionsymbol and and and and and x and and x and and and token stream and and and and and and and and and and and and and x and and and and and and and and and and and and and localscope and and localscope and and and ll k recursive descent parser and and and and and and and and and and and and and and and and and and ast and memory space and and and and and and x and and function space global memory and and interpreter and and stack space and and with external tree visitor and and and and and and and and and and and functionspace and and memoryspace and and and and and and and and and and and and and and and and and output and and functionspace and and and and and and and and x and and source code during parsing the interpreter executes the source code by constructing ast and then walking the tree advantages of tree based interperter over syntax directed one  symbol definition and symbol resolution happen at different stages symbol definition is performed during parsing symbol resolution is performed during interpretation this allows forward references and simplifies implementation parser deals with scope tree only and interpreter deals with memory spaces  more flexible because of ast as an intermediate representation language grammar  program functiondefinition and statement and eof functiondefinition def id id  id slist slist nl statement and nl and statement statement print expr nl and return expr nl and call nl and assign nl and if expr slist else slist and while expr slist and nl assign id expr expr addexpr and addexpr addexpr multexpr and and multexpr multexpr atom atom atom id and int and string and call and expr call id expr  expr short language reference  statements print  return  if  while  and function call literals integers and strings operators   and   expressions may contain identifiers code examples   factorial print factorial  forward reference def factorial x function definition if x  return  if statement return x factorial x  return statement dot marks the block end  while loop index  while index  print index index index and  dot marks the block end  if else x  if x  print yes else print no  variable lookup in different scopes x  global variable def foo x foo is defined in global memory space print x prints  parameter value dot marks the block end def bar bar is defined in global memory space x  modify global variable dot marks the block end foo  prints  bar print x prints  bar modified global variable ast examples  trees in these examples are represented as s expressions for tersness function call foo   call id int int means call is the root with children id foo  int   and int  function definition def foo x y z x and y return z funcdef id id id block assign id sub id id return id development  install enscript utility optional if you are on ubuntu sudo apt get install enscript boostrap the buildout and run it cd tinypie python bootstrap py bin and buildout run tests test coverage and produce coverage reports bin and test bin and coverage test bin and coveragereport check and var and report and tinypie html out for coverage report run pep and pylint to check code style and search for potential bugs bin and pep bin and pylint ast visualizer  to see how tinypie ast for different language constructs looks like you can use gendot command line utility that is generated by buildout this utility generates dot file than can be further echo n foo  and bin and gendot digraph astgraph node shape plaintext fontsize  fontname courier  height  ranksep  edge arrowsize  node label block node label call node label id foo node label int  node node node node node node to draw graph and save it as a png image echo n foo  and bin and gendot funcall dot dot tpng o funcall png funcall dot bytecode assembler  converts assembly program into binary bytecodes the bytecode is further interpreted by the tinypie register based bytecode interpreter and virtual machine tinypie assembly language grammar program globals label and functiondefinition and instruction and nl and globals globals int nl label id nl functiondefinition def id args int  locals int nl instruction id nl and id operand nl and id operand  operand nl and id operand  operand nl  operand nl and call id  operand nl and loadk reg  int and string nl operand reg and id and string and int assembler yields the following components  code memory this is a bytearray containing bytecode instructions and their operands derived from the assembly source code  global data memory size the number of slots allocated in global memory for use with gstore and gload assembly commands  program entry point an address of main function def main  constant pool a list of objects integers strings function symbols that are not part of the code memory bytecode instructions refer to those objects via integer index here is a factorial function in tinypie language def factorial x if x  return  return x factorial x  print factorial  here is an equivalent tinypie assembly code def factorial args  locals  r holds argument n loadk r  lt r r r n  brf r cont if n  jump to cont loadk r  else return  ret cont loadk r  r  move r r r n sub r r r r n  call factorial r factorial n  mul r r r n n result of factorial n  ret def main args  locals  loadk r  call factorial r factorial  print r  halt here are the resulting elements produced by the bytecode assembler by translating the above assembly code constant pool  functionsymbol name factorial  address  args  locals       functionsymbol name main  address  args  locals    code memory                                                                                                                                       bytecode instructions are described in the following section register based bytecode interpreter and virtual machine  virtual machine architecture  ip instruction pointer register that points into the code memory at the next instruction to execute  cpu instruction dispatcher that simulates fetch decode execute cycle with a switch if elif statement in a loop reads bytecode at ip decodes its operands and executes corresponding operation  global data memory a list of global objects contents is accessed via integer index  code memory holds bytecode instructions and their operands  call stack holds stackframe objects with function return address parameters and local variables  stack frame a stackframe object that holds all required information to invoke a function function symbol function return address registers hold return value arguments locals and temporary values  fp frame pointer a special purpose register that points to the top of the function call stack  constant pool integers strings and function symbols all go into constant pool instructions refer to constant pool values via an integer index high level overview and tinypie and assembly and v and and and and and bytecode assembler and and and and and and and code memory bytecode and constant pool v and and and and and register based bytecode interpreter and virtual machine and and and and and and and and and and and and and function call stack and and and and constant pool and and and and and and and integer string and and and and and and and function symbol and and and and and and and and and and and and and stack frame and and and and and and and and and and and and and and function symbol fs main and and and and and and and return address  and and and and and and and and and ret and args and locals and and and and and and and and and registers r and r r and r r r and and and and and global data memory and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and stack frame and and and and and and and and and and and and and and and and function symbol fs fact and and and and and and and and and and return address  and and and and and and and and and and ret and args and locals and and and and and code memory and and and and and registers r and r r r and r and and and and and bytecode and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and v and and and and and and and and and and and and and and and and and cpu and and and and and fetch decode execute and and and and and and and and and and and and and and and bytecode instructions for tinypie vm index serves as an opcode instructions none instruction add  reg reg reg  a b c r a r b and r c instruction sub  reg reg reg  a b c r a r b r c instruction mul  reg reg reg  a b c r a r b r c instruction lt  reg reg reg  a b c r a r b r c instruction eq  reg reg reg  a b c r a r b r c instruction loadk  reg pool  a b r a constpool b instruction gload  reg pool  a b r a globals b instruction gstore  pool reg  a b globals a r b instruction ret  instruction halt  instruction br  int  a branch to a instruction brt  reg int  a b r a is true branch to b instruction brf  reg int  a b r a is false branch to b instruction move  reg reg  a b r a r b instruction print  reg  a print r a instruction call  func reg  a b call a r b  tinypie vm comes with a tpvm command line utility bin and tpvm h usage tpvm input file if no input file is provided stdin is used by default options h help show this help message and exit i file input file input file defaults to standard input c coredump print coredump to standard output d disasm print disassembled code to standard output t trace print execution trace example output fact tps def fact args  locals  r holds argument n loadk r  lt r r r n  brf r cont if n  jump to cont loadk r  else return  ret cont loadk r  r  move r r r n sub r r r r n  call fact r fact n  mul r r r n n result of fact n  ret def main args  locals  loadk r  call fact r fact  print r  halt bin and tpvm coredump disasm trace i and tmp and fact tps  loadk r   main registers and calls main  call  fact  r main registers and  calls main  loadk r   fact registers and  and calls main fact  lt r r r fact registers and  and  calls main fact  brf r  fact registers and  and   calls main fact  loadk r   fact registers and  and   calls main fact  move r r fact registers and  and   calls main fact  sub r r r fact registers and  and   calls main fact  call  fact  r fact registers and  and   calls main fact  loadk r   fact registers and  and calls main fact fact  lt r r r fact registers and  and  calls main fact fact  brf r  fact registers and  and   calls main fact fact  loadk r   fact registers and  and   calls main fact fact  move r r fact registers and  and   calls main fact fact  sub r r r fact registers and  and   calls main fact fact  call  fact  r fact registers and  and   calls main fact fact  loadk r   fact registers and  and calls main fact fact fact  lt r r r fact registers and  and  calls main fact fact fact  brf r  fact registers and  and   calls main fact fact fact  loadk r   fact registers and  and   calls main fact fact fact  ret fact registers  and  and   calls main fact fact fact  mul r r r fact registers  and  and   calls main fact fact  ret fact registers  and  and   calls main fact fact  mul r r r fact registers  and  and   calls main fact  ret fact registers  and  and   calls main fact  print r main registers  and  calls main constant pool  functionsymbol name fact  address  args  locals       functionsymbol name main  address  args  locals    code memory                                                                                                                                       disassembly  loadk r    lt r r r  brf r   loadk r    ret  loadk r    move r r  sub r r r  call  fact  r  mul r r r  ret  loadk r    call  fact  r  print r  halt ast tac three address code tac bytecode assembly vm in c and c and and here we go the joy of manual memory management
1562095,  requirements  how to build  the code is minified using uglifyjs using the following command uglifyjs o tmpload min js tmpload js questions  contact me on github suggestions  see above
2913921, google closure linter support for sublime text   this project provide a plugin to add google closure linter support for sublime text   closure linter run closure linter ctrl and shift and j closure linter show closure linter result closure linter fix javascript style highlight error line by click on the result view ignore specific errors in result view cross platform support windows linux and mac os x requirements  installation  download and extract to sublime text  packages folder windows appdata sublime text  packages mac os x and library and application support and sublime text  and packages linux and config and sublime text  and packages how to use  using the command palette windows and linux ctrl and shift and p osx command and shift and p then search for closure linter run closure linter ctrl and shift and j closure linter fix javascript style ctrl and alt and shift and j closure linter show closure linter result find them in tools menu tools lint run closure linter tools lint fix javascript style tools lint show closure linter result open up a js file and hit ctrl and shift and j to run closure linter an new output panel will appear giving you the closure linter results screenshots   settings can be opened via the command palette or the preferences package settings closure linter settings  user menu entry and and path to the gjslint gjslintpath gjslint  and and flags pass to gjslint gjslintflags  and and path to the fixjsstyle fixjsstylepath fixjsstyle  and and flags pass to fixjsstyle fixjsstyleflags  and and ignore errors regex ignoreerrors  and and expected an identifier and instead saw undefined a reserved word  and and debug flag debug false new bsd license  copyright c  robin zhong fbzhong gmail com all rights reserved redistribution and use in source and binary forms with or without modification are permitted provided that the following conditions are met redistributions of source code must retain the above copyright notice this list of conditions and the following disclaimer redistributions in binary form must reproduce the above copyright notice this list of conditions and the following disclaimer in the documentation and and or other materials provided with the distribution neither the name of the robin zhong nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission this software is provided by the copyright holders and contributors as is and any express or implied warranties including but not limited to the implied warranties of merchantability and fitness for a particular purpose are disclaimed in no event shall copyright holder be liable for any direct indirect incidental special exemplary or consequential damages including but not limited to procurement of substitute goods or services loss of use data or profits or business interruption however caused and on any theory of liability whether in contract strict liability or tort including negligence or otherwise arising in any way out of the use of this software even if advised of the possibility of such damage
2055773, a device testing theatre kindof a dumb one just having some fun with long polling  drop the htaccess file and the drive in folder into your web project s root directory if you already have an htaccess file drop the contents of this one into yours  open up any page in that web project that ends with a html file extension  do it again on another browser or device and another one as you navigate to other pages on that site the devices will sync you ll need an apache web server with php you ll need write permissions set on that txt file you have to open files by their html filename even index html for the love of god don t deploy a live site with this script enabled
1793606, dominodes  a chef resource for mutual exclusion of blocks of recipe code useful for cross cluster rolling restarts installation  gem install knife github cookbooks knife cookbook github install websterclay and chef dominodes this cookbook implements a lwrp that exposes a new dominodes resource with two actions execute and release the dominodes resources expects a name and a recipe attribute which is expected to be a block of recipe code the provided recipe block will never be applied on more than one node in your cluster simultaneously dominodes rollingapacherestarts recipe do execute service apache restart end action nothing template and etc and www and configures apache conf do notifies execute dominodes rollingapacherestarts you can also notify the release action to release the lock used for mutual exclusion if you need to for some reason notifies release dominodes rollingapacherestarts how it works  to facilitate the mutual execution of the embedded recipe a data bag item is created and used as a lock the execution of the resource loops while attempting to obtain the lock when it is in a free state by default the recipe will give up on obtaining the lock after  hour you can adjust this behavior by setting the timeout directive to the desired number of seconds the recipe block inside a dominodes resources is essentially an in line chef run this means that the resources within this block cannot interact with resources outside e g  manipulating notifies here s my test recipe dominodes testwithuptime do recipe do execute hostname execute date execute sleep  execute hostname execute date end and here s how it looks while executing ec     compute  amazonaws com tue  may     and  info execute hostname sh hostname ec     compute  amazonaws com ip     ec     compute  amazonaws com tue  may     and  info execute hostname ran successfully ec     compute  amazonaws com tue  may     and  info execute date sh date ec     compute  amazonaws com tue may     utc  ec     compute  amazonaws com tue  may     and  info execute date ran successfully ec     compute  amazonaws com tue  may     and  info execute sleep  sh sleep  ec     compute  amazonaws com tue  may     and  info execute sleep  ran successfully ec     compute  amazonaws com tue  may     and  info execute hostname sh hostname ec     compute  amazonaws com ip     ec     compute  amazonaws com tue  may     and  info execute hostname ran successfully ec     compute  amazonaws com tue  may     and  info execute date sh date ec     compute  amazonaws com tue may     utc  ec     compute  amazonaws com tue  may     and  info execute date ran successfully ec     compute  amazonaws com tue  may     and  info chef run complete in   seconds ec     compute  amazonaws com tue  may     and  info running report handlers ec     compute  amazonaws com tue  may     and  info report handlers complete ec     compute  amazonaws com tue  may     and  info execute hostname sh hostname ec     compute  amazonaws com domu     e f ec     compute  amazonaws com tue  may     and  info execute hostname ran successfully ec     compute  amazonaws com tue  may     and  info execute date sh date ec     compute  amazonaws com tue may     utc  ec     compute  amazonaws com tue  may     and  info execute date ran successfully ec     compute  amazonaws com tue  may     and  info execute sleep  sh sleep  ec     compute  amazonaws com tue  may     and  info execute sleep  ran successfully ec     compute  amazonaws com tue  may     and  info execute hostname sh hostname ec     compute  amazonaws com domu     e f ec     compute  amazonaws com tue  may     and  info execute hostname ran successfully ec     compute  amazonaws com tue  may     and  info execute date sh date ec     compute  amazonaws com tue may     utc  ec     compute  amazonaws com tue  may     and  info execute date ran successfully ec     compute  amazonaws com tue  may     and  info chef run complete in   seconds ec     compute  amazonaws com tue  may     and  info running report handlers ec     compute  amazonaws com tue  may     and  info report handlers complete locks should be cleaned up even if exceptions are raised in the critical section however if you somehow work yourself into a situation that requires clearing a lock manually you can do so with knife knife data bag edit dominodes testwithuptime jesse newland jesse websterclay com jnewland jnewland on freenode author jesse newland jesse websterclay com copyright copyright c  webster clay llc license apache license version   licensed under the apache license version   the license you may not use this file except in compliance with the license you may obtain a copy of the license at unless required by applicable law or agreed to in writing software distributed under the license is distributed on an as is basis without warranties or conditions of any kind either express or implied see the license for the specific language governing permissions and limitations under the license
420979, slideshow slideshow slideshow slideshow timeout  speed  slideshow other slideshow slideshow the plugin expects all images to be hidden if you have a conditional js class on the body element you can simply use the following css js slideshow li display none this is the fastest and preferred solution but if you really want to you could do this with jquery instead slideshow li hide parent slideshow this functionality could easily be included in the plugin but since it s way better to just use css for this stuff i deliberately left it out if you re using position absolute to place the slides on top of each other the first slide you ll see is in fact the last slide in the html users without javascript enabled will only see this slide however as soon as slideshow is invoked the slideshow will start at slide  which is the first slide in the html to prevent users from seeing the last slide before the plugin is loaded and to prevent users without javascript from seeing the last slide instead of the first slide in the markup you can use css the following line of css hides all slideshow elements through css  until the plugin makes them visible again that is slideshow li display none the first slideshow element however can still be visible slideshow li first child display block sadly this won t work on ie since this browser doesn t support the first child pseudo class if you want to support ie as well you could add a first child class to the first slideshow element and then use something like the following slideshow li first child slideshow li first child display block by using these few lines of css slideshow flickering is successfully avoided
511316, naive wrapper around libgeoip  install libgeoip  shared libraries  download geolitecity dat  and place it in and usr and local and share and geoip see note below on file placement  run node waf configure build  test node examples and lookup js note these wrappers will not work with the database that is installed by default when you install libgeoip you must download the city version of the database note everything should work out of the box if the database is placed in and usr and local and share and geoip otherwise you might need to tweak the examples to match your placement of the database libgeoip geolitecity dat
2008473, what is hermes  hermes is a simple opensource middleware for communicating applications hermes follows the publish and subscribe messaging pattern where senders publishers instead of send the messages directly to receivers subscribers  they publish the messages to a centralized repository hermes in this case characterized into topics subscribers express interest in one or more topics how is hermes different than any other pub and sub application  the power of hermes resides in its super simple protocol hermes has a rest api to manage groups topics and push messages that publishers can use subscribers poll messages from an atom feed hermes has also a web portal that you can use to administrate topics groups and to see some statistics you can even push messages from the web portal hermes is not biztalk  hermes is not a message broker but a publish and subscribe infrastructure hermes doesn t know what messages has receive what subscriber instead hermes provides a paginated atom feed that subscribers can easily navigate how does it work  hermes uses mongodb to store messages and the wcf web api despite that hermes is built on the net framework the rest api could be used in almost all languages and devices enhance the portal add support for long polling even if we have some spikes of this we are probabily open a new opensource project for doing this create a real scenario application create more client examples in different technologies add support for serialization and deserialization of messages in the net client javascript client
2678762, the fastest json parser and serializer for objective c why ksjson  ksjson is simply the fastest objective c based json converter there is there are two files to add to your project ksjson h and ksjson m there are two api calls serializeobject and deserializestring that s it no extra dependencies no special include paths no extra linker options no pollution of nsarray and friends with helper categories that might clash with another library ksjson includes  unit tests which have  code coverage ksjson compiles cleanly with all warnings enabled including pedantic the armv object code for ksjson weighs in at  kilobytes ksjson supports compiling with or without arc installation  copy ksjson h and ksjson m into your project nserror error id container somewhere getcontainer nsstring jsonstring ksjson serializeobject container error error nserror error nsstring jsonstring somewhere getjsonstring id container ksjson deserializestring jsonstring error error permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files the software  to deal in the software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and and or sell copies of the software and to permit persons to whom the software is furnished to do so subject to the following conditions the above copyright notice and this permission notice shall remain in place in the source code the software is provided as is  without warranty of any kind express or implied including but not limited to the warranties of merchantability fitness for a particular purpose and noninfringement in no event shall the authors or copyright holders be liable for any claim damages or other liability whether in an action of contract tort or otherwise arising from out of or in connection with the software or the use or other dealings in the software
1302491, server rtmp server stream rtmp stream to publish token optional camerawidth default  cameraheight default  camerafps default  raw html flashvars server rtmp and and localhost and live stream plop bgcolor ffffff width  height  name haxe quality high align middle allowscriptaccess always type application and x shockwave flash with swfobject var flashvars server rtmp and and localhost and live  stream plop var params var attributes swfobject embedswf webcam swf  myid          expressinstall swf  flashvars params attributes debug version make debug release version make release original code haxe video by nicolas cannasse copyright c  nicolas cannasse copyright c  af
1878910,
1829783, this is a very basic couchapp that allows you to browse data and applications stored within couchdb with a ui that is focused on mobile devices mobile futon is a plain couchapp so to get started just git clone git github com daleharvey and mobilefuton git cd mobilefuton couchapp init
297776, at the moment i have no need for the xls writing parts so won t be maintaining them i m happy to receive patches though
550219, large strings of markup inside your javascript look like shit jup is a fast json to markupup language engine that fixes this problem javascript div  class foo  some text  br jup is simple you provide an array arrays can be nested the first arg is a string which is the tag name of the element to get rendered an array can contain an object literal this will represent the attributes of the element to get rendered you can also add content content should be of type string javascript var html jup html div  span  class heading  fooooooo  br  span  class heading  fooooooo  br  span br using one of the data structures described is easy pass it to the html method of jup and it will render out the html javascript var data name hijnx  url github com and hijnx  cities new york ny  san francisco ca  name marak squires  url github com and marak  cities brooklyn ny  new york ny  var html jup html data div  name name  jup html data span  name  br jup implements a mustache like supplant feature tokens get filled in each time you use a structure this makes merging data into a structure is easy just make it the first parameter of the html function no special keys or cryptic symbols like cls for class here are some more examples javascript
362532, openlayersplus is a collection of behaviors that work with version  and up this module requires the openlayers module but not vice versa this provides the following functionality blocktoggle a version of blockswitcher that toggles between two different layers only useful for situations in which layers represent the same data in slightly different ways legend a block in a corner of a map that provides information on layers popup an interaction with point based clustered maps that allows clicking on points that results in scanning between items tooltip an interaction with point based maps that results in following links on hover scale points dynamic styling changing point radii based on a certain value this module does not provide thorough theming or accessory images it s the responsibility of the site builder to tune styling
2676257,  simplify your bloated css with this drag and drop css compressor
1973586, zend framework quick start  this repository tracks the zend framework quickstart found here the purpose of this repository is several support ongoing changes and development of the quick start code base provide a snapshot of how the quick start might evolve in zf provide baselines for benchmarking different mvc prototypes for zf this branch master tracks zend framework   you should symlink the zf   library into library and zend and or ensure it s on the includepath in order to run the quick start
2300753, msd examples  example code for processing the million song database this repostory contains code that can be used to process the million song dataset the million song dataset is a freely available collection of audio features and metadata for a million contemporary popular music tracks available at its purposes are to encourage research on algorithms that scale to commercial sizes to provide a reference dataset for evaluating research as a shortcut alternative to creating a large dataset with the echo nests api to help new researchers get started in the mir field the core of the dataset is the feature analysis and metadata for one million songs provided by the echo nest the dataset does not include any audio only the derived features note however that sample audio can be fetched from services like digital using code we provide additional datasets have been attached to the million song dataset so far they contain lyrics and cover songs the million song dataset started as a collaborative project between the echo nest and labrosa it was supported in part by the nsf these examples depend on mrjob a python library for running mapreduce jobs on hadoop or amazon web services see msd data on s  these examples use msd data that has been loaded on to s at s and and tbmmsd there are around  files each with about  sets track data each one set per line where each line is represented by  fields as described here except that in the flat file format the track id field has been moved from field  to the first field in the repository you will find tiny dat which contains data for  tracks map reduce jobs  finds the most dense and the least dense songs density py python density py tiny dat this will run the job on ec map reduce on  small instances note that you have to add the track py code to t tar gz with tar cvfz t tar gz track py to run the job on  cpus on all of the msd use python density py num ec instances  python archive t tar gz r emr s and and tbmmsd and tsv output dat
818814, since rails   has view inheritance built in it effectively renders this gem useless the amount of time and effort to get all the issues sorted and tests added are too significant to warrant any more releases if anyone is interested in taking over the project please let me know if you are confused about the difference to some other similarly named projects please read on when using rails  the generator only generates erb templates whereas using rails  it generates erb or haml templates accordingly as a rails plugin rails  rails plugin install git and and github com and fredwu and inheritedresourcesviews git rails  script and plugin install git and and github com and fredwu and inheritedresourcesviews git as a gem gem install inheritedresourcesviews it is extremely simple to use inherited resources views the only step you need to do after the installation is to customise the default views rails  rails generate inheritedresourcesviews rails  script and generate inheritedresourcesviews please remember to restart your server this will generate a set of views in your app and views and inheritedresources folder edit away
1821906, sweetvimrspec makes running rspec specs in vim sweeter it has three modes run a whole file run just one focused test or run the previously run test the last option is particularly nice because it doesn t matter where you are in the project you can still run the last spec without returning to the spec buffer the output is formatted for vim folding and output to a quickfix buffer so you can easily navigate all the errors in your specs sweetvimrspec supports both rspec  and rspec  sweetvimrspec has the following commands runs all specs in the current buffer runs a focused spec at the current line the line your cursor is on in the current buffer runs the last spec no matter where your cursor currently these are the mappings that i use i have not included them in the plugin so as not to overwrite mappings you already have map d r sweetvimrspecrunfile cr cmd r or apple r map d r sweetvimrspecrunfocused cr shift cmd r map m d r sweetvimrspecrunprevious cr opt cmd r simply copy these into your vimrc to activate them note the m d r mapping requires set macmeta to navigate the quickfix buffer output efficiently you should be familiar with vim folding take a look a h usr for more information passing specs can optionally be output to the quickfix list setting the sweetvimrspecshowpassing to true will enable this behavior you can do this in your shell export sweetvimrspecshowpassing true for bash zsh or in your vimrc let sweetvimrspecshowpassing true an output window that shows rspec executing this is beta software it most likely has minor bugs i ve personally used it but other platforms and installations will be different from mine and may cause problems this software is only tested on macvim    if you find bugs report them better yet fix them and i ll include the fixes here
2583066, license mit see included license file for full license supported controllers  logitech chillstream on windows playstation  on mac os x xbox  on mac os x and windows how to use input js in three steps  load your copy of input js into your webpage create the device object var gamepad window addeventlistener mozgamepadconnected  function e gamepad new input device e gamepad use it if gamepad buttons buttona player jump player move gamepad buttons leftstickx gamepad buttons leftsticky there are  properties on the input device object axes an object that holds all of axis properties they each return a value from   to and   leftstickx leftsticky rightstickx rightstickx buttons an object that holds all of the button properties they each return a value from   to   buttons can be digital or analog abutton cross on the ps bbutton circle on the ps xbutton triangle on the ps ybutton square on the ps leftstickbutton l on the ps rightstickbutton r on the ps startbutton backbutton select on the ps homebutton xbox or ps button in the middle of the controller padup up on the digital pad paddown down on the digital pad padleft left on the digital pad padright right on the digital pad lefttrigger left bumper on the xbox  l on the ps righttrigger right bumper on the xbox  r on the ps lefttrigger left trigger on the xbox  l on the ps righttrigger right trigger on the xbox  r on the ps connected a boolean that returns the current connected state of the device id a string with the usb vendor id usb device id and os device name index a number starting at zero that represents the order the device was plugged in persists across reconnects
2557253, stanford ai class algorithms  this is the unofficial code chrestomathy repository for the stanford online introduction to artificial intelligence  course based on stanford cs the course focuses on machine learning probabilistic reasoning robotics and natural language processing implementations of any algorithms learned in the course can be developed in any language and put into this repository all code submitted to this repository will be available freely and licensed under the mit license  current available languages  clojure javascript how to use  the repository will be divided into separate directories for each unit in the class unit  unit  etc each unit will be divided into more directories for each language unit and python  unit and js  unit and python for each unit and language try to write the algorithms with as few external libraries as possible and keep the code commented unit tests for code or even better visualizers are very appreciated but not necessary to contribute fork the repository and add your code following the directory structure send a pull request as soon as you re done and your code will be merged as soon as possible new to git  check out any one of github s awesome guides  all code is released under the mit license 
228060, a super simple asynchronous python library for speaking with twitter s streaming api implemented basic authentication and non authenticating proxy support in the rudimentary http client the idea was to make the least effort possible to get things working all of the standard http client libraries seemed to block until the end of transmission making them inappropriate for use with the streaming api for a twisted solution see twitty twister other interesting python modules using the streaming api via different approaches are tweepy and instwitter py python   or higher if using python   also uses simplejson which is included in python   as json in order to achieve ssl support the asyncore implementation now depends upon tlslite there are no requirements beyond that the more elaborate example programs fixreplies py and textori py require the python twitter library because i like to offer flexibility and started out not having the utmost confidence in my original hacked together http client although it s stood up fairly well  you have a choice of asynchronous io engines if you have pycurl installed you may choose its time tested non blocking http client implementation with a curl command line option used with any of the example applications if you have facebook and friendfeed s open source tornado  then you can choose its iostream sub module with a tornado option in all other cases it falls back to the basic implementation built upon the standard library invoked with async the twitasync py  twittornado py  and twitcurl py modules transparently expose the same basic interface to the main twitstream module all typical usage will focus on the twitstream module twitstream test is usable from the command line as a very rudimentary client twitstream test py spritzer twitstream test py track ftw fail twitstream test py follow       every usage of the streaming api requires authentication against a user account the methods available to the general public are spritzer  track  and follow as a simple implementation of a tweet display roughly modeled on twistori  textori py takes in keywords and pretty prints a live track ing stream from the keywords entered the below listed keywords are used as the default setting when no keywords are entered textori py love hate think believe feel wish the code in this example is most notable for the tweet text unescaping and parsing all accomplished in a single lengthy callable as a proof of concept there s the modestly named fixreplies py  which mines your friends followers favorites and and or conversations to derive a list of people to follow which can cause a lot of api calls at startup it then uses the streaming api s follow method to get all tweets to and from those chosen users for example the following command line will check your latest  status messages for people to whom you ve replied and filters out the people you do not already follow as well as a couple celebrities that everyone seems to empathize with fixreplies py pages  chat friends exclude stephenfryoprah for mac users there is a growl option which uses the growl notification framework and its python interface available in the growl sdk the class does its best at distinguishing between categories of status messages allowing a user to change display options this code example uses a variant upon the status pretty printing of the textori example the chief purpose of this example is to use twitter s traditional api in order to get more use out of the streaming api a proof of concept showing that you don t need to print out every tweet in the callback stats py sets up a counter and histogram on the status characteristic desired when halted interrupted with ctrl c or a keyboardinterrupt  it prints a summary of the statistic collected stats py friends stats py timezone max  if you want to examine statistics off line the latest batch of schema free json document stores like mongodb or apache couchdb  make for good candidates warehouse py runs the spritzer method and stores each status message in the designated data store the implementation currently includes adaptors for mongodb and couchdb and would welcome models for your favorite orm and rdbms warehouse py warehouse py mongo and and localhost  and db and twitcollection the most notable addition in this example is the correct handling of delete updates it attempts to delete the referenced status message if it is in the database the interface provides relatively low level specialized streaming http get and post classes currently geared specifically towards twitter and provided in asynchat  tornado iostream  and libcurl flavors  a general twitstream function that accepts an api method name and routes the software there and individual functions that match the api methods including spritzer  track  and follow each of these returns a request like object that when invoked with the run method opens the connection and continues into a loop until interrupted the only programming you need to provide is a function or callable that gets called with a dictionary containing the latest single status for example the basic shows the minimum amount of work needed to have a fully working program using some built in facilities for command line option processing documentation and prompting for a username and password for something truly minimal you could use something like this and usr and bin and env python import twitstream user test pass test define a function and callable to be called on every status def callback status print s t s n status get user  get screenname  status get text if name main call a specific api method from the twitstream module stream twitstream spritzer user pass callback loop forever on the streaming call stream run
